<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Abp.Fakes</name>
    </assembly>
    <members>
        <member name="T:Abp.Application.Features.Fakes.ShimFeature">
            <summary>Shim type of Abp.Application.Features.Feature</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeature.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeature.#ctor(Abp.Application.Features.Feature)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeature.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.AttributesGet">
            <summary>Sets the shim of Feature.get_Attributes()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of Feature.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ChildrenGet">
            <summary>Sets the shim of Feature.get_Children()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.CreateChildFeatureStringStringILocalizableStringILocalizableStringFeatureScopesIInputType">
            <summary>Sets the shim of Feature.CreateChildFeature(String name, String defaultValue, ILocalizableString displayName, ILocalizableString description, FeatureScopes scope, IInputType inputType)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.DefaultValueGet">
            <summary>Sets the shim of Feature.get_DefaultValue()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.DefaultValueSetString">
            <summary>Sets the shim of Feature.set_DefaultValue(String value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.DescriptionGet">
            <summary>Sets the shim of Feature.get_Description()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.DescriptionSetILocalizableString">
            <summary>Sets the shim of Feature.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.DisplayNameGet">
            <summary>Sets the shim of Feature.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.DisplayNameSetILocalizableString">
            <summary>Sets the shim of Feature.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.InputTypeGet">
            <summary>Sets the shim of Feature.get_InputType()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.InputTypeSetIInputType">
            <summary>Sets the shim of Feature.set_InputType(IInputType value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ItemGetString">
            <summary>Sets the shim of Feature.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of Feature.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.NameGet">
            <summary>Sets the shim of Feature.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.NameSetString">
            <summary>Sets the shim of Feature.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ParentGet">
            <summary>Sets the shim of Feature.get_Parent()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ParentSetFeature">
            <summary>Sets the shim of Feature.set_Parent(Feature value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ScopeGet">
            <summary>Sets the shim of Feature.get_Scope()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ScopeSetFeatureScopes">
            <summary>Sets the shim of Feature.set_Scope(FeatureScopes value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AllInstances.ToString01">
            <summary>Sets the shim of Feature.ToString()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AttributesGet">
            <summary>Sets the shim of Feature.get_Attributes()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of Feature.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeature.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeature.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ChildrenGet">
            <summary>Sets the shim of Feature.get_Children()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ConstructorStringStringILocalizableStringILocalizableStringFeatureScopesIInputType">
            <summary>Sets the shim of Feature.Feature(String name, String defaultValue, ILocalizableString displayName, ILocalizableString description, FeatureScopes scope, IInputType inputType)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.CreateChildFeatureStringStringILocalizableStringILocalizableStringFeatureScopesIInputType">
            <summary>Sets the shim of Feature.CreateChildFeature(String name, String defaultValue, ILocalizableString displayName, ILocalizableString description, FeatureScopes scope, IInputType inputType)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.DefaultValueGet">
            <summary>Sets the shim of Feature.get_DefaultValue()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.DefaultValueSetString">
            <summary>Sets the shim of Feature.set_DefaultValue(String value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.DescriptionGet">
            <summary>Sets the shim of Feature.get_Description()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.DescriptionSetILocalizableString">
            <summary>Sets the shim of Feature.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.DisplayNameGet">
            <summary>Sets the shim of Feature.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.DisplayNameSetILocalizableString">
            <summary>Sets the shim of Feature.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.InputTypeGet">
            <summary>Sets the shim of Feature.get_InputType()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.InputTypeSetIInputType">
            <summary>Sets the shim of Feature.set_InputType(IInputType value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ItemGetString">
            <summary>Sets the shim of Feature.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ItemSetStringObject">
            <summary>Sets the shim of Feature.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.NameGet">
            <summary>Sets the shim of Feature.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.NameSetString">
            <summary>Sets the shim of Feature.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ParentGet">
            <summary>Sets the shim of Feature.get_Parent()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ParentSetFeature">
            <summary>Sets the shim of Feature.set_Parent(Feature value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ScopeGet">
            <summary>Sets the shim of Feature.get_Scope()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ScopeSetFeatureScopes">
            <summary>Sets the shim of Feature.set_Scope(FeatureScopes value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeature.ToString">
            <summary>Sets the shim of Feature.ToString()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureChecker">
            <summary>Shim type of Abp.Application.Features.FeatureChecker</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureChecker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureChecker.#ctor(Abp.Application.Features.FeatureChecker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AbpSessionGet">
            <summary>Sets the shim of FeatureChecker.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AbpSessionSetIAbpSession">
            <summary>Sets the shim of FeatureChecker.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureChecker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AllInstances.AbpSessionGet">
            <summary>Sets the shim of FeatureChecker.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AllInstances.AbpSessionSetIAbpSession">
            <summary>Sets the shim of FeatureChecker.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AllInstances.FeatureValueStoreGet">
            <summary>Sets the shim of FeatureChecker.get_FeatureValueStore()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AllInstances.FeatureValueStoreSetIFeatureValueStore">
            <summary>Sets the shim of FeatureChecker.set_FeatureValueStore(IFeatureValueStore value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AllInstances.GetValueAsyncInt32String">
            <summary>Sets the shim of FeatureChecker.GetValueAsync(Int32 tenantId, String name)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.AllInstances.GetValueAsyncString">
            <summary>Sets the shim of FeatureChecker.GetValueAsync(String name)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureChecker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureChecker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureChecker.Bind(Abp.Application.Features.IFeatureChecker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureChecker.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.ConstructorIFeatureManager">
            <summary>Sets the shim of FeatureChecker.FeatureChecker(IFeatureManager featureManager)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.FeatureValueStoreGet">
            <summary>Sets the shim of FeatureChecker.get_FeatureValueStore()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.FeatureValueStoreSetIFeatureValueStore">
            <summary>Sets the shim of FeatureChecker.set_FeatureValueStore(IFeatureValueStore value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.GetValueAsyncInt32String">
            <summary>Sets the shim of FeatureChecker.GetValueAsync(Int32 tenantId, String name)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureChecker.GetValueAsyncString">
            <summary>Sets the shim of FeatureChecker.GetValueAsync(String name)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions">
            <summary>Shim type of Abp.Application.Features.FeatureCheckerExtensions</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.CheckEnabledAsyncIFeatureCheckerBooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.CheckEnabledAsync(IFeatureChecker featureChecker, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.CheckEnabledAsyncIFeatureCheckerInt32BooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.CheckEnabledAsync(IFeatureChecker featureChecker, Int32 tenantId, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.CheckEnabledAsyncIFeatureCheckerString">
            <summary>Sets the shim of FeatureCheckerExtensions.CheckEnabledAsync(IFeatureChecker featureChecker, String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.CheckEnabledIFeatureCheckerBooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.CheckEnabled(IFeatureChecker featureChecker, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.CheckEnabledIFeatureCheckerInt32BooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.CheckEnabled(IFeatureChecker featureChecker, Int32 tenantId, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.CheckEnabledIFeatureCheckerString">
            <summary>Sets the shim of FeatureCheckerExtensions.CheckEnabled(IFeatureChecker featureChecker, String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.GetValueIFeatureCheckerInt32String">
            <summary>Sets the shim of FeatureCheckerExtensions.GetValue(IFeatureChecker featureChecker, Int32 tenantId, String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.GetValueIFeatureCheckerString">
            <summary>Sets the shim of FeatureCheckerExtensions.GetValue(IFeatureChecker featureChecker, String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledAsyncIFeatureCheckerBooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabledAsync(IFeatureChecker featureChecker, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledAsyncIFeatureCheckerInt32BooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabledAsync(IFeatureChecker featureChecker, Int32 tenantId, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledAsyncIFeatureCheckerInt32String">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabledAsync(IFeatureChecker featureChecker, Int32 tenantId, String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledAsyncIFeatureCheckerString">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabledAsync(IFeatureChecker featureChecker, String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledIFeatureCheckerBooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabled(IFeatureChecker featureChecker, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledIFeatureCheckerInt32BooleanStringArray">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabled(IFeatureChecker featureChecker, Int32 tenantId, Boolean requiresAll, String[] featureNames)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledIFeatureCheckerInt32String">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabled(IFeatureChecker featureChecker, Int32 tenantId, String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureCheckerExtensions.IsEnabledIFeatureCheckerString">
            <summary>Sets the shim of FeatureCheckerExtensions.IsEnabled(IFeatureChecker featureChecker, String name)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase">
            <summary>Shim type of Abp.Application.Features.FeatureDefinitionContextBase</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.#ctor(Abp.Application.Features.FeatureDefinitionContextBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.AllInstances.CreateStringStringILocalizableStringILocalizableStringFeatureScopesIInputType">
            <summary>Sets the shim of FeatureDefinitionContextBase.Create(String name, String defaultValue, ILocalizableString displayName, ILocalizableString description, FeatureScopes scope, IInputType inputType)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.AllInstances.GetOrNullString">
            <summary>Sets the shim of FeatureDefinitionContextBase.GetOrNull(String name)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.Bind(Abp.Application.Features.IFeatureDefinitionContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.Constructor">
            <summary>Sets the shim of FeatureDefinitionContextBase.FeatureDefinitionContextBase()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.CreateStringStringILocalizableStringILocalizableStringFeatureScopesIInputType">
            <summary>Sets the shim of FeatureDefinitionContextBase.Create(String name, String defaultValue, ILocalizableString displayName, ILocalizableString description, FeatureScopes scope, IInputType inputType)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDefinitionContextBase.GetOrNullString">
            <summary>Sets the shim of FeatureDefinitionContextBase.GetOrNull(String name)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureDependencyContext">
            <summary>Shim type of Abp.Application.Features.FeatureDependencyContext</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.#ctor(Abp.Application.Features.FeatureDependencyContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.AllInstances.FeatureCheckerGet">
            <summary>Sets the shim of FeatureDependencyContext.get_FeatureChecker()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.AllInstances.FeatureCheckerSetIFeatureChecker">
            <summary>Sets the shim of FeatureDependencyContext.set_FeatureChecker(IFeatureChecker value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.AllInstances.IocResolverGet">
            <summary>Sets the shim of FeatureDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.AllInstances.IocResolverSetIIocResolver">
            <summary>Sets the shim of FeatureDependencyContext.set_IocResolver(IIocResolver value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.AllInstances.TenantIdGet">
            <summary>Sets the shim of FeatureDependencyContext.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of FeatureDependencyContext.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.Bind(Abp.Application.Features.IFeatureDependencyContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.ConstructorIIocResolverIFeatureChecker">
            <summary>Sets the shim of FeatureDependencyContext.FeatureDependencyContext(IIocResolver iocResolver, IFeatureChecker featureChecker)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.FeatureCheckerGet">
            <summary>Sets the shim of FeatureDependencyContext.get_FeatureChecker()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.FeatureCheckerSetIFeatureChecker">
            <summary>Sets the shim of FeatureDependencyContext.set_FeatureChecker(IFeatureChecker value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.IocResolverGet">
            <summary>Sets the shim of FeatureDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.IocResolverSetIIocResolver">
            <summary>Sets the shim of FeatureDependencyContext.set_IocResolver(IIocResolver value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.TenantIdGet">
            <summary>Sets the shim of FeatureDependencyContext.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyContext.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of FeatureDependencyContext.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureDependencyExtensions">
            <summary>Shim type of Abp.Application.Features.FeatureDependencyExtensions</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDependencyExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDependencyExtensions.IsSatisfiedIFeatureDependencyIFeatureDependencyContext">
            <summary>Sets the shim of FeatureDependencyExtensions.IsSatisfied(IFeatureDependency featureDependency, IFeatureDependencyContext context)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureDictionary">
            <summary>Shim type of Abp.Application.Features.FeatureDictionary</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.#ctor(Abp.Application.Features.FeatureDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDictionary.AddAllFeatures">
            <summary>Sets the shim of FeatureDictionary.AddAllFeatures()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDictionary.AddFeatureRecursivelyFeature">
            <summary>Sets the shim of FeatureDictionary.AddFeatureRecursively(Feature feature)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDictionary.AllInstances.AddAllFeatures">
            <summary>Sets the shim of FeatureDictionary.AddAllFeatures()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDictionary.AllInstances.AddFeatureRecursivelyFeature">
            <summary>Sets the shim of FeatureDictionary.AddFeatureRecursively(Feature feature)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Abp.Application.Features.Feature}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Abp.Application.Features.Feature}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,Abp.Application.Features.Feature}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.Generic.IDictionary{System.String,Abp.Application.Features.Feature})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,Abp.Application.Features.Feature})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureDictionary.Constructor">
            <summary>Sets the shim of FeatureDictionary.FeatureDictionary()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureProvider">
            <summary>Shim type of Abp.Application.Features.FeatureProvider</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureProvider.#ctor(Abp.Application.Features.FeatureProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimFeatureProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimFeatureProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimFeatureProvider.Constructor">
            <summary>Sets the shim of FeatureProvider.FeatureProvider()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimNullFeatureValueStore">
            <summary>Shim type of Abp.Application.Features.NullFeatureValueStore</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.#ctor(Abp.Application.Features.NullFeatureValueStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.AllInstances.GetValueOrNullAsyncInt32Feature">
            <summary>Sets the shim of NullFeatureValueStore.GetValueOrNullAsync(Int32 tenantId, Feature feature)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.Bind(Abp.Application.Features.IFeatureValueStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.Constructor">
            <summary>Sets the shim of NullFeatureValueStore.NullFeatureValueStore()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.GetValueOrNullAsyncInt32Feature">
            <summary>Sets the shim of NullFeatureValueStore.GetValueOrNullAsync(Int32 tenantId, Feature feature)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.InstanceGet">
            <summary>Sets the shim of NullFeatureValueStore.get_Instance()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimNullFeatureValueStore.StaticConstructor">
            <summary>Sets the shim of NullFeatureValueStore.NullFeatureValueStore()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute">
            <summary>Shim type of Abp.Application.Features.RequiresFeatureAttribute</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.#ctor(Abp.Application.Features.RequiresFeatureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.AllInstances.FeaturesGet">
            <summary>Sets the shim of RequiresFeatureAttribute.get_Features()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.AllInstances.FeaturesSetStringArray">
            <summary>Sets the shim of RequiresFeatureAttribute.set_Features(String[] value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.AllInstances.RequiresAllGet">
            <summary>Sets the shim of RequiresFeatureAttribute.get_RequiresAll()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.AllInstances.RequiresAllSetBoolean">
            <summary>Sets the shim of RequiresFeatureAttribute.set_RequiresAll(Boolean value)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.ConstructorStringArray">
            <summary>Sets the shim of RequiresFeatureAttribute.RequiresFeatureAttribute(String[] features)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.FeaturesGet">
            <summary>Sets the shim of RequiresFeatureAttribute.get_Features()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.FeaturesSetStringArray">
            <summary>Sets the shim of RequiresFeatureAttribute.set_Features(String[] value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.RequiresAllGet">
            <summary>Sets the shim of RequiresFeatureAttribute.get_RequiresAll()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimRequiresFeatureAttribute.RequiresAllSetBoolean">
            <summary>Sets the shim of RequiresFeatureAttribute.set_RequiresAll(Boolean value)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency">
            <summary>Shim type of Abp.Application.Features.SimpleFeatureDependency</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.#ctor(Abp.Application.Features.SimpleFeatureDependency)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.AllInstances.FeaturesGet">
            <summary>Sets the shim of SimpleFeatureDependency.get_Features()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.AllInstances.FeaturesSetStringArray">
            <summary>Sets the shim of SimpleFeatureDependency.set_Features(String[] value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.AllInstances.IsSatisfiedAsyncIFeatureDependencyContext">
            <summary>Sets the shim of SimpleFeatureDependency.IsSatisfiedAsync(IFeatureDependencyContext context)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.AllInstances.RequiresAllGet">
            <summary>Sets the shim of SimpleFeatureDependency.get_RequiresAll()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.AllInstances.RequiresAllSetBoolean">
            <summary>Sets the shim of SimpleFeatureDependency.set_RequiresAll(Boolean value)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.Bind(Abp.Application.Features.IFeatureDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.ConstructorBooleanStringArray">
            <summary>Sets the shim of SimpleFeatureDependency.SimpleFeatureDependency(Boolean requiresAll, String[] features)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.ConstructorStringArray">
            <summary>Sets the shim of SimpleFeatureDependency.SimpleFeatureDependency(String[] features)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.FeaturesGet">
            <summary>Sets the shim of SimpleFeatureDependency.get_Features()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.FeaturesSetStringArray">
            <summary>Sets the shim of SimpleFeatureDependency.set_Features(String[] value)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.IsSatisfiedAsyncIFeatureDependencyContext">
            <summary>Sets the shim of SimpleFeatureDependency.IsSatisfiedAsync(IFeatureDependencyContext context)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.RequiresAllGet">
            <summary>Sets the shim of SimpleFeatureDependency.get_RequiresAll()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.ShimSimpleFeatureDependency.RequiresAllSetBoolean">
            <summary>Sets the shim of SimpleFeatureDependency.set_RequiresAll(Boolean value)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubFeature">
            <summary>Stub type of Abp.Application.Features.Feature</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeature.#ctor(System.String,System.String,Abp.Localization.ILocalizableString,Abp.Localization.ILocalizableString,Abp.Application.Features.FeatureScopes,Abp.UI.Inputs.IInputType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeature.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeature.InitializeStub">
            <summary>Initializes a new instance of type StubFeature</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeature.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeature.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeature.ToString">
            <summary>Sets the stub of Feature.ToString()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubFeature.ToString01">
            <summary>Sets the stub of Feature.ToString()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubFeatureChecker">
            <summary>Stub type of Abp.Application.Features.FeatureChecker</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureChecker.#ctor(Abp.Application.Features.IFeatureManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureChecker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureChecker.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureChecker</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureChecker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureChecker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubFeatureDefinitionContextBase">
            <summary>Stub type of Abp.Application.Features.FeatureDefinitionContextBase</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDefinitionContextBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDefinitionContextBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDefinitionContextBase.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureDefinitionContextBase</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDefinitionContextBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDefinitionContextBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubFeatureDependencyContext">
            <summary>Stub type of Abp.Application.Features.FeatureDependencyContext</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDependencyContext.#ctor(Abp.Dependency.IIocResolver,Abp.Application.Features.IFeatureChecker)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDependencyContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDependencyContext.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureDependencyContext</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDependencyContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDependencyContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubFeatureDictionary">
            <summary>Stub type of Abp.Application.Features.FeatureDictionary</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDictionary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDictionary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubFeatureDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDictionary.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureDictionary</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDictionary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureDictionary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureDictionary.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubFeatureDictionary.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubFeatureProvider">
            <summary>Stub type of Abp.Application.Features.FeatureProvider</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureProvider.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureProvider</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubFeatureProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubFeatureProvider.SetFeatures(Abp.Application.Features.IFeatureDefinitionContext)">
            <summary>Sets the stub of FeatureProvider.SetFeatures(IFeatureDefinitionContext context)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubFeatureProvider.SetFeaturesIFeatureDefinitionContext">
            <summary>Sets the stub of FeatureProvider.SetFeatures(IFeatureDefinitionContext context)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubIFeatureChecker">
            <summary>Stub type of Abp.Application.Features.IFeatureChecker</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureChecker.#ctor">
            <summary>Initializes a new instance of type StubIFeatureChecker</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureChecker.Abp#Application#Features#IFeatureChecker#GetValueAsync(System.String)">
            <summary>Sets the stub of IFeatureChecker.GetValueAsync(String name)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureChecker.Abp#Application#Features#IFeatureChecker#GetValueAsync(System.Int32,System.String)">
            <summary>Sets the stub of IFeatureChecker.GetValueAsync(Int32 tenantId, String name)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureChecker.GetValueAsyncInt32String">
            <summary>Sets the stub of IFeatureChecker.GetValueAsync(Int32 tenantId, String name)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureChecker.GetValueAsyncString">
            <summary>Sets the stub of IFeatureChecker.GetValueAsync(String name)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubIFeatureConfiguration">
            <summary>Stub type of Abp.Application.Features.IFeatureConfiguration</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIFeatureConfiguration</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubIFeatureConfiguration.Abp#Application#Features#IFeatureConfiguration#Providers">
            <summary>Sets the stub of IFeatureConfiguration.get_Providers()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureConfiguration.ProvidersGet">
            <summary>Sets the stub of IFeatureConfiguration.get_Providers()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubIFeatureDefinitionContext">
            <summary>Stub type of Abp.Application.Features.IFeatureDefinitionContext</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureDefinitionContext.#ctor">
            <summary>Initializes a new instance of type StubIFeatureDefinitionContext</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureDefinitionContext.Abp#Application#Features#IFeatureDefinitionContext#Create(System.String,System.String,Abp.Localization.ILocalizableString,Abp.Localization.ILocalizableString,Abp.Application.Features.FeatureScopes,Abp.UI.Inputs.IInputType)">
            <summary>Sets the stub of IFeatureDefinitionContext.Create(String name, String defaultValue, ILocalizableString displayName, ILocalizableString description, FeatureScopes scope, IInputType inputType)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureDefinitionContext.Abp#Application#Features#IFeatureDefinitionContext#GetOrNull(System.String)">
            <summary>Sets the stub of IFeatureDefinitionContext.GetOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureDefinitionContext.CreateStringStringILocalizableStringILocalizableStringFeatureScopesIInputType">
            <summary>Sets the stub of IFeatureDefinitionContext.Create(String name, String defaultValue, ILocalizableString displayName, ILocalizableString description, FeatureScopes scope, IInputType inputType)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureDefinitionContext.GetOrNullString">
            <summary>Sets the stub of IFeatureDefinitionContext.GetOrNull(String name)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubIFeatureDependency">
            <summary>Stub type of Abp.Application.Features.IFeatureDependency</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureDependency.#ctor">
            <summary>Initializes a new instance of type StubIFeatureDependency</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureDependency.Abp#Application#Features#IFeatureDependency#IsSatisfiedAsync(Abp.Application.Features.IFeatureDependencyContext)">
            <summary>Sets the stub of IFeatureDependency.IsSatisfiedAsync(IFeatureDependencyContext context)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureDependency.IsSatisfiedAsyncIFeatureDependencyContext">
            <summary>Sets the stub of IFeatureDependency.IsSatisfiedAsync(IFeatureDependencyContext context)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubIFeatureDependencyContext">
            <summary>Stub type of Abp.Application.Features.IFeatureDependencyContext</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureDependencyContext.#ctor">
            <summary>Initializes a new instance of type StubIFeatureDependencyContext</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubIFeatureDependencyContext.Abp#Application#Features#IFeatureDependencyContext#FeatureChecker">
            <summary>Sets the stub of IFeatureDependencyContext.get_FeatureChecker()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureDependencyContext.FeatureCheckerGet">
            <summary>Sets the stub of IFeatureDependencyContext.get_FeatureChecker()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubIFeatureDependencyContext.Abp#Application#Features#IFeatureDependencyContext#IocResolver">
            <summary>Sets the stub of IFeatureDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureDependencyContext.IocResolverGet">
            <summary>Sets the stub of IFeatureDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubIFeatureDependencyContext.Abp#Application#Features#IFeatureDependencyContext#TenantId">
            <summary>Sets the stub of IFeatureDependencyContext.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureDependencyContext.TenantIdGet">
            <summary>Sets the stub of IFeatureDependencyContext.get_TenantId()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubIFeatureManager">
            <summary>Stub type of Abp.Application.Features.IFeatureManager</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureManager.#ctor">
            <summary>Initializes a new instance of type StubIFeatureManager</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureManager.Abp#Application#Features#IFeatureManager#Get(System.String)">
            <summary>Sets the stub of IFeatureManager.Get(String name)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureManager.Abp#Application#Features#IFeatureManager#GetAll">
            <summary>Sets the stub of IFeatureManager.GetAll()</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureManager.Abp#Application#Features#IFeatureManager#GetOrNull(System.String)">
            <summary>Sets the stub of IFeatureManager.GetOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureManager.GetAll">
            <summary>Sets the stub of IFeatureManager.GetAll()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureManager.GetOrNullString">
            <summary>Sets the stub of IFeatureManager.GetOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureManager.GetString">
            <summary>Sets the stub of IFeatureManager.Get(String name)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubIFeatureValueStore">
            <summary>Stub type of Abp.Application.Features.IFeatureValueStore</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureValueStore.#ctor">
            <summary>Initializes a new instance of type StubIFeatureValueStore</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubIFeatureValueStore.Abp#Application#Features#IFeatureValueStore#GetValueOrNullAsync(System.Int32,Abp.Application.Features.Feature)">
            <summary>Sets the stub of IFeatureValueStore.GetValueOrNullAsync(Int32 tenantId, Feature feature)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubIFeatureValueStore.GetValueOrNullAsyncInt32Feature">
            <summary>Sets the stub of IFeatureValueStore.GetValueOrNullAsync(Int32 tenantId, Feature feature)</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubNullFeatureValueStore">
            <summary>Stub type of Abp.Application.Features.NullFeatureValueStore</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubNullFeatureValueStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubNullFeatureValueStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubNullFeatureValueStore.InitializeStub">
            <summary>Initializes a new instance of type StubNullFeatureValueStore</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubNullFeatureValueStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubNullFeatureValueStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute">
            <summary>Stub type of Abp.Application.Features.RequiresFeatureAttribute</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequiresFeatureAttribute</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Application.Features.Fakes.StubRequiresFeatureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Application.Features.Fakes.StubSimpleFeatureDependency">
            <summary>Stub type of Abp.Application.Features.SimpleFeatureDependency</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubSimpleFeatureDependency.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubSimpleFeatureDependency.#ctor(System.Boolean,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubSimpleFeatureDependency.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Features.Fakes.StubSimpleFeatureDependency.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleFeatureDependency</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubSimpleFeatureDependency.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Features.Fakes.StubSimpleFeatureDependency.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimHasMenuItemDefinitionsExtensions">
            <summary>Shim type of Abp.Application.Navigation.HasMenuItemDefinitionsExtensions</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimHasMenuItemDefinitionsExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimHasMenuItemDefinitionsExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimHasMenuItemDefinitionsExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimHasMenuItemDefinitionsExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimHasMenuItemDefinitionsExtensions.GetItemByNameIHasMenuItemDefinitionsString">
            <summary>Sets the shim of HasMenuItemDefinitionsExtensions.GetItemByName(IHasMenuItemDefinitions source, String name)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimHasMenuItemDefinitionsExtensions.GetItemByNameOrNullIHasMenuItemDefinitionsString">
            <summary>Sets the shim of HasMenuItemDefinitionsExtensions.GetItemByNameOrNull(IHasMenuItemDefinitions source, String name)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimMenuDefinition">
            <summary>Shim type of Abp.Application.Navigation.MenuDefinition</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuDefinition.#ctor(Abp.Application.Navigation.MenuDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AddItemMenuItemDefinition">
            <summary>Sets the shim of MenuDefinition.AddItem(MenuItemDefinition menuItem)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.AddItemMenuItemDefinition">
            <summary>Sets the shim of MenuDefinition.AddItem(MenuItemDefinition menuItem)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.CustomDataGet">
            <summary>Sets the shim of MenuDefinition.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.CustomDataSetObject">
            <summary>Sets the shim of MenuDefinition.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.DisplayNameGet">
            <summary>Sets the shim of MenuDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.DisplayNameSetILocalizableString">
            <summary>Sets the shim of MenuDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.ItemsGet">
            <summary>Sets the shim of MenuDefinition.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.ItemsSetIListOfMenuItemDefinition">
            <summary>Sets the shim of MenuDefinition.set_Items(IList`1&lt;MenuItemDefinition&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.NameGet">
            <summary>Sets the shim of MenuDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.AllInstances.NameSetString">
            <summary>Sets the shim of MenuDefinition.set_Name(String value)</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuDefinition.Bind(Abp.Application.Navigation.IHasMenuItemDefinitions)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.ConstructorStringILocalizableStringObject">
            <summary>Sets the shim of MenuDefinition.MenuDefinition(String name, ILocalizableString displayName, Object customData)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.CustomDataGet">
            <summary>Sets the shim of MenuDefinition.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.CustomDataSetObject">
            <summary>Sets the shim of MenuDefinition.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.DisplayNameGet">
            <summary>Sets the shim of MenuDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.DisplayNameSetILocalizableString">
            <summary>Sets the shim of MenuDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.ItemsGet">
            <summary>Sets the shim of MenuDefinition.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.ItemsSetIListOfMenuItemDefinition">
            <summary>Sets the shim of MenuDefinition.set_Items(IList`1&lt;MenuItemDefinition&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.NameGet">
            <summary>Sets the shim of MenuDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuDefinition.NameSetString">
            <summary>Sets the shim of MenuDefinition.set_Name(String value)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition">
            <summary>Shim type of Abp.Application.Navigation.MenuItemDefinition</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.#ctor(Abp.Application.Navigation.MenuItemDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AddItemMenuItemDefinition">
            <summary>Sets the shim of MenuItemDefinition.AddItem(MenuItemDefinition menuItem)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.AddItemMenuItemDefinition">
            <summary>Sets the shim of MenuItemDefinition.AddItem(MenuItemDefinition menuItem)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.CustomDataGet">
            <summary>Sets the shim of MenuItemDefinition.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.CustomDataSetObject">
            <summary>Sets the shim of MenuItemDefinition.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.DisplayNameGet">
            <summary>Sets the shim of MenuItemDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.DisplayNameSetILocalizableString">
            <summary>Sets the shim of MenuItemDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.FeatureDependencyGet">
            <summary>Sets the shim of MenuItemDefinition.get_FeatureDependency()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.FeatureDependencySetIFeatureDependency">
            <summary>Sets the shim of MenuItemDefinition.set_FeatureDependency(IFeatureDependency value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.IconGet">
            <summary>Sets the shim of MenuItemDefinition.get_Icon()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.IconSetString">
            <summary>Sets the shim of MenuItemDefinition.set_Icon(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.IsEnabledGet">
            <summary>Sets the shim of MenuItemDefinition.get_IsEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of MenuItemDefinition.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.IsLeafGet">
            <summary>Sets the shim of MenuItemDefinition.get_IsLeaf()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.IsVisibleGet">
            <summary>Sets the shim of MenuItemDefinition.get_IsVisible()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.IsVisibleSetBoolean">
            <summary>Sets the shim of MenuItemDefinition.set_IsVisible(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.ItemsGet">
            <summary>Sets the shim of MenuItemDefinition.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.NameGet">
            <summary>Sets the shim of MenuItemDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.OrderGet">
            <summary>Sets the shim of MenuItemDefinition.get_Order()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.OrderSetInt32">
            <summary>Sets the shim of MenuItemDefinition.set_Order(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.PermissionDependencyGet">
            <summary>Sets the shim of MenuItemDefinition.get_PermissionDependency()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.PermissionDependencySetIPermissionDependency">
            <summary>Sets the shim of MenuItemDefinition.set_PermissionDependency(IPermissionDependency value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.RequiredPermissionNameGet">
            <summary>Sets the shim of MenuItemDefinition.get_RequiredPermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.RequiredPermissionNameSetString">
            <summary>Sets the shim of MenuItemDefinition.set_RequiredPermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.RequiresAuthenticationGet">
            <summary>Sets the shim of MenuItemDefinition.get_RequiresAuthentication()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.RequiresAuthenticationSetBoolean">
            <summary>Sets the shim of MenuItemDefinition.set_RequiresAuthentication(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.TargetGet">
            <summary>Sets the shim of MenuItemDefinition.get_Target()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.TargetSetString">
            <summary>Sets the shim of MenuItemDefinition.set_Target(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.UrlGet">
            <summary>Sets the shim of MenuItemDefinition.get_Url()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.AllInstances.UrlSetString">
            <summary>Sets the shim of MenuItemDefinition.set_Url(String value)</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.Bind(Abp.Application.Navigation.IHasMenuItemDefinitions)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.ConstructorStringILocalizableStringStringStringBooleanStringInt32ObjectIFeatureDependencyStringBooleanBooleanIPermissionDependency">
            <summary>Sets the shim of MenuItemDefinition.MenuItemDefinition(String name, ILocalizableString displayName, String icon, String url, Boolean requiresAuthentication, String requiredPermissionName, Int32 order, Object customData, IFeatureDependency featureDependency, String target, Boolean isEnabled, Boolean isVisible, IPermissionDependency permissionDependency)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.CustomDataGet">
            <summary>Sets the shim of MenuItemDefinition.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.CustomDataSetObject">
            <summary>Sets the shim of MenuItemDefinition.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.DisplayNameGet">
            <summary>Sets the shim of MenuItemDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.DisplayNameSetILocalizableString">
            <summary>Sets the shim of MenuItemDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.FeatureDependencyGet">
            <summary>Sets the shim of MenuItemDefinition.get_FeatureDependency()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.FeatureDependencySetIFeatureDependency">
            <summary>Sets the shim of MenuItemDefinition.set_FeatureDependency(IFeatureDependency value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.IconGet">
            <summary>Sets the shim of MenuItemDefinition.get_Icon()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.IconSetString">
            <summary>Sets the shim of MenuItemDefinition.set_Icon(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.IsEnabledGet">
            <summary>Sets the shim of MenuItemDefinition.get_IsEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.IsEnabledSetBoolean">
            <summary>Sets the shim of MenuItemDefinition.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.IsLeafGet">
            <summary>Sets the shim of MenuItemDefinition.get_IsLeaf()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.IsVisibleGet">
            <summary>Sets the shim of MenuItemDefinition.get_IsVisible()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.IsVisibleSetBoolean">
            <summary>Sets the shim of MenuItemDefinition.set_IsVisible(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.ItemsGet">
            <summary>Sets the shim of MenuItemDefinition.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.NameGet">
            <summary>Sets the shim of MenuItemDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.OrderGet">
            <summary>Sets the shim of MenuItemDefinition.get_Order()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.OrderSetInt32">
            <summary>Sets the shim of MenuItemDefinition.set_Order(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.PermissionDependencyGet">
            <summary>Sets the shim of MenuItemDefinition.get_PermissionDependency()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.PermissionDependencySetIPermissionDependency">
            <summary>Sets the shim of MenuItemDefinition.set_PermissionDependency(IPermissionDependency value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.RequiredPermissionNameGet">
            <summary>Sets the shim of MenuItemDefinition.get_RequiredPermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.RequiredPermissionNameSetString">
            <summary>Sets the shim of MenuItemDefinition.set_RequiredPermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.RequiresAuthenticationGet">
            <summary>Sets the shim of MenuItemDefinition.get_RequiresAuthentication()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.RequiresAuthenticationSetBoolean">
            <summary>Sets the shim of MenuItemDefinition.set_RequiresAuthentication(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.TargetGet">
            <summary>Sets the shim of MenuItemDefinition.get_Target()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.TargetSetString">
            <summary>Sets the shim of MenuItemDefinition.set_Target(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.UrlGet">
            <summary>Sets the shim of MenuItemDefinition.get_Url()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinition.UrlSetString">
            <summary>Sets the shim of MenuItemDefinition.set_Url(String value)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions">
            <summary>Shim type of Abp.Application.Navigation.MenuItemDefinitionExtensions</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.GetMenuItemIEnumerableOfMenuItemDefinitionString">
            <summary>Sets the shim of MenuItemDefinitionExtensions.GetMenuItem(IEnumerable`1&lt;MenuItemDefinition&gt; menuItems, String menuItemName)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.MoveMenuItemAfterIListOfMenuItemDefinitionStringString">
            <summary>Sets the shim of MenuItemDefinitionExtensions.MoveMenuItemAfter(IList`1&lt;MenuItemDefinition&gt; menuItems, String menuItemName, String targetMenuItemName)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.MoveMenuItemBeforeIListOfMenuItemDefinitionStringString">
            <summary>Sets the shim of MenuItemDefinitionExtensions.MoveMenuItemBefore(IList`1&lt;MenuItemDefinition&gt; menuItems, String menuItemName, String targetMenuItemName)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.MoveMenuItemToBottomIListOfMenuItemDefinitionString">
            <summary>Sets the shim of MenuItemDefinitionExtensions.MoveMenuItemToBottom(IList`1&lt;MenuItemDefinition&gt; menuItems, String menuItemName)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimMenuItemDefinitionExtensions.MoveMenuItemToTopIListOfMenuItemDefinitionString">
            <summary>Sets the shim of MenuItemDefinitionExtensions.MoveMenuItemToTop(IList`1&lt;MenuItemDefinition&gt; menuItems, String menuItemName)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimNavigationProvider">
            <summary>Shim type of Abp.Application.Navigation.NavigationProvider</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimNavigationProvider.#ctor(Abp.Application.Navigation.NavigationProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimNavigationProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimNavigationProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimNavigationProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimNavigationProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimNavigationProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimNavigationProvider.Constructor">
            <summary>Sets the shim of NavigationProvider.NavigationProvider()</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimUserMenu">
            <summary>Shim type of Abp.Application.Navigation.UserMenu</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenu.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenu.#ctor(Abp.Application.Navigation.UserMenu)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.CustomDataGet">
            <summary>Sets the shim of UserMenu.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.CustomDataSetObject">
            <summary>Sets the shim of UserMenu.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.DisplayNameGet">
            <summary>Sets the shim of UserMenu.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of UserMenu.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.ItemsGet">
            <summary>Sets the shim of UserMenu.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.ItemsSetIListOfUserMenuItem">
            <summary>Sets the shim of UserMenu.set_Items(IList`1&lt;UserMenuItem&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.NameGet">
            <summary>Sets the shim of UserMenu.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.AllInstances.NameSetString">
            <summary>Sets the shim of UserMenu.set_Name(String value)</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenu.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenu.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.Constructor">
            <summary>Sets the shim of UserMenu.UserMenu()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.ConstructorMenuDefinitionILocalizationContext">
            <summary>Sets the shim of UserMenu.UserMenu(MenuDefinition menuDefinition, ILocalizationContext localizationContext)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.CustomDataGet">
            <summary>Sets the shim of UserMenu.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.CustomDataSetObject">
            <summary>Sets the shim of UserMenu.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.DisplayNameGet">
            <summary>Sets the shim of UserMenu.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.DisplayNameSetString">
            <summary>Sets the shim of UserMenu.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.ItemsGet">
            <summary>Sets the shim of UserMenu.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.ItemsSetIListOfUserMenuItem">
            <summary>Sets the shim of UserMenu.set_Items(IList`1&lt;UserMenuItem&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.NameGet">
            <summary>Sets the shim of UserMenu.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenu.NameSetString">
            <summary>Sets the shim of UserMenu.set_Name(String value)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimUserMenuItem">
            <summary>Shim type of Abp.Application.Navigation.UserMenuItem</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenuItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenuItem.#ctor(Abp.Application.Navigation.UserMenuItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.CustomDataGet">
            <summary>Sets the shim of UserMenuItem.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.CustomDataSetObject">
            <summary>Sets the shim of UserMenuItem.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.DisplayNameGet">
            <summary>Sets the shim of UserMenuItem.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of UserMenuItem.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.IconGet">
            <summary>Sets the shim of UserMenuItem.get_Icon()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.IconSetString">
            <summary>Sets the shim of UserMenuItem.set_Icon(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.IsEnabledGet">
            <summary>Sets the shim of UserMenuItem.get_IsEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of UserMenuItem.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.IsVisibleGet">
            <summary>Sets the shim of UserMenuItem.get_IsVisible()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.IsVisibleSetBoolean">
            <summary>Sets the shim of UserMenuItem.set_IsVisible(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.ItemsGet">
            <summary>Sets the shim of UserMenuItem.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.ItemsSetIListOfUserMenuItem">
            <summary>Sets the shim of UserMenuItem.set_Items(IList`1&lt;UserMenuItem&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.NameGet">
            <summary>Sets the shim of UserMenuItem.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.NameSetString">
            <summary>Sets the shim of UserMenuItem.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.OrderGet">
            <summary>Sets the shim of UserMenuItem.get_Order()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.OrderSetInt32">
            <summary>Sets the shim of UserMenuItem.set_Order(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.TargetGet">
            <summary>Sets the shim of UserMenuItem.get_Target()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.TargetSetString">
            <summary>Sets the shim of UserMenuItem.set_Target(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.UrlGet">
            <summary>Sets the shim of UserMenuItem.get_Url()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.AllInstances.UrlSetString">
            <summary>Sets the shim of UserMenuItem.set_Url(String value)</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenuItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.ShimUserMenuItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.Constructor">
            <summary>Sets the shim of UserMenuItem.UserMenuItem()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.ConstructorMenuItemDefinitionILocalizationContext">
            <summary>Sets the shim of UserMenuItem.UserMenuItem(MenuItemDefinition menuItemDefinition, ILocalizationContext localizationContext)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.CustomDataGet">
            <summary>Sets the shim of UserMenuItem.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.CustomDataSetObject">
            <summary>Sets the shim of UserMenuItem.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.DisplayNameGet">
            <summary>Sets the shim of UserMenuItem.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.DisplayNameSetString">
            <summary>Sets the shim of UserMenuItem.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.IconGet">
            <summary>Sets the shim of UserMenuItem.get_Icon()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.IconSetString">
            <summary>Sets the shim of UserMenuItem.set_Icon(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.IsEnabledGet">
            <summary>Sets the shim of UserMenuItem.get_IsEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.IsEnabledSetBoolean">
            <summary>Sets the shim of UserMenuItem.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.IsVisibleGet">
            <summary>Sets the shim of UserMenuItem.get_IsVisible()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.IsVisibleSetBoolean">
            <summary>Sets the shim of UserMenuItem.set_IsVisible(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.ItemsGet">
            <summary>Sets the shim of UserMenuItem.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.ItemsSetIListOfUserMenuItem">
            <summary>Sets the shim of UserMenuItem.set_Items(IList`1&lt;UserMenuItem&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.NameGet">
            <summary>Sets the shim of UserMenuItem.get_Name()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.NameSetString">
            <summary>Sets the shim of UserMenuItem.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.OrderGet">
            <summary>Sets the shim of UserMenuItem.get_Order()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.OrderSetInt32">
            <summary>Sets the shim of UserMenuItem.set_Order(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.TargetGet">
            <summary>Sets the shim of UserMenuItem.get_Target()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.TargetSetString">
            <summary>Sets the shim of UserMenuItem.set_Target(String value)</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.UrlGet">
            <summary>Sets the shim of UserMenuItem.get_Url()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.ShimUserMenuItem.UrlSetString">
            <summary>Sets the shim of UserMenuItem.set_Url(String value)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubIHasMenuItemDefinitions">
            <summary>Stub type of Abp.Application.Navigation.IHasMenuItemDefinitions</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubIHasMenuItemDefinitions.#ctor">
            <summary>Initializes a new instance of type StubIHasMenuItemDefinitions</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubIHasMenuItemDefinitions.Abp#Application#Navigation#IHasMenuItemDefinitions#Items">
            <summary>Sets the stub of IHasMenuItemDefinitions.get_Items()</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubIHasMenuItemDefinitions.ItemsGet">
            <summary>Sets the stub of IHasMenuItemDefinitions.get_Items()</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubINavigationManager">
            <summary>Stub type of Abp.Application.Navigation.INavigationManager</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubINavigationManager.#ctor">
            <summary>Initializes a new instance of type StubINavigationManager</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubINavigationManager.Abp#Application#Navigation#INavigationManager#MainMenu">
            <summary>Sets the stub of INavigationManager.get_MainMenu()</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubINavigationManager.MainMenuGet">
            <summary>Sets the stub of INavigationManager.get_MainMenu()</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubINavigationManager.Abp#Application#Navigation#INavigationManager#Menus">
            <summary>Sets the stub of INavigationManager.get_Menus()</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubINavigationManager.MenusGet">
            <summary>Sets the stub of INavigationManager.get_Menus()</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubINavigationProviderContext">
            <summary>Stub type of Abp.Application.Navigation.INavigationProviderContext</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubINavigationProviderContext.#ctor">
            <summary>Initializes a new instance of type StubINavigationProviderContext</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubINavigationProviderContext.Abp#Application#Navigation#INavigationProviderContext#Manager">
            <summary>Sets the stub of INavigationProviderContext.get_Manager()</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubINavigationProviderContext.ManagerGet">
            <summary>Sets the stub of INavigationProviderContext.get_Manager()</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubIUserNavigationManager">
            <summary>Stub type of Abp.Application.Navigation.IUserNavigationManager</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubIUserNavigationManager.#ctor">
            <summary>Initializes a new instance of type StubIUserNavigationManager</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubIUserNavigationManager.Abp#Application#Navigation#IUserNavigationManager#GetMenuAsync(System.String,Abp.UserIdentifier)">
            <summary>Sets the stub of IUserNavigationManager.GetMenuAsync(String menuName, UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubIUserNavigationManager.Abp#Application#Navigation#IUserNavigationManager#GetMenusAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of IUserNavigationManager.GetMenusAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubIUserNavigationManager.GetMenuAsyncStringUserIdentifier">
            <summary>Sets the stub of IUserNavigationManager.GetMenuAsync(String menuName, UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubIUserNavigationManager.GetMenusAsyncUserIdentifier">
            <summary>Sets the stub of IUserNavigationManager.GetMenusAsync(UserIdentifier user)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubMenuDefinition">
            <summary>Stub type of Abp.Application.Navigation.MenuDefinition</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubMenuDefinition.#ctor(System.String,Abp.Localization.ILocalizableString,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubMenuDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubMenuDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubMenuDefinition</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubMenuDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubMenuDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubMenuItemDefinition">
            <summary>Stub type of Abp.Application.Navigation.MenuItemDefinition</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubMenuItemDefinition.#ctor(System.String,Abp.Localization.ILocalizableString,System.String,System.String,System.Boolean,System.String,System.Int32,System.Object,Abp.Application.Features.IFeatureDependency,System.String,System.Boolean,System.Boolean,Abp.Authorization.IPermissionDependency)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubMenuItemDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubMenuItemDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubMenuItemDefinition</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubMenuItemDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubMenuItemDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubMenuItemDefinition.Items">
            <summary>Sets the stub of MenuItemDefinition.get_Items()</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubMenuItemDefinition.ItemsGet">
            <summary>Sets the stub of MenuItemDefinition.get_Items()</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubNavigationProvider">
            <summary>Stub type of Abp.Application.Navigation.NavigationProvider</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubNavigationProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubNavigationProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubNavigationProvider.InitializeStub">
            <summary>Initializes a new instance of type StubNavigationProvider</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubNavigationProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubNavigationProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubNavigationProvider.SetNavigation(Abp.Application.Navigation.INavigationProviderContext)">
            <summary>Sets the stub of NavigationProvider.SetNavigation(INavigationProviderContext context)</summary>
        </member>
        <member name="F:Abp.Application.Navigation.Fakes.StubNavigationProvider.SetNavigationINavigationProviderContext">
            <summary>Sets the stub of NavigationProvider.SetNavigation(INavigationProviderContext context)</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubUserMenu">
            <summary>Stub type of Abp.Application.Navigation.UserMenu</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubUserMenu.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubUserMenu.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubUserMenu.InitializeStub">
            <summary>Initializes a new instance of type StubUserMenu</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubUserMenu.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubUserMenu.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Navigation.Fakes.StubUserMenuItem">
            <summary>Stub type of Abp.Application.Navigation.UserMenuItem</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubUserMenuItem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubUserMenuItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Navigation.Fakes.StubUserMenuItem.InitializeStub">
            <summary>Initializes a new instance of type StubUserMenuItem</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubUserMenuItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Navigation.Fakes.StubUserMenuItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto">
            <summary>Shim type of Abp.Application.Services.Dto.AuditedEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.#ctor(Abp.Application.Services.Dto.AuditedEntityDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Bind(Abp.Application.Services.Dto.IEntityDto{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto.Constructor">
            <summary>Sets the shim of AuditedEntityDto.AuditedEntityDto()</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1">
            <summary>Shim type of Abp.Application.Services.Dto.AuditedEntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.#ctor(Abp.Application.Services.Dto.AuditedEntityDto{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.AllInstances.LastModificationTimeGet">
            <summary>Sets the shim of AuditedEntityDto`1.get_LastModificationTime()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.AllInstances.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the shim of AuditedEntityDto`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.AllInstances.LastModifierUserIdGet">
            <summary>Sets the shim of AuditedEntityDto`1.get_LastModifierUserId()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.AllInstances.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditedEntityDto`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Bind(Abp.Application.Services.Dto.IEntityDto{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.Constructor">
            <summary>Sets the shim of AuditedEntityDto`1.AuditedEntityDto`1()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.LastModificationTimeGet">
            <summary>Sets the shim of AuditedEntityDto`1.get_LastModificationTime()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the shim of AuditedEntityDto`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.LastModifierUserIdGet">
            <summary>Sets the shim of AuditedEntityDto`1.get_LastModifierUserId()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimAuditedEntityDto`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditedEntityDto`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto">
            <summary>Shim type of Abp.Application.Services.Dto.ComboboxItemDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.#ctor(Abp.Application.Services.Dto.ComboboxItemDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.AllInstances.DisplayTextGet">
            <summary>Sets the shim of ComboboxItemDto.get_DisplayText()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.AllInstances.DisplayTextSetString">
            <summary>Sets the shim of ComboboxItemDto.set_DisplayText(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.AllInstances.IsSelectedGet">
            <summary>Sets the shim of ComboboxItemDto.get_IsSelected()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.AllInstances.IsSelectedSetBoolean">
            <summary>Sets the shim of ComboboxItemDto.set_IsSelected(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.AllInstances.ValueGet">
            <summary>Sets the shim of ComboboxItemDto.get_Value()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.AllInstances.ValueSetString">
            <summary>Sets the shim of ComboboxItemDto.set_Value(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.Constructor">
            <summary>Sets the shim of ComboboxItemDto.ComboboxItemDto()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.ConstructorStringString">
            <summary>Sets the shim of ComboboxItemDto.ComboboxItemDto(String value, String displayText)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.DisplayTextGet">
            <summary>Sets the shim of ComboboxItemDto.get_DisplayText()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.DisplayTextSetString">
            <summary>Sets the shim of ComboboxItemDto.set_DisplayText(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.IsSelectedGet">
            <summary>Sets the shim of ComboboxItemDto.get_IsSelected()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.IsSelectedSetBoolean">
            <summary>Sets the shim of ComboboxItemDto.set_IsSelected(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.ValueGet">
            <summary>Sets the shim of ComboboxItemDto.get_Value()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimComboboxItemDto.ValueSetString">
            <summary>Sets the shim of ComboboxItemDto.set_Value(String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto">
            <summary>Shim type of Abp.Application.Services.Dto.CreationAuditedEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.#ctor(Abp.Application.Services.Dto.CreationAuditedEntityDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.Bind(Abp.Application.Services.Dto.IEntityDto{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto.Constructor">
            <summary>Sets the shim of CreationAuditedEntityDto.CreationAuditedEntityDto()</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1">
            <summary>Shim type of Abp.Application.Services.Dto.CreationAuditedEntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.#ctor(Abp.Application.Services.Dto.CreationAuditedEntityDto{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.AllInstances.CreationTimeGet">
            <summary>Sets the shim of CreationAuditedEntityDto`1.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of CreationAuditedEntityDto`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.AllInstances.CreatorUserIdGet">
            <summary>Sets the shim of CreationAuditedEntityDto`1.get_CreatorUserId()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.AllInstances.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of CreationAuditedEntityDto`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.Bind(Abp.Application.Services.Dto.IEntityDto{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.Constructor">
            <summary>Sets the shim of CreationAuditedEntityDto`1.CreationAuditedEntityDto`1()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.CreationTimeGet">
            <summary>Sets the shim of CreationAuditedEntityDto`1.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.CreationTimeSetDateTime">
            <summary>Sets the shim of CreationAuditedEntityDto`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.CreatorUserIdGet">
            <summary>Sets the shim of CreationAuditedEntityDto`1.get_CreatorUserId()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimCreationAuditedEntityDto`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of CreationAuditedEntityDto`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimEntityDto">
            <summary>Shim type of Abp.Application.Services.Dto.EntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto.#ctor(Abp.Application.Services.Dto.EntityDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimEntityDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto.Bind(Abp.Application.Services.Dto.IEntityDto)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto.Bind(Abp.Application.Services.Dto.IEntityDto{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto.Constructor">
            <summary>Sets the shim of EntityDto.EntityDto()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto.ConstructorInt32">
            <summary>Sets the shim of EntityDto.EntityDto(Int32 id)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1">
            <summary>Shim type of Abp.Application.Services.Dto.EntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.#ctor(Abp.Application.Services.Dto.EntityDto{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.AllInstances.IdGet">
            <summary>Sets the shim of EntityDto`1.get_Id()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.AllInstances.IdSetT0">
            <summary>Sets the shim of EntityDto`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.Bind(Abp.Application.Services.Dto.IEntityDto{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.Constructor">
            <summary>Sets the shim of EntityDto`1.EntityDto`1()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.ConstructorT0">
            <summary>Sets the shim of EntityDto`1.EntityDto`1(!0 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.IdGet">
            <summary>Sets the shim of EntityDto`1.get_Id()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimEntityDto`1.IdSetT0">
            <summary>Sets the shim of EntityDto`1.set_Id(!0 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto">
            <summary>Shim type of Abp.Application.Services.Dto.FullAuditedEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.#ctor(Abp.Application.Services.Dto.FullAuditedEntityDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Application.Services.Dto.IEntityDto{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto.Constructor">
            <summary>Sets the shim of FullAuditedEntityDto.FullAuditedEntityDto()</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1">
            <summary>Shim type of Abp.Application.Services.Dto.FullAuditedEntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.#ctor(Abp.Application.Services.Dto.FullAuditedEntityDto{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.AllInstances.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedEntityDto`1.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.AllInstances.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedEntityDto`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.AllInstances.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedEntityDto`1.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.AllInstances.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedEntityDto`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.AllInstances.IsDeletedGet">
            <summary>Sets the shim of FullAuditedEntityDto`1.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.AllInstances.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedEntityDto`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Application.Services.Dto.IEntityDto{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.Constructor">
            <summary>Sets the shim of FullAuditedEntityDto`1.FullAuditedEntityDto`1()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedEntityDto`1.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedEntityDto`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedEntityDto`1.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedEntityDto`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.IsDeletedGet">
            <summary>Sets the shim of FullAuditedEntityDto`1.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimFullAuditedEntityDto`1.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedEntityDto`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto">
            <summary>Shim type of Abp.Application.Services.Dto.LimitedResultRequestDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.#ctor(Abp.Application.Services.Dto.LimitedResultRequestDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.AllInstances.MaxResultCountGet">
            <summary>Sets the shim of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.AllInstances.MaxResultCountSetInt32">
            <summary>Sets the shim of LimitedResultRequestDto.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.Bind(Abp.Application.Services.Dto.ILimitedResultRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.Constructor">
            <summary>Sets the shim of LimitedResultRequestDto.LimitedResultRequestDto()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.MaxResultCountGet">
            <summary>Sets the shim of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimLimitedResultRequestDto.MaxResultCountSetInt32">
            <summary>Sets the shim of LimitedResultRequestDto.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1">
            <summary>Shim type of Abp.Application.Services.Dto.ListResultDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.#ctor(Abp.Application.Services.Dto.ListResultDto{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.AllInstances.ItemsGet">
            <summary>Sets the shim of ListResultDto`1.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.AllInstances.ItemsSetIReadOnlyListOfT0">
            <summary>Sets the shim of ListResultDto`1.set_Items(IReadOnlyList`1&lt;!0&gt; value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.Bind(Abp.Application.Services.Dto.IListResult{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.Constructor">
            <summary>Sets the shim of ListResultDto`1.ListResultDto`1()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.ConstructorIReadOnlyListOfT0">
            <summary>Sets the shim of ListResultDto`1.ListResultDto`1(IReadOnlyList`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.ItemsGet">
            <summary>Sets the shim of ListResultDto`1.get_Items()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimListResultDto`1.ItemsSetIReadOnlyListOfT0">
            <summary>Sets the shim of ListResultDto`1.set_Items(IReadOnlyList`1&lt;!0&gt; value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimNameValueDto">
            <summary>Shim type of Abp.Application.Services.Dto.NameValueDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.#ctor(Abp.Application.Services.Dto.NameValueDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.Constructor">
            <summary>Sets the shim of NameValueDto.NameValueDto()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.ConstructorNameValue">
            <summary>Sets the shim of NameValueDto.NameValueDto(NameValue nameValue)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto.ConstructorStringString">
            <summary>Sets the shim of NameValueDto.NameValueDto(String name, String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1">
            <summary>Shim type of Abp.Application.Services.Dto.NameValueDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.#ctor(Abp.Application.Services.Dto.NameValueDto{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.Constructor">
            <summary>Sets the shim of NameValueDto`1.NameValueDto`1()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.ConstructorNameValueOfT0">
            <summary>Sets the shim of NameValueDto`1.NameValueDto`1(NameValue`1&lt;!0&gt; nameValue)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNameValueDto`1.ConstructorStringT0">
            <summary>Sets the shim of NameValueDto`1.NameValueDto`1(String name, !0 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto">
            <summary>Shim type of Abp.Application.Services.Dto.NullableIdDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.#ctor(Abp.Application.Services.Dto.NullableIdDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.Constructor">
            <summary>Sets the shim of NullableIdDto.NullableIdDto()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimNullableIdDto.ConstructorNullableOfInt32">
            <summary>Sets the shim of NullableIdDto.NullableIdDto(Nullable`1&lt;Int32&gt; id)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto">
            <summary>Shim type of Abp.Application.Services.Dto.PagedAndSortedResultRequestDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.#ctor(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.AllInstances.SortingGet">
            <summary>Sets the shim of PagedAndSortedResultRequestDto.get_Sorting()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.AllInstances.SortingSetString">
            <summary>Sets the shim of PagedAndSortedResultRequestDto.set_Sorting(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.Bind(Abp.Application.Services.Dto.ILimitedResultRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.Bind(Abp.Application.Services.Dto.IPagedAndSortedResultRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.Bind(Abp.Application.Services.Dto.IPagedResultRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.Bind(Abp.Application.Services.Dto.ISortedResultRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.Constructor">
            <summary>Sets the shim of PagedAndSortedResultRequestDto.PagedAndSortedResultRequestDto()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.SortingGet">
            <summary>Sets the shim of PagedAndSortedResultRequestDto.get_Sorting()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedAndSortedResultRequestDto.SortingSetString">
            <summary>Sets the shim of PagedAndSortedResultRequestDto.set_Sorting(String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1">
            <summary>Shim type of Abp.Application.Services.Dto.PagedResultDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.#ctor(Abp.Application.Services.Dto.PagedResultDto{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.AllInstances.TotalCountGet">
            <summary>Sets the shim of PagedResultDto`1.get_TotalCount()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.AllInstances.TotalCountSetInt32">
            <summary>Sets the shim of PagedResultDto`1.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.Bind(Abp.Application.Services.Dto.IHasTotalCount)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.Bind(Abp.Application.Services.Dto.IListResult{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.Bind(Abp.Application.Services.Dto.IPagedResult{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.Constructor">
            <summary>Sets the shim of PagedResultDto`1.PagedResultDto`1()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.ConstructorInt32IReadOnlyListOfT0">
            <summary>Sets the shim of PagedResultDto`1.PagedResultDto`1(Int32 totalCount, IReadOnlyList`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.TotalCountGet">
            <summary>Sets the shim of PagedResultDto`1.get_TotalCount()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultDto`1.TotalCountSetInt32">
            <summary>Sets the shim of PagedResultDto`1.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto">
            <summary>Shim type of Abp.Application.Services.Dto.PagedResultRequestDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.#ctor(Abp.Application.Services.Dto.PagedResultRequestDto)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.AllInstances.SkipCountGet">
            <summary>Sets the shim of PagedResultRequestDto.get_SkipCount()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.AllInstances.SkipCountSetInt32">
            <summary>Sets the shim of PagedResultRequestDto.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.Bind(Abp.Application.Services.Dto.ILimitedResultRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.Bind(Abp.Application.Services.Dto.IPagedResultRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.Constructor">
            <summary>Sets the shim of PagedResultRequestDto.PagedResultRequestDto()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.SkipCountGet">
            <summary>Sets the shim of PagedResultRequestDto.get_SkipCount()</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.ShimPagedResultRequestDto.SkipCountSetInt32">
            <summary>Sets the shim of PagedResultRequestDto.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto">
            <summary>Stub type of Abp.Application.Services.Dto.AuditedEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.AuditedEntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto`1.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubAuditedEntityDto`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubComboboxItemDto">
            <summary>Stub type of Abp.Application.Services.Dto.ComboboxItemDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubComboboxItemDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubComboboxItemDto.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubComboboxItemDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubComboboxItemDto.InitializeStub">
            <summary>Initializes a new instance of type StubComboboxItemDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubComboboxItemDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubComboboxItemDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto">
            <summary>Stub type of Abp.Application.Services.Dto.CreationAuditedEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.CreationAuditedEntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto`1.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubCreationAuditedEntityDto`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubEntityDto">
            <summary>Stub type of Abp.Application.Services.Dto.EntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubEntityDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubEntityDto.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubEntityDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubEntityDto.InitializeStub">
            <summary>Initializes a new instance of type StubEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubEntityDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubEntityDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubEntityDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.EntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubEntityDto`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubEntityDto`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubEntityDto`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubEntityDto`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubEntityDto`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubEntityDto`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto">
            <summary>Stub type of Abp.Application.Services.Dto.FullAuditedEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.FullAuditedEntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto`1.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedEntityDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubFullAuditedEntityDto`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIEntityDto">
            <summary>Stub type of Abp.Application.Services.Dto.IEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIEntityDto.#ctor">
            <summary>Initializes a new instance of type StubIEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIEntityDto.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIEntityDto.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIEntityDto.Abp#Application#Services#Dto#IEntityDto{System#Int32}#Id">
            <summary>Sets the stub of IEntityDto`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIEntityDto.IdGet">
            <summary>Sets the stub of IEntityDto`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIEntityDto.IdSetInt32">
            <summary>Sets the stub of IEntityDto`1.set_Id(!0 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIEntityDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.IEntityDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIEntityDto`1.#ctor">
            <summary>Initializes a new instance of type StubIEntityDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIEntityDto`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIEntityDto.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIEntityDto`1.Abp#Application#Services#Dto#IEntityDto{TPrimaryKey}#Id">
            <summary>Sets the stub of IEntityDto`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIEntityDto`1.IdGet">
            <summary>Sets the stub of IEntityDto`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIEntityDto`1.IdSetT0">
            <summary>Sets the stub of IEntityDto`1.set_Id(!0 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIHasLongTotalCount">
            <summary>Stub type of Abp.Application.Services.Dto.IHasLongTotalCount</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIHasLongTotalCount.#ctor">
            <summary>Initializes a new instance of type StubIHasLongTotalCount</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIHasLongTotalCount.AttachBackingFieldToTotalCount">
            <summary>Attaches delegates to emulate StubIHasLongTotalCount.TotalCount as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIHasLongTotalCount.Abp#Application#Services#Dto#IHasLongTotalCount#TotalCount">
            <summary>Sets the stub of IHasLongTotalCount.get_TotalCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIHasLongTotalCount.TotalCountGet">
            <summary>Sets the stub of IHasLongTotalCount.get_TotalCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIHasLongTotalCount.TotalCountSetInt64">
            <summary>Sets the stub of IHasLongTotalCount.set_TotalCount(Int64 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIHasTotalCount">
            <summary>Stub type of Abp.Application.Services.Dto.IHasTotalCount</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIHasTotalCount.#ctor">
            <summary>Initializes a new instance of type StubIHasTotalCount</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIHasTotalCount.AttachBackingFieldToTotalCount">
            <summary>Attaches delegates to emulate StubIHasTotalCount.TotalCount as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIHasTotalCount.Abp#Application#Services#Dto#IHasTotalCount#TotalCount">
            <summary>Sets the stub of IHasTotalCount.get_TotalCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIHasTotalCount.TotalCountGet">
            <summary>Sets the stub of IHasTotalCount.get_TotalCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIHasTotalCount.TotalCountSetInt32">
            <summary>Sets the stub of IHasTotalCount.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubILimitedResultRequest">
            <summary>Stub type of Abp.Application.Services.Dto.ILimitedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubILimitedResultRequest.#ctor">
            <summary>Initializes a new instance of type StubILimitedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubILimitedResultRequest.AttachBackingFieldToMaxResultCount">
            <summary>Attaches delegates to emulate StubILimitedResultRequest.MaxResultCount as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubILimitedResultRequest.Abp#Application#Services#Dto#ILimitedResultRequest#MaxResultCount">
            <summary>Sets the stub of ILimitedResultRequest.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubILimitedResultRequest.MaxResultCountGet">
            <summary>Sets the stub of ILimitedResultRequest.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubILimitedResultRequest.MaxResultCountSetInt32">
            <summary>Sets the stub of ILimitedResultRequest.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIListResult`1">
            <summary>Stub type of Abp.Application.Services.Dto.IListResult`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIListResult`1.#ctor">
            <summary>Initializes a new instance of type StubIListResult</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIListResult`1.AttachBackingFieldToItems">
            <summary>Attaches delegates to emulate StubIListResult.Items as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIListResult`1.Abp#Application#Services#Dto#IListResult{T}#Items">
            <summary>Sets the stub of IListResult`1.get_Items()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIListResult`1.ItemsGet">
            <summary>Sets the stub of IListResult`1.get_Items()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIListResult`1.ItemsSetIReadOnlyListOfT0">
            <summary>Sets the stub of IListResult`1.set_Items(IReadOnlyList`1&lt;!0&gt; value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest">
            <summary>Stub type of Abp.Application.Services.Dto.IPagedAndSortedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.#ctor">
            <summary>Initializes a new instance of type StubIPagedAndSortedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.AttachBackingFieldToMaxResultCount">
            <summary>Attaches delegates to emulate StubIPagedAndSortedResultRequest.MaxResultCount as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.AttachBackingFieldToSkipCount">
            <summary>Attaches delegates to emulate StubIPagedAndSortedResultRequest.SkipCount as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.AttachBackingFieldToSorting">
            <summary>Attaches delegates to emulate StubIPagedAndSortedResultRequest.Sorting as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.Abp#Application#Services#Dto#ILimitedResultRequest#MaxResultCount">
            <summary>Sets the stub of ILimitedResultRequest.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.MaxResultCountGet">
            <summary>Sets the stub of ILimitedResultRequest.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.MaxResultCountSetInt32">
            <summary>Sets the stub of ILimitedResultRequest.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.Abp#Application#Services#Dto#IPagedResultRequest#SkipCount">
            <summary>Sets the stub of IPagedResultRequest.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.SkipCountGet">
            <summary>Sets the stub of IPagedResultRequest.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.SkipCountSetInt32">
            <summary>Sets the stub of IPagedResultRequest.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.Abp#Application#Services#Dto#ISortedResultRequest#Sorting">
            <summary>Sets the stub of ISortedResultRequest.get_Sorting()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.SortingGet">
            <summary>Sets the stub of ISortedResultRequest.get_Sorting()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedAndSortedResultRequest.SortingSetString">
            <summary>Sets the stub of ISortedResultRequest.set_Sorting(String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1">
            <summary>Stub type of Abp.Application.Services.Dto.IPagedResult`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.#ctor">
            <summary>Initializes a new instance of type StubIPagedResult</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.AttachBackingFieldToItems">
            <summary>Attaches delegates to emulate StubIPagedResult.Items as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.AttachBackingFieldToTotalCount">
            <summary>Attaches delegates to emulate StubIPagedResult.TotalCount as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.Abp#Application#Services#Dto#IListResult{T}#Items">
            <summary>Sets the stub of IListResult`1.get_Items()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.ItemsGet">
            <summary>Sets the stub of IListResult`1.get_Items()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.ItemsSetIReadOnlyListOfT0">
            <summary>Sets the stub of IListResult`1.set_Items(IReadOnlyList`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.Abp#Application#Services#Dto#IHasTotalCount#TotalCount">
            <summary>Sets the stub of IHasTotalCount.get_TotalCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.TotalCountGet">
            <summary>Sets the stub of IHasTotalCount.get_TotalCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResult`1.TotalCountSetInt32">
            <summary>Sets the stub of IHasTotalCount.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest">
            <summary>Stub type of Abp.Application.Services.Dto.IPagedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.#ctor">
            <summary>Initializes a new instance of type StubIPagedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.AttachBackingFieldToMaxResultCount">
            <summary>Attaches delegates to emulate StubIPagedResultRequest.MaxResultCount as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.AttachBackingFieldToSkipCount">
            <summary>Attaches delegates to emulate StubIPagedResultRequest.SkipCount as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.Abp#Application#Services#Dto#ILimitedResultRequest#MaxResultCount">
            <summary>Sets the stub of ILimitedResultRequest.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.MaxResultCountGet">
            <summary>Sets the stub of ILimitedResultRequest.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.MaxResultCountSetInt32">
            <summary>Sets the stub of ILimitedResultRequest.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.Abp#Application#Services#Dto#IPagedResultRequest#SkipCount">
            <summary>Sets the stub of IPagedResultRequest.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.SkipCountGet">
            <summary>Sets the stub of IPagedResultRequest.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubIPagedResultRequest.SkipCountSetInt32">
            <summary>Sets the stub of IPagedResultRequest.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubISortedResultRequest">
            <summary>Stub type of Abp.Application.Services.Dto.ISortedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubISortedResultRequest.#ctor">
            <summary>Initializes a new instance of type StubISortedResultRequest</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubISortedResultRequest.AttachBackingFieldToSorting">
            <summary>Attaches delegates to emulate StubISortedResultRequest.Sorting as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubISortedResultRequest.Abp#Application#Services#Dto#ISortedResultRequest#Sorting">
            <summary>Sets the stub of ISortedResultRequest.get_Sorting()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubISortedResultRequest.SortingGet">
            <summary>Sets the stub of ISortedResultRequest.get_Sorting()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubISortedResultRequest.SortingSetString">
            <summary>Sets the stub of ISortedResultRequest.set_Sorting(String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto">
            <summary>Stub type of Abp.Application.Services.Dto.LimitedResultRequestDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.AttachBackingFieldToMaxResultCount">
            <summary>Attaches delegates to emulate StubLimitedResultRequestDto.MaxResultCount as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.InitializeStub">
            <summary>Initializes a new instance of type StubLimitedResultRequestDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.MaxResultCount">
            <summary>Sets the stub of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.MaxResultCountGet">
            <summary>Sets the stub of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubLimitedResultRequestDto.MaxResultCountSetInt32">
            <summary>Sets the stub of LimitedResultRequestDto.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubListResultDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.ListResultDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubListResultDto`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubListResultDto`1.#ctor(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubListResultDto`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubListResultDto`1.InitializeStub">
            <summary>Initializes a new instance of type StubListResultDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubListResultDto`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubListResultDto`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubNameValueDto">
            <summary>Stub type of Abp.Application.Services.Dto.NameValueDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto.#ctor(Abp.NameValue)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNameValueDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto.InitializeStub">
            <summary>Initializes a new instance of type StubNameValueDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNameValueDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNameValueDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.NameValueDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1.#ctor(Abp.NameValue{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1.#ctor(System.String,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1.InitializeStub">
            <summary>Initializes a new instance of type StubNameValueDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNameValueDto`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubNullableIdDto">
            <summary>Stub type of Abp.Application.Services.Dto.NullableIdDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNullableIdDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNullableIdDto.#ctor(System.Nullable{System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNullableIdDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubNullableIdDto.InitializeStub">
            <summary>Initializes a new instance of type StubNullableIdDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNullableIdDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubNullableIdDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto">
            <summary>Stub type of Abp.Application.Services.Dto.PagedAndSortedResultRequestDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.AttachBackingFieldToMaxResultCount">
            <summary>Attaches delegates to emulate StubPagedAndSortedResultRequestDto.MaxResultCount as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.AttachBackingFieldToSkipCount">
            <summary>Attaches delegates to emulate StubPagedAndSortedResultRequestDto.SkipCount as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.AttachBackingFieldToSorting">
            <summary>Attaches delegates to emulate StubPagedAndSortedResultRequestDto.Sorting as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.InitializeStub">
            <summary>Initializes a new instance of type StubPagedAndSortedResultRequestDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.MaxResultCount">
            <summary>Sets the stub of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.MaxResultCountGet">
            <summary>Sets the stub of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.MaxResultCountSetInt32">
            <summary>Sets the stub of LimitedResultRequestDto.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.SkipCount">
            <summary>Sets the stub of PagedResultRequestDto.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.SkipCountGet">
            <summary>Sets the stub of PagedResultRequestDto.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.SkipCountSetInt32">
            <summary>Sets the stub of PagedResultRequestDto.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.Sorting">
            <summary>Sets the stub of PagedAndSortedResultRequestDto.get_Sorting()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.SortingGet">
            <summary>Sets the stub of PagedAndSortedResultRequestDto.get_Sorting()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedAndSortedResultRequestDto.SortingSetString">
            <summary>Sets the stub of PagedAndSortedResultRequestDto.set_Sorting(String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubPagedResultDto`1">
            <summary>Stub type of Abp.Application.Services.Dto.PagedResultDto`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedResultDto`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedResultDto`1.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultDto`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedResultDto`1.InitializeStub">
            <summary>Initializes a new instance of type StubPagedResultDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultDto`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultDto`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto">
            <summary>Stub type of Abp.Application.Services.Dto.PagedResultRequestDto</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.AttachBackingFieldToMaxResultCount">
            <summary>Attaches delegates to emulate StubPagedResultRequestDto.MaxResultCount as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.AttachBackingFieldToSkipCount">
            <summary>Attaches delegates to emulate StubPagedResultRequestDto.SkipCount as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.InitializeStub">
            <summary>Initializes a new instance of type StubPagedResultRequestDto</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.MaxResultCount">
            <summary>Sets the stub of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.MaxResultCountGet">
            <summary>Sets the stub of LimitedResultRequestDto.get_MaxResultCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.MaxResultCountSetInt32">
            <summary>Sets the stub of LimitedResultRequestDto.set_MaxResultCount(Int32 value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.SkipCount">
            <summary>Sets the stub of PagedResultRequestDto.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.SkipCountGet">
            <summary>Sets the stub of PagedResultRequestDto.get_SkipCount()</summary>
        </member>
        <member name="F:Abp.Application.Services.Dto.Fakes.StubPagedResultRequestDto.SkipCountSetInt32">
            <summary>Sets the stub of PagedResultRequestDto.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimApplicationService">
            <summary>Shim type of Abp.Application.Services.ApplicationService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimApplicationService.#ctor(Abp.Application.Services.ApplicationService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AbpSessionGet">
            <summary>Sets the shim of ApplicationService.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AbpSessionSetIAbpSession">
            <summary>Sets the shim of ApplicationService.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.AbpSessionGet">
            <summary>Sets the shim of ApplicationService.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.AbpSessionSetIAbpSession">
            <summary>Sets the shim of ApplicationService.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.AppliedCrossCuttingConcernsGet">
            <summary>Sets the shim of ApplicationService.get_AppliedCrossCuttingConcerns()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.FeatureCheckerGet">
            <summary>Sets the shim of ApplicationService.get_FeatureChecker()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.FeatureCheckerSetIFeatureChecker">
            <summary>Sets the shim of ApplicationService.set_FeatureChecker(IFeatureChecker value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.FeatureManagerGet">
            <summary>Sets the shim of ApplicationService.get_FeatureManager()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.FeatureManagerSetIFeatureManager">
            <summary>Sets the shim of ApplicationService.set_FeatureManager(IFeatureManager value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.IsEnabledAsyncString">
            <summary>Sets the shim of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.IsEnabledString">
            <summary>Sets the shim of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.IsGrantedAsyncString">
            <summary>Sets the shim of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.IsGrantedString">
            <summary>Sets the shim of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.PermissionCheckerGet">
            <summary>Sets the shim of ApplicationService.get_PermissionChecker()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.PermissionCheckerSetIPermissionChecker">
            <summary>Sets the shim of ApplicationService.set_PermissionChecker(IPermissionChecker value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.PermissionManagerGet">
            <summary>Sets the shim of ApplicationService.get_PermissionManager()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AllInstances.PermissionManagerSetIPermissionManager">
            <summary>Sets the shim of ApplicationService.set_PermissionManager(IPermissionManager value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.AppliedCrossCuttingConcernsGet">
            <summary>Sets the shim of ApplicationService.get_AppliedCrossCuttingConcerns()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimApplicationService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimApplicationService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimApplicationService.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimApplicationService.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimApplicationService.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.Constructor">
            <summary>Sets the shim of ApplicationService.ApplicationService()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.FeatureCheckerGet">
            <summary>Sets the shim of ApplicationService.get_FeatureChecker()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.FeatureCheckerSetIFeatureChecker">
            <summary>Sets the shim of ApplicationService.set_FeatureChecker(IFeatureChecker value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.FeatureManagerGet">
            <summary>Sets the shim of ApplicationService.get_FeatureManager()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.FeatureManagerSetIFeatureManager">
            <summary>Sets the shim of ApplicationService.set_FeatureManager(IFeatureManager value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.IsEnabledAsyncString">
            <summary>Sets the shim of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.IsEnabledString">
            <summary>Sets the shim of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.IsGrantedAsyncString">
            <summary>Sets the shim of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.IsGrantedString">
            <summary>Sets the shim of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.PermissionCheckerGet">
            <summary>Sets the shim of ApplicationService.get_PermissionChecker()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.PermissionCheckerSetIPermissionChecker">
            <summary>Sets the shim of ApplicationService.set_PermissionChecker(IPermissionChecker value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.PermissionManagerGet">
            <summary>Sets the shim of ApplicationService.get_PermissionManager()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.PermissionManagerSetIPermissionManager">
            <summary>Sets the shim of ApplicationService.set_PermissionManager(IPermissionManager value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimApplicationService.StaticConstructor">
            <summary>Sets the shim of ApplicationService.ApplicationService()</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2">
            <summary>Shim type of Abp.Application.Services.AsyncCrudAppService`2</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.#ctor(Abp.Application.Services.AsyncCrudAppService{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.Bind(Abp.Application.Services.IAsyncCrudAppService{`1,System.Int32,Abp.Application.Services.Dto.PagedAndSortedResultRequestDto,`1,`1,Abp.Application.Services.Dto.EntityDto{System.Int32},Abp.Application.Services.Dto.EntityDto{System.Int32}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`2.ConstructorIRepositoryOfT0Int32">
            <summary>Sets the shim of AsyncCrudAppService`2.AsyncCrudAppService`2(IRepository`2&lt;!0,Int32&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3">
            <summary>Shim type of Abp.Application.Services.AsyncCrudAppService`3</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.#ctor(Abp.Application.Services.AsyncCrudAppService{`0,`1,`2})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.Bind(Abp.Application.Services.IAsyncCrudAppService{`1,`2,Abp.Application.Services.Dto.PagedAndSortedResultRequestDto,`1,`1,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`3.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of AsyncCrudAppService`3.AsyncCrudAppService`3(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4">
            <summary>Shim type of Abp.Application.Services.AsyncCrudAppService`4</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.#ctor(Abp.Application.Services.AsyncCrudAppService{`0,`1,`2,`3})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.Bind(Abp.Application.Services.IAsyncCrudAppService{`1,`2,`3,`1,`1,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`4.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of AsyncCrudAppService`4.AsyncCrudAppService`4(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5">
            <summary>Shim type of Abp.Application.Services.AsyncCrudAppService`5</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.#ctor(Abp.Application.Services.AsyncCrudAppService{`0,`1,`2,`3,`4})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.Bind(Abp.Application.Services.IAsyncCrudAppService{`1,`2,`3,`4,`4,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`5.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of AsyncCrudAppService`5.AsyncCrudAppService`5(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6">
            <summary>Shim type of Abp.Application.Services.AsyncCrudAppService`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.#ctor(Abp.Application.Services.AsyncCrudAppService{`0,`1,`2,`3,`4,`5})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.Bind(Abp.Application.Services.IAsyncCrudAppService{`1,`2,`3,`4,`5,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`6.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of AsyncCrudAppService`6.AsyncCrudAppService`6(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7">
            <summary>Shim type of Abp.Application.Services.AsyncCrudAppService`7</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.#ctor(Abp.Application.Services.AsyncCrudAppService{`0,`1,`2,`3,`4,`5,`6})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.Bind(Abp.Application.Services.IAsyncCrudAppService{`1,`2,`3,`4,`5,`6,Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`7.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of AsyncCrudAppService`7.AsyncCrudAppService`7(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8">
            <summary>Shim type of Abp.Application.Services.AsyncCrudAppService`8</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.#ctor(Abp.Application.Services.AsyncCrudAppService{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.AsyncQueryableExecuterGet">
            <summary>Sets the shim of AsyncCrudAppService`8.get_AsyncQueryableExecuter()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.AsyncQueryableExecuterSetIAsyncQueryableExecuter">
            <summary>Sets the shim of AsyncCrudAppService`8.set_AsyncQueryableExecuter(IAsyncQueryableExecuter value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.CreateT4">
            <summary>Sets the shim of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.DeleteT7">
            <summary>Sets the shim of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.GetAllT3">
            <summary>Sets the shim of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.GetEntityByIdAsyncT2">
            <summary>Sets the shim of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.GetT6">
            <summary>Sets the shim of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AllInstances.UpdateT5">
            <summary>Sets the shim of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AsyncQueryableExecuterGet">
            <summary>Sets the shim of AsyncCrudAppService`8.get_AsyncQueryableExecuter()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.AsyncQueryableExecuterSetIAsyncQueryableExecuter">
            <summary>Sets the shim of AsyncCrudAppService`8.set_AsyncQueryableExecuter(IAsyncQueryableExecuter value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.Bind(Abp.Application.Services.IAsyncCrudAppService{`1,`2,`3,`4,`5,`6,`7})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of AsyncCrudAppService`8.AsyncCrudAppService`8(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.CreateT4">
            <summary>Sets the shim of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.DeleteT7">
            <summary>Sets the shim of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.GetAllT3">
            <summary>Sets the shim of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.GetEntityByIdAsyncT2">
            <summary>Sets the shim of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.GetT6">
            <summary>Sets the shim of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimAsyncCrudAppService`8.UpdateT5">
            <summary>Sets the shim of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`2">
            <summary>Shim type of Abp.Application.Services.CrudAppService`2</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`2.#ctor(Abp.Application.Services.CrudAppService{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`2.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`2.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`2.Bind(Abp.Application.Services.ICrudAppService{`1,System.Int32,Abp.Application.Services.Dto.PagedAndSortedResultRequestDto,`1,`1,Abp.Application.Services.Dto.EntityDto{System.Int32},Abp.Application.Services.Dto.EntityDto{System.Int32}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`2.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`2.ConstructorIRepositoryOfT0Int32">
            <summary>Sets the shim of CrudAppService`2.CrudAppService`2(IRepository`2&lt;!0,Int32&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`3">
            <summary>Shim type of Abp.Application.Services.CrudAppService`3</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`3.#ctor(Abp.Application.Services.CrudAppService{`0,`1,`2})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`3.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`3.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`3.Bind(Abp.Application.Services.ICrudAppService{`1,`2,Abp.Application.Services.Dto.PagedAndSortedResultRequestDto,`1,`1,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`3.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`3.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of CrudAppService`3.CrudAppService`3(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`4">
            <summary>Shim type of Abp.Application.Services.CrudAppService`4</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`4.#ctor(Abp.Application.Services.CrudAppService{`0,`1,`2,`3})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`4.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`4.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`4.Bind(Abp.Application.Services.ICrudAppService{`1,`2,`3,`1,`1,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`4.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`4.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of CrudAppService`4.CrudAppService`4(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`5">
            <summary>Shim type of Abp.Application.Services.CrudAppService`5</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`5.#ctor(Abp.Application.Services.CrudAppService{`0,`1,`2,`3,`4})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`5.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`5.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`5.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`5.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`5.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`5.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`5.Bind(Abp.Application.Services.ICrudAppService{`1,`2,`3,`4,`4,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`5.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`5.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of CrudAppService`5.CrudAppService`5(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`6">
            <summary>Shim type of Abp.Application.Services.CrudAppService`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`6.#ctor(Abp.Application.Services.CrudAppService{`0,`1,`2,`3,`4,`5})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`6.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`6.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`6.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`6.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`6.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`6.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`6.Bind(Abp.Application.Services.ICrudAppService{`1,`2,`3,`4,`5,Abp.Application.Services.Dto.EntityDto{`2},Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`6.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`6.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of CrudAppService`6.CrudAppService`6(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`7">
            <summary>Shim type of Abp.Application.Services.CrudAppService`7</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`7.#ctor(Abp.Application.Services.CrudAppService{`0,`1,`2,`3,`4,`5,`6})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`7.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`7.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`7.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`7.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`7.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`7.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`7.Bind(Abp.Application.Services.ICrudAppService{`1,`2,`3,`4,`5,`6,Abp.Application.Services.Dto.EntityDto{`2}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`7.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`7.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of CrudAppService`7.CrudAppService`7(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`8">
            <summary>Shim type of Abp.Application.Services.CrudAppService`8</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`8.#ctor(Abp.Application.Services.CrudAppService{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppService`8.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.AllInstances.CreateT4">
            <summary>Sets the shim of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.AllInstances.DeleteT7">
            <summary>Sets the shim of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.AllInstances.GetAllT3">
            <summary>Sets the shim of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.AllInstances.GetEntityByIdT2">
            <summary>Sets the shim of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.AllInstances.GetT6">
            <summary>Sets the shim of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.AllInstances.UpdateT5">
            <summary>Sets the shim of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`8.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`8.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`8.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`8.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`8.Bind(Abp.Application.Services.ICrudAppService{`1,`2,`3,`4,`5,`6,`7})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppService`8.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of CrudAppService`8.CrudAppService`8(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.CreateT4">
            <summary>Sets the shim of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.DeleteT7">
            <summary>Sets the shim of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.GetAllT3">
            <summary>Sets the shim of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.GetEntityByIdT2">
            <summary>Sets the shim of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.GetT6">
            <summary>Sets the shim of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppService`8.UpdateT5">
            <summary>Sets the shim of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6">
            <summary>Shim type of Abp.Application.Services.CrudAppServiceBase`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.#ctor(Abp.Application.Services.CrudAppServiceBase{`0,`1,`2,`3,`4,`5})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the shim of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.ApplySortingIQueryableOfT0T3">
            <summary>Sets the shim of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CheckCreatePermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CheckDeletePermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CheckGetAllPermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CheckGetPermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CheckPermissionString">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CheckUpdatePermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CreateFilteredQueryT3">
            <summary>Sets the shim of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CreatePermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.CreatePermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.DeletePermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.DeletePermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.GetAllPermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.GetAllPermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.GetPermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.GetPermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.MapToEntityDtoT0">
            <summary>Sets the shim of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.MapToEntityT4">
            <summary>Sets the shim of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.MapToEntityT5T0">
            <summary>Sets the shim of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.UpdatePermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.AllInstances.UpdatePermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the shim of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.ApplySortingIQueryableOfT0T3">
            <summary>Sets the shim of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.Bind(Abp.Application.Services.IApplicationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.Bind(Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CheckCreatePermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CheckDeletePermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CheckGetAllPermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CheckGetPermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CheckPermissionString">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CheckUpdatePermission">
            <summary>Sets the shim of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.ConstructorIRepositoryOfT0T2">
            <summary>Sets the shim of CrudAppServiceBase`6.CrudAppServiceBase`6(IRepository`2&lt;!0,!2&gt; repository)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CreateFilteredQueryT3">
            <summary>Sets the shim of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CreatePermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.CreatePermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.DeletePermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.DeletePermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.GetAllPermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.GetAllPermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.GetPermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.GetPermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.MapToEntityDtoT0">
            <summary>Sets the shim of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.MapToEntityT4">
            <summary>Sets the shim of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.MapToEntityT5T0">
            <summary>Sets the shim of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.UpdatePermissionNameGet">
            <summary>Sets the shim of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimCrudAppServiceBase`6.UpdatePermissionNameSetString">
            <summary>Sets the shim of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute">
            <summary>Shim type of Abp.Application.Services.RemoteServiceAttribute</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.#ctor(Abp.Application.Services.RemoteServiceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsEnabledForMethodInfo">
            <summary>Sets the shim of RemoteServiceAttribute.IsEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsEnabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsEnabledFor(Type type)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsEnabledGet">
            <summary>Sets the shim of RemoteServiceAttribute.get_IsEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsEnabledSetBoolean">
            <summary>Sets the shim of RemoteServiceAttribute.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsMetadataEnabledForMethodInfo">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsMetadataEnabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataEnabledFor(Type type)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsMetadataEnabledGet">
            <summary>Sets the shim of RemoteServiceAttribute.get_IsMetadataEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.AllInstances.IsMetadataEnabledSetBoolean">
            <summary>Sets the shim of RemoteServiceAttribute.set_IsMetadataEnabled(Boolean value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.ConstructorBoolean">
            <summary>Sets the shim of RemoteServiceAttribute.RemoteServiceAttribute(Boolean isEnabled)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsEnabledForMethodInfo">
            <summary>Sets the shim of RemoteServiceAttribute.IsEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsEnabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsEnabledFor(Type type)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsEnabledGet">
            <summary>Sets the shim of RemoteServiceAttribute.get_IsEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsEnabledSetBoolean">
            <summary>Sets the shim of RemoteServiceAttribute.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsExplicitlyDisabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsExplicitlyDisabledFor(Type type)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsExplicitlyEnabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsExplicitlyEnabledFor(Type type)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataEnabledForMethodInfo">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataEnabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataEnabledFor(Type type)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataEnabledGet">
            <summary>Sets the shim of RemoteServiceAttribute.get_IsMetadataEnabled()</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataEnabledSetBoolean">
            <summary>Sets the shim of RemoteServiceAttribute.set_IsMetadataEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataExplicitlyDisabledForMethodInfo">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataExplicitlyDisabledFor(MethodInfo method)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataExplicitlyDisabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataExplicitlyDisabledFor(Type type)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataExplicitlyEnabledForMethodInfo">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataExplicitlyEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.ShimRemoteServiceAttribute.IsMetadataExplicitlyEnabledForType">
            <summary>Sets the shim of RemoteServiceAttribute.IsMetadataExplicitlyEnabledFor(Type type)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubApplicationService">
            <summary>Stub type of Abp.Application.Services.ApplicationService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubApplicationService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.InitializeStub">
            <summary>Initializes a new instance of type StubApplicationService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubApplicationService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubApplicationService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubApplicationService.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubApplicationService.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubApplicationService.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubApplicationService.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubApplicationService.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubApplicationService.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubApplicationService.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2">
            <summary>Stub type of Abp.Application.Services.AsyncCrudAppService`2</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.#ctor(Abp.Domain.Repositories.IRepository{`0,System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.ApplyPaging(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.ApplyPagingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.ApplySorting(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.ApplySortingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.Create(`1)">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CreateFilteredQuery(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CreateFilteredQueryPagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.CreateT1">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.Delete(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.DeleteEntityDtoOfInt32">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.Get(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetEntityByIdAsync(System.Int32)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetEntityByIdAsyncInt32">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetEntityDtoOfInt32">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.MapToEntity(`1)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.MapToEntity(`1,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.MapToEntityT1">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.MapToEntityT1T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.Update(`1)">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`2.UpdateT1">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3">
            <summary>Stub type of Abp.Application.Services.AsyncCrudAppService`3</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.ApplyPaging(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.ApplyPagingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.ApplySorting(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.ApplySortingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.Create(`1)">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CreateFilteredQuery(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CreateFilteredQueryPagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.CreateT1">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.DeleteEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetEntityByIdAsync(`2)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetEntityByIdAsyncT2">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.MapToEntity(`1)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.MapToEntity(`1,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.MapToEntityT1">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.MapToEntityT1T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.Update(`1)">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`3.UpdateT1">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4">
            <summary>Stub type of Abp.Application.Services.AsyncCrudAppService`4</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.Create(`1)">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.CreateT1">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.DeleteEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetAll(`3)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetAllT3">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetEntityByIdAsync(`2)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetEntityByIdAsyncT2">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.MapToEntity(`1)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.MapToEntity(`1,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.MapToEntityT1">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.MapToEntityT1T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.Update(`1)">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`4.UpdateT1">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5">
            <summary>Stub type of Abp.Application.Services.AsyncCrudAppService`5</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.Create(`4)">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.CreateT4">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.DeleteEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetAll(`3)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetAllT3">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetEntityByIdAsync(`2)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetEntityByIdAsyncT2">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.MapToEntity(`4,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.MapToEntityT4T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.Update(`4)">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`5.UpdateT4">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6">
            <summary>Stub type of Abp.Application.Services.AsyncCrudAppService`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.Create(`4)">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.CreateT4">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.DeleteEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetAll(`3)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetAllT3">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetEntityByIdAsync(`2)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetEntityByIdAsyncT2">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.MapToEntity(`5,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.MapToEntityT5T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.Update(`5)">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`6.UpdateT5">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7">
            <summary>Stub type of Abp.Application.Services.AsyncCrudAppService`7</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.Create(`4)">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.CreateT4">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.DeleteEntityDtoOfT2">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.Get(`6)">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetAll(`3)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetAllT3">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetEntityByIdAsync(`2)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetEntityByIdAsyncT2">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.GetT6">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.MapToEntity(`5,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.MapToEntityT5T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.Update(`5)">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`7.UpdateT5">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8">
            <summary>Stub type of Abp.Application.Services.AsyncCrudAppService`8</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubAsyncCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.Create(`4)">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.CreateT4">
            <summary>Sets the stub of AsyncCrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.Delete(`7)">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.DeleteT7">
            <summary>Sets the stub of AsyncCrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.Get(`6)">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetAll(`3)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetAllT3">
            <summary>Sets the stub of AsyncCrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetEntityByIdAsync(`2)">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetEntityByIdAsyncT2">
            <summary>Sets the stub of AsyncCrudAppService`8.GetEntityByIdAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.GetT6">
            <summary>Sets the stub of AsyncCrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.MapToEntity(`5,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.MapToEntityT5T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.Update(`5)">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubAsyncCrudAppService`8.UpdateT5">
            <summary>Sets the stub of AsyncCrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppService`2">
            <summary>Stub type of Abp.Application.Services.CrudAppService`2</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.#ctor(Abp.Domain.Repositories.IRepository{`0,System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.ApplyPaging(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.ApplyPagingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.ApplySorting(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.ApplySortingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.Create(`1)">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.CreateFilteredQuery(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CreateFilteredQueryPagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.CreateT1">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.Delete(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.DeleteEntityDtoOfInt32">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.Get(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.GetEntityById(System.Int32)">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.GetEntityByIdInt32">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.GetEntityDtoOfInt32">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.MapToEntity(`1)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.MapToEntity(`1,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.MapToEntityT1">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.MapToEntityT1T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`2.Update(`1)">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`2.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`2.UpdateT1">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppService`3">
            <summary>Stub type of Abp.Application.Services.CrudAppService`3</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.ApplyPaging(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.ApplyPagingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.ApplySorting(System.Linq.IQueryable{`0},Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.ApplySortingIQueryableOfT0PagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.Create(`1)">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.CreateFilteredQuery(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CreateFilteredQueryPagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.CreateT1">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.DeleteEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.GetEntityById(`2)">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.GetEntityByIdT2">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.GetEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.MapToEntity(`1)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.MapToEntity(`1,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.MapToEntityT1">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.MapToEntityT1T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`3.Update(`1)">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`3.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`3.UpdateT1">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppService`4">
            <summary>Stub type of Abp.Application.Services.CrudAppService`4</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.Create(`1)">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.CreateT1">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.DeleteEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.GetAll(`3)">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.GetAllT3">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.GetEntityById(`2)">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.GetEntityByIdT2">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.GetEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.MapToEntity(`1)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.MapToEntity(`1,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.MapToEntityT1">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.MapToEntityT1T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`4.Update(`1)">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`4.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`4.UpdateT1">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppService`5">
            <summary>Stub type of Abp.Application.Services.CrudAppService`5</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.Create(`4)">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.CreateT4">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.DeleteEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.GetAll(`3)">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.GetAllT3">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.GetEntityById(`2)">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.GetEntityByIdT2">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.GetEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.MapToEntity(`4,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.MapToEntityT4T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`5.Update(`4)">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`5.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`5.UpdateT4">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppService`6">
            <summary>Stub type of Abp.Application.Services.CrudAppService`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.Create(`4)">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.CreateT4">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.DeleteEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.Get(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.GetAll(`3)">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.GetAllT3">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.GetEntityById(`2)">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.GetEntityByIdT2">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.GetEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.MapToEntity(`5,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.MapToEntityT5T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`6.Update(`5)">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`6.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`6.UpdateT5">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppService`7">
            <summary>Stub type of Abp.Application.Services.CrudAppService`7</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.Create(`4)">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.CreateT4">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.Delete(Abp.Application.Services.Dto.EntityDto{`2})">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.DeleteEntityDtoOfT2">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.Get(`6)">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.GetAll(`3)">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.GetAllT3">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.GetEntityById(`2)">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.GetEntityByIdT2">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.GetT6">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.MapToEntity(`5,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.MapToEntityT5T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`7.Update(`5)">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`7.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`7.UpdateT5">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppService`8">
            <summary>Stub type of Abp.Application.Services.CrudAppService`8</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppService.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.Create(`4)">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.CreateT4">
            <summary>Sets the stub of CrudAppService`8.Create(!4 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.Delete(`7)">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.DeleteT7">
            <summary>Sets the stub of CrudAppService`8.Delete(!7 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.Get(`6)">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.GetAll(`3)">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.GetAllT3">
            <summary>Sets the stub of CrudAppService`8.GetAll(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.GetEntityById(`2)">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.GetEntityByIdT2">
            <summary>Sets the stub of CrudAppService`8.GetEntityById(!2 id)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.GetT6">
            <summary>Sets the stub of CrudAppService`8.Get(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppService</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.MapToEntity(`5,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.MapToEntityT5T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppService`8.Update(`5)">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppService`8.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppService`8.UpdateT5">
            <summary>Sets the stub of CrudAppService`8.Update(!5 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6">
            <summary>Stub type of Abp.Application.Services.CrudAppServiceBase`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.#ctor(Abp.Domain.Repositories.IRepository{`0,`2})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.ApplyPaging(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.ApplyPagingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplyPaging(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.ApplySorting(System.Linq.IQueryable{`0},`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.ApplySortingIQueryableOfT0T3">
            <summary>Sets the stub of CrudAppServiceBase`6.ApplySorting(IQueryable`1&lt;!0&gt; query, !3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.AttachBackingFieldToCreatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppServiceBase.CreatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.AttachBackingFieldToDeletePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppServiceBase.DeletePermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.AttachBackingFieldToGetAllPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppServiceBase.GetAllPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.AttachBackingFieldToGetPermissionName">
            <summary>Attaches delegates to emulate StubCrudAppServiceBase.GetPermissionName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.AttachBackingFieldToUpdatePermissionName">
            <summary>Attaches delegates to emulate StubCrudAppServiceBase.UpdatePermissionName as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckCreatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckCreatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckCreatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckDeletePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckDeletePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckDeletePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckGetAllPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckGetAllPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetAllPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckGetPermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckGetPermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckGetPermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckPermission(System.String)">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckPermissionString">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckPermission(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckUpdatePermission">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CheckUpdatePermission01">
            <summary>Sets the stub of CrudAppServiceBase`6.CheckUpdatePermission()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CreateFilteredQuery(`3)">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CreateFilteredQueryT3">
            <summary>Sets the stub of CrudAppServiceBase`6.CreateFilteredQuery(!3 input)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CreatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CreatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_CreatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.CreatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_CreatePermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.DeletePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.DeletePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_DeletePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.DeletePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_DeletePermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.GetAllPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.GetAllPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetAllPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.GetAllPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetAllPermissionName(String value)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.GetPermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.GetPermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_GetPermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.GetPermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_GetPermissionName(String value)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.InitializeStub">
            <summary>Initializes a new instance of type StubCrudAppServiceBase</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsEnabled(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsEnabledAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsEnabledAsyncString">
            <summary>Sets the stub of ApplicationService.IsEnabledAsync(String featureName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsEnabledString">
            <summary>Sets the stub of ApplicationService.IsEnabled(String featureName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsGranted(System.String)">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsGrantedAsync(System.String)">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsGrantedAsyncString">
            <summary>Sets the stub of ApplicationService.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.IsGrantedString">
            <summary>Sets the stub of ApplicationService.IsGranted(String permissionName)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.MapToEntity(`4)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.MapToEntity(`5,`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.MapToEntityDto(`0)">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.MapToEntityDtoT0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntityDto(!0 entity)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.MapToEntityT4">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!4 createInput)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.MapToEntityT5T0">
            <summary>Sets the stub of CrudAppServiceBase`6.MapToEntity(!5 updateInput, !0 entity)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.UpdatePermissionName">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.UpdatePermissionNameGet">
            <summary>Sets the stub of CrudAppServiceBase`6.get_UpdatePermissionName()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubCrudAppServiceBase`6.UpdatePermissionNameSetString">
            <summary>Sets the stub of CrudAppServiceBase`6.set_UpdatePermissionName(String value)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIApplicationService">
            <summary>Stub type of Abp.Application.Services.IApplicationService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIApplicationService.#ctor">
            <summary>Initializes a new instance of type StubIApplicationService</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1">
            <summary>Stub type of Abp.Application.Services.IAsyncCrudAppService`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Create(`0)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Delete(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Get(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Update(`0)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.CreateT0">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.DeleteEntityDtoOfInt32">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.GetEntityDtoOfInt32">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`1.UpdateT0">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2">
            <summary>Stub type of Abp.Application.Services.IAsyncCrudAppService`2</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`0)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`0)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.CreateT0">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.DeleteEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.GetEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`2.UpdateT0">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3">
            <summary>Stub type of Abp.Application.Services.IAsyncCrudAppService`3</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`0)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`0)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.CreateT0">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.DeleteEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.GetAllT2">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.GetEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`3.UpdateT0">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4">
            <summary>Stub type of Abp.Application.Services.IAsyncCrudAppService`4</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`3)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`3)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.CreateT3">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.DeleteEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.GetAllT2">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.GetEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`4.UpdateT3">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5">
            <summary>Stub type of Abp.Application.Services.IAsyncCrudAppService`5</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`3)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`4)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.CreateT3">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.DeleteEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.GetAllT2">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.GetEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`5.UpdateT4">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6">
            <summary>Stub type of Abp.Application.Services.IAsyncCrudAppService`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`3)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(`5)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`4)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.CreateT3">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.DeleteEntityDtoOfT1">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.GetAllT2">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.GetT5">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`6.UpdateT4">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7">
            <summary>Stub type of Abp.Application.Services.IAsyncCrudAppService`7</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Create(`3)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Delete(`6)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Get(`5)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#GetAll(`2)">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.Abp#Application#Services#IAsyncCrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Update(`4)">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.CreateT3">
            <summary>Sets the stub of IAsyncCrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.DeleteT6">
            <summary>Sets the stub of IAsyncCrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.GetAllT2">
            <summary>Sets the stub of IAsyncCrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.GetT5">
            <summary>Sets the stub of IAsyncCrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAsyncCrudAppService`7.UpdateT4">
            <summary>Sets the stub of IAsyncCrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubIAvoidDuplicateCrossCuttingConcerns">
            <summary>Stub type of Abp.Application.Services.IAvoidDuplicateCrossCuttingConcerns</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubIAvoidDuplicateCrossCuttingConcerns.#ctor">
            <summary>Initializes a new instance of type StubIAvoidDuplicateCrossCuttingConcerns</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubIAvoidDuplicateCrossCuttingConcerns.Abp#Application#Services#IAvoidDuplicateCrossCuttingConcerns#AppliedCrossCuttingConcerns">
            <summary>Sets the stub of IAvoidDuplicateCrossCuttingConcerns.get_AppliedCrossCuttingConcerns()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubIAvoidDuplicateCrossCuttingConcerns.AppliedCrossCuttingConcernsGet">
            <summary>Sets the stub of IAvoidDuplicateCrossCuttingConcerns.get_AppliedCrossCuttingConcerns()</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubICrudAppService`1">
            <summary>Stub type of Abp.Application.Services.ICrudAppService`1</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`1.#ctor">
            <summary>Initializes a new instance of type StubICrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`1.Abp#Application#Services#ICrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Create(`0)">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`1.Abp#Application#Services#ICrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Delete(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`1.Abp#Application#Services#ICrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Get(Abp.Application.Services.Dto.EntityDto{System.Int32})">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`1.Abp#Application#Services#ICrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`1.Abp#Application#Services#ICrudAppService{TEntityDto,System#Int32,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{System#Int32},Abp#Application#Services#Dto#EntityDto{System#Int32}}#Update(`0)">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`1.CreateT0">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`1.DeleteEntityDtoOfInt32">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`1.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`1.GetEntityDtoOfInt32">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`1.UpdateT0">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubICrudAppService`2">
            <summary>Stub type of Abp.Application.Services.ICrudAppService`2</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`2.#ctor">
            <summary>Initializes a new instance of type StubICrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`2.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`0)">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`2.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`2.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`2.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(Abp.Application.Services.Dto.PagedAndSortedResultRequestDto)">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`2.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,Abp#Application#Services#Dto#PagedAndSortedResultRequestDto,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`0)">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`2.CreateT0">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`2.DeleteEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`2.GetAllPagedAndSortedResultRequestDto">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`2.GetEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`2.UpdateT0">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubICrudAppService`3">
            <summary>Stub type of Abp.Application.Services.ICrudAppService`3</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`3.#ctor">
            <summary>Initializes a new instance of type StubICrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`3.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`0)">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`3.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`3.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`3.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`3.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TEntityDto,TEntityDto,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`0)">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`3.CreateT0">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`3.DeleteEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`3.GetAllT2">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`3.GetEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`3.UpdateT0">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubICrudAppService`4">
            <summary>Stub type of Abp.Application.Services.ICrudAppService`4</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`4.#ctor">
            <summary>Initializes a new instance of type StubICrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`4.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`3)">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`4.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`4.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`4.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`4.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TCreateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`3)">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`4.CreateT3">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`4.DeleteEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`4.GetAllT2">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`4.GetEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`4.UpdateT3">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubICrudAppService`5">
            <summary>Stub type of Abp.Application.Services.ICrudAppService`5</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`5.#ctor">
            <summary>Initializes a new instance of type StubICrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`5.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`3)">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`5.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`5.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`5.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`5.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey},Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`4)">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`5.CreateT3">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`5.DeleteEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`5.GetAllT2">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`5.GetEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`5.UpdateT4">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubICrudAppService`6">
            <summary>Stub type of Abp.Application.Services.ICrudAppService`6</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`6.#ctor">
            <summary>Initializes a new instance of type StubICrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`6.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Create(`3)">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`6.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Delete(Abp.Application.Services.Dto.EntityDto{`1})">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`6.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Get(`5)">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`6.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#GetAll(`2)">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`6.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,Abp#Application#Services#Dto#EntityDto{TPrimaryKey}}#Update(`4)">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`6.CreateT3">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`6.DeleteEntityDtoOfT1">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`6.GetAllT2">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`6.GetT5">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`6.UpdateT4">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubICrudAppService`7">
            <summary>Stub type of Abp.Application.Services.ICrudAppService`7</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`7.#ctor">
            <summary>Initializes a new instance of type StubICrudAppService</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`7.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Create(`3)">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`7.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Delete(`6)">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`7.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Get(`5)">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`7.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#GetAll(`2)">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubICrudAppService`7.Abp#Application#Services#ICrudAppService{TEntityDto,TPrimaryKey,TGetAllInput,TCreateInput,TUpdateInput,TGetInput,TDeleteInput}#Update(`4)">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`7.CreateT3">
            <summary>Sets the stub of ICrudAppService`7.Create(!3 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`7.DeleteT6">
            <summary>Sets the stub of ICrudAppService`7.Delete(!6 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`7.GetAllT2">
            <summary>Sets the stub of ICrudAppService`7.GetAll(!2 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`7.GetT5">
            <summary>Sets the stub of ICrudAppService`7.Get(!5 input)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubICrudAppService`7.UpdateT4">
            <summary>Sets the stub of ICrudAppService`7.Update(!4 input)</summary>
        </member>
        <member name="T:Abp.Application.Services.Fakes.StubRemoteServiceAttribute">
            <summary>Stub type of Abp.Application.Services.RemoteServiceAttribute</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRemoteServiceAttribute</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsEnabledFor(System.Type)">
            <summary>Sets the stub of RemoteServiceAttribute.IsEnabledFor(Type type)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsEnabledFor(System.Reflection.MethodInfo)">
            <summary>Sets the stub of RemoteServiceAttribute.IsEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsEnabledForMethodInfo">
            <summary>Sets the stub of RemoteServiceAttribute.IsEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsEnabledForType">
            <summary>Sets the stub of RemoteServiceAttribute.IsEnabledFor(Type type)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsMetadataEnabledFor(System.Type)">
            <summary>Sets the stub of RemoteServiceAttribute.IsMetadataEnabledFor(Type type)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsMetadataEnabledFor(System.Reflection.MethodInfo)">
            <summary>Sets the stub of RemoteServiceAttribute.IsMetadataEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsMetadataEnabledForMethodInfo">
            <summary>Sets the stub of RemoteServiceAttribute.IsMetadataEnabledFor(MethodInfo method)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.IsMetadataEnabledForType">
            <summary>Sets the stub of RemoteServiceAttribute.IsMetadataEnabledFor(Type type)</summary>
        </member>
        <member name="M:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Application.Services.Fakes.StubRemoteServiceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditInfo">
            <summary>Shim type of Abp.Auditing.AuditInfo</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditInfo.#ctor(Abp.Auditing.AuditInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.BrowserInfoGet">
            <summary>Sets the shim of AuditInfo.get_BrowserInfo()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.BrowserInfoSetString">
            <summary>Sets the shim of AuditInfo.set_BrowserInfo(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of AuditInfo.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of AuditInfo.set_ClientIpAddress(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ClientNameGet">
            <summary>Sets the shim of AuditInfo.get_ClientName()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ClientNameSetString">
            <summary>Sets the shim of AuditInfo.set_ClientName(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.CustomDataGet">
            <summary>Sets the shim of AuditInfo.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.CustomDataSetString">
            <summary>Sets the shim of AuditInfo.set_CustomData(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ExceptionGet">
            <summary>Sets the shim of AuditInfo.get_Exception()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ExceptionSetException">
            <summary>Sets the shim of AuditInfo.set_Exception(Exception value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ExecutionDurationGet">
            <summary>Sets the shim of AuditInfo.get_ExecutionDuration()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ExecutionDurationSetInt32">
            <summary>Sets the shim of AuditInfo.set_ExecutionDuration(Int32 value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ExecutionTimeGet">
            <summary>Sets the shim of AuditInfo.get_ExecutionTime()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ExecutionTimeSetDateTime">
            <summary>Sets the shim of AuditInfo.set_ExecutionTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ImpersonatorTenantIdGet">
            <summary>Sets the shim of AuditInfo.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ImpersonatorTenantIdSetNullableOfInt32">
            <summary>Sets the shim of AuditInfo.set_ImpersonatorTenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ImpersonatorUserIdGet">
            <summary>Sets the shim of AuditInfo.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ImpersonatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditInfo.set_ImpersonatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.MethodNameGet">
            <summary>Sets the shim of AuditInfo.get_MethodName()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.MethodNameSetString">
            <summary>Sets the shim of AuditInfo.set_MethodName(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ParametersGet">
            <summary>Sets the shim of AuditInfo.get_Parameters()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ParametersSetString">
            <summary>Sets the shim of AuditInfo.set_Parameters(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ServiceNameGet">
            <summary>Sets the shim of AuditInfo.get_ServiceName()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ServiceNameSetString">
            <summary>Sets the shim of AuditInfo.set_ServiceName(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.TenantIdGet">
            <summary>Sets the shim of AuditInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of AuditInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.ToString01">
            <summary>Sets the shim of AuditInfo.ToString()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.UserIdGet">
            <summary>Sets the shim of AuditInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.AllInstances.UserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditInfo.set_UserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.BrowserInfoGet">
            <summary>Sets the shim of AuditInfo.get_BrowserInfo()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.BrowserInfoSetString">
            <summary>Sets the shim of AuditInfo.set_BrowserInfo(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ClientIpAddressGet">
            <summary>Sets the shim of AuditInfo.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ClientIpAddressSetString">
            <summary>Sets the shim of AuditInfo.set_ClientIpAddress(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ClientNameGet">
            <summary>Sets the shim of AuditInfo.get_ClientName()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ClientNameSetString">
            <summary>Sets the shim of AuditInfo.set_ClientName(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.Constructor">
            <summary>Sets the shim of AuditInfo.AuditInfo()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.CustomDataGet">
            <summary>Sets the shim of AuditInfo.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.CustomDataSetString">
            <summary>Sets the shim of AuditInfo.set_CustomData(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ExceptionGet">
            <summary>Sets the shim of AuditInfo.get_Exception()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ExceptionSetException">
            <summary>Sets the shim of AuditInfo.set_Exception(Exception value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ExecutionDurationGet">
            <summary>Sets the shim of AuditInfo.get_ExecutionDuration()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ExecutionDurationSetInt32">
            <summary>Sets the shim of AuditInfo.set_ExecutionDuration(Int32 value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ExecutionTimeGet">
            <summary>Sets the shim of AuditInfo.get_ExecutionTime()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ExecutionTimeSetDateTime">
            <summary>Sets the shim of AuditInfo.set_ExecutionTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ImpersonatorTenantIdGet">
            <summary>Sets the shim of AuditInfo.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ImpersonatorTenantIdSetNullableOfInt32">
            <summary>Sets the shim of AuditInfo.set_ImpersonatorTenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ImpersonatorUserIdGet">
            <summary>Sets the shim of AuditInfo.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ImpersonatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditInfo.set_ImpersonatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.MethodNameGet">
            <summary>Sets the shim of AuditInfo.get_MethodName()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.MethodNameSetString">
            <summary>Sets the shim of AuditInfo.set_MethodName(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ParametersGet">
            <summary>Sets the shim of AuditInfo.get_Parameters()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ParametersSetString">
            <summary>Sets the shim of AuditInfo.set_Parameters(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ServiceNameGet">
            <summary>Sets the shim of AuditInfo.get_ServiceName()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ServiceNameSetString">
            <summary>Sets the shim of AuditInfo.set_ServiceName(String value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.TenantIdGet">
            <summary>Sets the shim of AuditInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of AuditInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.ToString">
            <summary>Sets the shim of AuditInfo.ToString()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.UserIdGet">
            <summary>Sets the shim of AuditInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditInfo.UserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditInfo.set_UserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditedAttribute">
            <summary>Shim type of Abp.Auditing.AuditedAttribute</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditedAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditedAttribute.#ctor(Abp.Auditing.AuditedAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditedAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditedAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditedAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditedAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditedAttribute.Constructor">
            <summary>Sets the shim of AuditedAttribute.AuditedAttribute()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditingContractResolver">
            <summary>Shim type of Abp.Auditing.AuditingContractResolver</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingContractResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingContractResolver.#ctor(Abp.Auditing.AuditingContractResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditingContractResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingContractResolver.AllInstances.CreatePropertyMemberInfoMemberSerialization">
            <summary>Sets the shim of AuditingContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingContractResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingContractResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingContractResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingContractResolver.Bind(Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingContractResolver.ConstructorListOfType">
            <summary>Sets the shim of AuditingContractResolver.AuditingContractResolver(List`1&lt;Type&gt; ignoredTypes)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingContractResolver.CreatePropertyMemberInfoMemberSerialization">
            <summary>Sets the shim of AuditingContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditingHelper">
            <summary>Shim type of Abp.Auditing.AuditingHelper</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingHelper.#ctor(Abp.Auditing.AuditingHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AbpSessionGet">
            <summary>Sets the shim of AuditingHelper.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AbpSessionSetIAbpSession">
            <summary>Sets the shim of AuditingHelper.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.AbpSessionGet">
            <summary>Sets the shim of AuditingHelper.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.AbpSessionSetIAbpSession">
            <summary>Sets the shim of AuditingHelper.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.AuditingStoreGet">
            <summary>Sets the shim of AuditingHelper.get_AuditingStore()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.AuditingStoreSetIAuditingStore">
            <summary>Sets the shim of AuditingHelper.set_AuditingStore(IAuditingStore value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.ConvertArgumentsToJsonIDictionaryOfStringObject">
            <summary>Sets the shim of AuditingHelper.ConvertArgumentsToJson(IDictionary`2&lt;String,Object&gt; arguments)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.CreateAuditInfoTypeMethodInfoIDictionaryOfStringObject">
            <summary>Sets the shim of AuditingHelper.CreateAuditInfo(Type type, MethodInfo method, IDictionary`2&lt;String,Object&gt; arguments)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.CreateAuditInfoTypeMethodInfoObjectArray">
            <summary>Sets the shim of AuditingHelper.CreateAuditInfo(Type type, MethodInfo method, Object[] arguments)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.LoggerGet">
            <summary>Sets the shim of AuditingHelper.get_Logger()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of AuditingHelper.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.SaveAsyncAuditInfo">
            <summary>Sets the shim of AuditingHelper.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.SaveAuditInfo">
            <summary>Sets the shim of AuditingHelper.Save(AuditInfo auditInfo)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AllInstances.ShouldSaveAuditMethodInfoBoolean">
            <summary>Sets the shim of AuditingHelper.ShouldSaveAudit(MethodInfo methodInfo, Boolean defaultValue)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AuditingStoreGet">
            <summary>Sets the shim of AuditingHelper.get_AuditingStore()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.AuditingStoreSetIAuditingStore">
            <summary>Sets the shim of AuditingHelper.set_AuditingStore(IAuditingStore value)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingHelper.Bind(Abp.Auditing.IAuditingHelper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingHelper.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.ConstructorIAuditInfoProviderIAuditingConfigurationIUnitOfWorkManagerIAuditSerializer">
            <summary>Sets the shim of AuditingHelper.AuditingHelper(IAuditInfoProvider auditInfoProvider, IAuditingConfiguration configuration, IUnitOfWorkManager unitOfWorkManager, IAuditSerializer auditSerializer)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.ConvertArgumentsToJsonIDictionaryOfStringObject">
            <summary>Sets the shim of AuditingHelper.ConvertArgumentsToJson(IDictionary`2&lt;String,Object&gt; arguments)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.CreateArgumentsDictionaryMethodInfoObjectArray">
            <summary>Sets the shim of AuditingHelper.CreateArgumentsDictionary(MethodInfo method, Object[] arguments)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.CreateAuditInfoTypeMethodInfoIDictionaryOfStringObject">
            <summary>Sets the shim of AuditingHelper.CreateAuditInfo(Type type, MethodInfo method, IDictionary`2&lt;String,Object&gt; arguments)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.CreateAuditInfoTypeMethodInfoObjectArray">
            <summary>Sets the shim of AuditingHelper.CreateAuditInfo(Type type, MethodInfo method, Object[] arguments)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.LoggerGet">
            <summary>Sets the shim of AuditingHelper.get_Logger()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.LoggerSetILogger">
            <summary>Sets the shim of AuditingHelper.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.SaveAsyncAuditInfo">
            <summary>Sets the shim of AuditingHelper.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.SaveAuditInfo">
            <summary>Sets the shim of AuditingHelper.Save(AuditInfo auditInfo)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingHelper.ShouldSaveAuditMethodInfoBoolean">
            <summary>Sets the shim of AuditingHelper.ShouldSaveAudit(MethodInfo methodInfo, Boolean defaultValue)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimAuditingStoreExtensions">
            <summary>Shim type of Abp.Auditing.AuditingStoreExtensions</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingStoreExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingStoreExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimAuditingStoreExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingStoreExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimAuditingStoreExtensions.SaveIAuditingStoreAuditInfo">
            <summary>Sets the shim of AuditingStoreExtensions.Save(IAuditingStore auditingStore, AuditInfo auditInfo)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider">
            <summary>Shim type of Abp.Auditing.DefaultAuditInfoProvider</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.#ctor(Abp.Auditing.DefaultAuditInfoProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.AllInstances.ClientInfoProviderGet">
            <summary>Sets the shim of DefaultAuditInfoProvider.get_ClientInfoProvider()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.AllInstances.ClientInfoProviderSetIClientInfoProvider">
            <summary>Sets the shim of DefaultAuditInfoProvider.set_ClientInfoProvider(IClientInfoProvider value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.AllInstances.FillAuditInfo">
            <summary>Sets the shim of DefaultAuditInfoProvider.Fill(AuditInfo auditInfo)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.Bind(Abp.Auditing.IAuditInfoProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.ClientInfoProviderGet">
            <summary>Sets the shim of DefaultAuditInfoProvider.get_ClientInfoProvider()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.ClientInfoProviderSetIClientInfoProvider">
            <summary>Sets the shim of DefaultAuditInfoProvider.set_ClientInfoProvider(IClientInfoProvider value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.Constructor">
            <summary>Sets the shim of DefaultAuditInfoProvider.DefaultAuditInfoProvider()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDefaultAuditInfoProvider.FillAuditInfo">
            <summary>Sets the shim of DefaultAuditInfoProvider.Fill(AuditInfo auditInfo)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimDisableAuditingAttribute">
            <summary>Shim type of Abp.Auditing.DisableAuditingAttribute</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDisableAuditingAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDisableAuditingAttribute.#ctor(Abp.Auditing.DisableAuditingAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimDisableAuditingAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDisableAuditingAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimDisableAuditingAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDisableAuditingAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimDisableAuditingAttribute.Constructor">
            <summary>Sets the shim of DisableAuditingAttribute.DisableAuditingAttribute()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer">
            <summary>Shim type of Abp.Auditing.JsonNetAuditSerializer</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.#ctor(Abp.Auditing.JsonNetAuditSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.AllInstances.SerializeObject">
            <summary>Sets the shim of JsonNetAuditSerializer.Serialize(Object obj)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.Bind(Abp.Auditing.IAuditSerializer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.ConstructorIAuditingConfiguration">
            <summary>Sets the shim of JsonNetAuditSerializer.JsonNetAuditSerializer(IAuditingConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimJsonNetAuditSerializer.SerializeObject">
            <summary>Sets the shim of JsonNetAuditSerializer.Serialize(Object obj)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimNullClientInfoProvider">
            <summary>Shim type of Abp.Auditing.NullClientInfoProvider</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimNullClientInfoProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimNullClientInfoProvider.#ctor(Abp.Auditing.NullClientInfoProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimNullClientInfoProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.AllInstances.BrowserInfoGet">
            <summary>Sets the shim of NullClientInfoProvider.get_BrowserInfo()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of NullClientInfoProvider.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.AllInstances.ComputerNameGet">
            <summary>Sets the shim of NullClientInfoProvider.get_ComputerName()</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimNullClientInfoProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimNullClientInfoProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimNullClientInfoProvider.Bind(Abp.Auditing.IClientInfoProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.BrowserInfoGet">
            <summary>Sets the shim of NullClientInfoProvider.get_BrowserInfo()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.ClientIpAddressGet">
            <summary>Sets the shim of NullClientInfoProvider.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.ComputerNameGet">
            <summary>Sets the shim of NullClientInfoProvider.get_ComputerName()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.Constructor">
            <summary>Sets the shim of NullClientInfoProvider.NullClientInfoProvider()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.InstanceGet">
            <summary>Sets the shim of NullClientInfoProvider.get_Instance()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimNullClientInfoProvider.StaticConstructor">
            <summary>Sets the shim of NullClientInfoProvider.NullClientInfoProvider()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore">
            <summary>Shim type of Abp.Auditing.SimpleLogAuditingStore</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.#ctor(Abp.Auditing.SimpleLogAuditingStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.AllInstances.LoggerGet">
            <summary>Sets the shim of SimpleLogAuditingStore.get_Logger()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of SimpleLogAuditingStore.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.AllInstances.SaveAsyncAuditInfo">
            <summary>Sets the shim of SimpleLogAuditingStore.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.Bind(Abp.Auditing.IAuditingStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.Constructor">
            <summary>Sets the shim of SimpleLogAuditingStore.SimpleLogAuditingStore()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.InstanceGet">
            <summary>Sets the shim of SimpleLogAuditingStore.get_Instance()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.LoggerGet">
            <summary>Sets the shim of SimpleLogAuditingStore.get_Logger()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.LoggerSetILogger">
            <summary>Sets the shim of SimpleLogAuditingStore.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.SaveAsyncAuditInfo">
            <summary>Sets the shim of SimpleLogAuditingStore.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.ShimSimpleLogAuditingStore.StaticConstructor">
            <summary>Sets the shim of SimpleLogAuditingStore.SimpleLogAuditingStore()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubAuditInfo">
            <summary>Stub type of Abp.Auditing.AuditInfo</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditInfo.InitializeStub">
            <summary>Initializes a new instance of type StubAuditInfo</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditInfo.ToString">
            <summary>Sets the stub of AuditInfo.ToString()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditInfo.ToString01">
            <summary>Sets the stub of AuditInfo.ToString()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubAuditedAttribute">
            <summary>Stub type of Abp.Auditing.AuditedAttribute</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditedAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditedAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditedAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditedAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditedAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditedAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditedAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedAttribute</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditedAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditedAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditedAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditedAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditedAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditedAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditedAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditedAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubAuditingContractResolver">
            <summary>Stub type of Abp.Auditing.AuditingContractResolver</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.#ctor(System.Collections.Generic.List{System.Type})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditingContractResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateArrayContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateArrayContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateArrayContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateArrayContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)">
            <summary>Sets the stub of DefaultContractResolver.CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateConstructorParametersConstructorInfoJsonPropertyCollection">
            <summary>Sets the stub of DefaultContractResolver.CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateDictionaryContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateDictionaryContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateDictionaryContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateDictionaryContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateDynamicContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateDynamicContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateDynamicContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateDynamicContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateISerializableContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateISerializableContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateISerializableContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateISerializableContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateLinqContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateLinqContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateLinqContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateLinqContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>Sets the stub of DefaultContractResolver.CreateMemberValueProvider(MemberInfo member)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateMemberValueProviderMemberInfo">
            <summary>Sets the stub of DefaultContractResolver.CreateMemberValueProvider(MemberInfo member)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateObjectContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateObjectContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateObjectContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateObjectContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreatePrimitiveContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreatePrimitiveContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreatePrimitiveContractType">
            <summary>Sets the stub of DefaultContractResolver.CreatePrimitiveContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>Sets the stub of DefaultContractResolver.CreateProperties(Type type, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreatePropertiesTypeMemberSerialization">
            <summary>Sets the stub of DefaultContractResolver.CreateProperties(Type type, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>Sets the stub of AuditingContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
            <summary>Sets the stub of DefaultContractResolver.CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreatePropertyFromConstructorParameterJsonPropertyParameterInfo">
            <summary>Sets the stub of DefaultContractResolver.CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreatePropertyMemberInfoMemberSerialization">
            <summary>Sets the stub of AuditingContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateStringContract(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.CreateStringContract(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.CreateStringContractType">
            <summary>Sets the stub of DefaultContractResolver.CreateStringContract(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.GetSerializableMembers(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.GetSerializableMembers(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.GetSerializableMembersType">
            <summary>Sets the stub of DefaultContractResolver.GetSerializableMembers(Type objectType)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.InitializeStub">
            <summary>Initializes a new instance of type StubAuditingContractResolver</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditingContractResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditingContractResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveContract(System.Type)">
            <summary>Sets the stub of CamelCasePropertyNamesContractResolver.ResolveContract(Type type)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveContractConverter(System.Type)">
            <summary>Sets the stub of DefaultContractResolver.ResolveContractConverter(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveContractConverterType">
            <summary>Sets the stub of DefaultContractResolver.ResolveContractConverter(Type objectType)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveContractType">
            <summary>Sets the stub of CamelCasePropertyNamesContractResolver.ResolveContract(Type type)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveDictionaryKey(System.String)">
            <summary>Sets the stub of DefaultContractResolver.ResolveDictionaryKey(String dictionaryKey)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveDictionaryKeyString">
            <summary>Sets the stub of DefaultContractResolver.ResolveDictionaryKey(String dictionaryKey)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveExtensionDataName(System.String)">
            <summary>Sets the stub of DefaultContractResolver.ResolveExtensionDataName(String extensionDataName)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolveExtensionDataNameString">
            <summary>Sets the stub of DefaultContractResolver.ResolveExtensionDataName(String extensionDataName)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolvePropertyName(System.String)">
            <summary>Sets the stub of DefaultContractResolver.ResolvePropertyName(String propertyName)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubAuditingContractResolver.ResolvePropertyNameString">
            <summary>Sets the stub of DefaultContractResolver.ResolvePropertyName(String propertyName)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubAuditingHelper">
            <summary>Stub type of Abp.Auditing.AuditingHelper</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingHelper.#ctor(Abp.Auditing.IAuditInfoProvider,Abp.Auditing.IAuditingConfiguration,Abp.Domain.Uow.IUnitOfWorkManager,Abp.Auditing.IAuditSerializer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditingHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubAuditingHelper.InitializeStub">
            <summary>Initializes a new instance of type StubAuditingHelper</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditingHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubAuditingHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider">
            <summary>Stub type of Abp.Auditing.DefaultAuditInfoProvider</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider.Fill(Abp.Auditing.AuditInfo)">
            <summary>Sets the stub of DefaultAuditInfoProvider.Fill(AuditInfo auditInfo)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider.FillAuditInfo">
            <summary>Sets the stub of DefaultAuditInfoProvider.Fill(AuditInfo auditInfo)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultAuditInfoProvider</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubDefaultAuditInfoProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubDisableAuditingAttribute">
            <summary>Stub type of Abp.Auditing.DisableAuditingAttribute</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDisableAuditingAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubDisableAuditingAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDisableAuditingAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubDisableAuditingAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDisableAuditingAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubDisableAuditingAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDisableAuditingAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDisableAuditingAttribute</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubDisableAuditingAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubDisableAuditingAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDisableAuditingAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubDisableAuditingAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubDisableAuditingAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubDisableAuditingAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubDisableAuditingAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubDisableAuditingAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubIAuditInfoProvider">
            <summary>Stub type of Abp.Auditing.IAuditInfoProvider</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditInfoProvider.#ctor">
            <summary>Initializes a new instance of type StubIAuditInfoProvider</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditInfoProvider.Abp#Auditing#IAuditInfoProvider#Fill(Abp.Auditing.AuditInfo)">
            <summary>Sets the stub of IAuditInfoProvider.Fill(AuditInfo auditInfo)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditInfoProvider.FillAuditInfo">
            <summary>Sets the stub of IAuditInfoProvider.Fill(AuditInfo auditInfo)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubIAuditSerializer">
            <summary>Stub type of Abp.Auditing.IAuditSerializer</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditSerializer.#ctor">
            <summary>Initializes a new instance of type StubIAuditSerializer</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditSerializer.Abp#Auditing#IAuditSerializer#Serialize(System.Object)">
            <summary>Sets the stub of IAuditSerializer.Serialize(Object obj)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditSerializer.SerializeObject">
            <summary>Sets the stub of IAuditSerializer.Serialize(Object obj)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubIAuditingConfiguration">
            <summary>Stub type of Abp.Auditing.IAuditingConfiguration</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIAuditingConfiguration</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingConfiguration.AttachBackingFieldToIsEnabled">
            <summary>Attaches delegates to emulate StubIAuditingConfiguration.IsEnabled as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingConfiguration.AttachBackingFieldToIsEnabledForAnonymousUsers">
            <summary>Attaches delegates to emulate StubIAuditingConfiguration.IsEnabledForAnonymousUsers as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIAuditingConfiguration.Abp#Auditing#IAuditingConfiguration#IgnoredTypes">
            <summary>Sets the stub of IAuditingConfiguration.get_IgnoredTypes()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingConfiguration.IgnoredTypesGet">
            <summary>Sets the stub of IAuditingConfiguration.get_IgnoredTypes()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIAuditingConfiguration.Abp#Auditing#IAuditingConfiguration#IsEnabled">
            <summary>Sets the stub of IAuditingConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIAuditingConfiguration.Abp#Auditing#IAuditingConfiguration#IsEnabledForAnonymousUsers">
            <summary>Sets the stub of IAuditingConfiguration.get_IsEnabledForAnonymousUsers()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingConfiguration.IsEnabledForAnonymousUsersGet">
            <summary>Sets the stub of IAuditingConfiguration.get_IsEnabledForAnonymousUsers()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingConfiguration.IsEnabledForAnonymousUsersSetBoolean">
            <summary>Sets the stub of IAuditingConfiguration.set_IsEnabledForAnonymousUsers(Boolean value)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingConfiguration.IsEnabledGet">
            <summary>Sets the stub of IAuditingConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingConfiguration.IsEnabledSetBoolean">
            <summary>Sets the stub of IAuditingConfiguration.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIAuditingConfiguration.Abp#Auditing#IAuditingConfiguration#Selectors">
            <summary>Sets the stub of IAuditingConfiguration.get_Selectors()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingConfiguration.SelectorsGet">
            <summary>Sets the stub of IAuditingConfiguration.get_Selectors()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubIAuditingHelper">
            <summary>Stub type of Abp.Auditing.IAuditingHelper</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingHelper.#ctor">
            <summary>Initializes a new instance of type StubIAuditingHelper</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingHelper.Abp#Auditing#IAuditingHelper#CreateAuditInfo(System.Type,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IAuditingHelper.CreateAuditInfo(Type type, MethodInfo method, Object[] arguments)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingHelper.Abp#Auditing#IAuditingHelper#CreateAuditInfo(System.Type,System.Reflection.MethodInfo,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of IAuditingHelper.CreateAuditInfo(Type type, MethodInfo method, IDictionary`2&lt;String,Object&gt; arguments)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingHelper.Abp#Auditing#IAuditingHelper#Save(Abp.Auditing.AuditInfo)">
            <summary>Sets the stub of IAuditingHelper.Save(AuditInfo auditInfo)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingHelper.Abp#Auditing#IAuditingHelper#SaveAsync(Abp.Auditing.AuditInfo)">
            <summary>Sets the stub of IAuditingHelper.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingHelper.Abp#Auditing#IAuditingHelper#ShouldSaveAudit(System.Reflection.MethodInfo,System.Boolean)">
            <summary>Sets the stub of IAuditingHelper.ShouldSaveAudit(MethodInfo methodInfo, Boolean defaultValue)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingHelper.CreateAuditInfoTypeMethodInfoIDictionaryOfStringObject">
            <summary>Sets the stub of IAuditingHelper.CreateAuditInfo(Type type, MethodInfo method, IDictionary`2&lt;String,Object&gt; arguments)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingHelper.CreateAuditInfoTypeMethodInfoObjectArray">
            <summary>Sets the stub of IAuditingHelper.CreateAuditInfo(Type type, MethodInfo method, Object[] arguments)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingHelper.SaveAsyncAuditInfo">
            <summary>Sets the stub of IAuditingHelper.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingHelper.SaveAuditInfo">
            <summary>Sets the stub of IAuditingHelper.Save(AuditInfo auditInfo)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingHelper.ShouldSaveAuditMethodInfoBoolean">
            <summary>Sets the stub of IAuditingHelper.ShouldSaveAudit(MethodInfo methodInfo, Boolean defaultValue)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubIAuditingSelectorList">
            <summary>Stub type of Abp.Auditing.IAuditingSelectorList</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.#ctor">
            <summary>Initializes a new instance of type StubIAuditingSelectorList</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.Abp#Auditing#IAuditingSelectorList#RemoveByName(System.String)">
            <summary>Sets the stub of IAuditingSelectorList.RemoveByName(String name)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.AddNamedTypeSelector">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.ContainsNamedTypeSelector">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.CopyToNamedTypeSelectorArrayInt32">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#ICollection{Abp#NamedTypeSelector}#Count">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.CountGet">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.IndexOfNamedTypeSelector">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.InsertInt32NamedTypeSelector">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#ICollection{Abp#NamedTypeSelector}#IsReadOnly">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.IsReadOnlyGet">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#IList{Abp#NamedTypeSelector}#Item(System.Int32)">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.ItemGetInt32">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.ItemSetInt32NamedTypeSelector">
            <summary>Sets the stub of IList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.RemoveAtInt32">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.RemoveByNameString">
            <summary>Sets the stub of IAuditingSelectorList.RemoveByName(String name)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingSelectorList.RemoveNamedTypeSelector">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#ICollection{Abp#NamedTypeSelector}#Add(Abp.NamedTypeSelector)">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#ICollection{Abp#NamedTypeSelector}#Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#ICollection{Abp#NamedTypeSelector}#Contains(Abp.NamedTypeSelector)">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#ICollection{Abp#NamedTypeSelector}#CopyTo(Abp.NamedTypeSelector[],System.Int32)">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#ICollection{Abp#NamedTypeSelector}#Remove(Abp.NamedTypeSelector)">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#IEnumerable{Abp#NamedTypeSelector}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#IList{Abp#NamedTypeSelector}#IndexOf(Abp.NamedTypeSelector)">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#IList{Abp#NamedTypeSelector}#Insert(System.Int32,Abp.NamedTypeSelector)">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#Generic#IList{Abp#NamedTypeSelector}#RemoveAt(System.Int32)">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingSelectorList.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubIAuditingStore">
            <summary>Stub type of Abp.Auditing.IAuditingStore</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingStore.#ctor">
            <summary>Initializes a new instance of type StubIAuditingStore</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIAuditingStore.Abp#Auditing#IAuditingStore#SaveAsync(Abp.Auditing.AuditInfo)">
            <summary>Sets the stub of IAuditingStore.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIAuditingStore.SaveAsyncAuditInfo">
            <summary>Sets the stub of IAuditingStore.SaveAsync(AuditInfo auditInfo)</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubIClientInfoProvider">
            <summary>Stub type of Abp.Auditing.IClientInfoProvider</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubIClientInfoProvider.#ctor">
            <summary>Initializes a new instance of type StubIClientInfoProvider</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIClientInfoProvider.Abp#Auditing#IClientInfoProvider#BrowserInfo">
            <summary>Sets the stub of IClientInfoProvider.get_BrowserInfo()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIClientInfoProvider.BrowserInfoGet">
            <summary>Sets the stub of IClientInfoProvider.get_BrowserInfo()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIClientInfoProvider.Abp#Auditing#IClientInfoProvider#ClientIpAddress">
            <summary>Sets the stub of IClientInfoProvider.get_ClientIpAddress()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIClientInfoProvider.ClientIpAddressGet">
            <summary>Sets the stub of IClientInfoProvider.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubIClientInfoProvider.Abp#Auditing#IClientInfoProvider#ComputerName">
            <summary>Sets the stub of IClientInfoProvider.get_ComputerName()</summary>
        </member>
        <member name="F:Abp.Auditing.Fakes.StubIClientInfoProvider.ComputerNameGet">
            <summary>Sets the stub of IClientInfoProvider.get_ComputerName()</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubJsonNetAuditSerializer">
            <summary>Stub type of Abp.Auditing.JsonNetAuditSerializer</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubJsonNetAuditSerializer.#ctor(Abp.Auditing.IAuditingConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubJsonNetAuditSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubJsonNetAuditSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubJsonNetAuditSerializer</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubJsonNetAuditSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubJsonNetAuditSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubNullClientInfoProvider">
            <summary>Stub type of Abp.Auditing.NullClientInfoProvider</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubNullClientInfoProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubNullClientInfoProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubNullClientInfoProvider.InitializeStub">
            <summary>Initializes a new instance of type StubNullClientInfoProvider</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubNullClientInfoProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubNullClientInfoProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Auditing.Fakes.StubSimpleLogAuditingStore">
            <summary>Stub type of Abp.Auditing.SimpleLogAuditingStore</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubSimpleLogAuditingStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubSimpleLogAuditingStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Auditing.Fakes.StubSimpleLogAuditingStore.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleLogAuditingStore</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubSimpleLogAuditingStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Auditing.Fakes.StubSimpleLogAuditingStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute">
            <summary>Shim type of Abp.Authorization.AbpAllowAnonymousAttribute</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.#ctor(Abp.Authorization.AbpAllowAnonymousAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.Bind(Abp.Authorization.IAbpAllowAnonymousAttribute)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAllowAnonymousAttribute.Constructor">
            <summary>Sets the shim of AbpAllowAnonymousAttribute.AbpAllowAnonymousAttribute()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAbpAuthorizationException">
            <summary>Shim type of Abp.Authorization.AbpAuthorizationException</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizationException.#ctor(Abp.Authorization.AbpAuthorizationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAbpAuthorizationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.AllInstances.SeverityGet">
            <summary>Sets the shim of AbpAuthorizationException.get_Severity()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.AllInstances.SeveritySetLogSeverity">
            <summary>Sets the shim of AbpAuthorizationException.set_Severity(LogSeverity value)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizationException.Bind(Abp.Logging.IHasLogSeverity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.Constructor">
            <summary>Sets the shim of AbpAuthorizationException.AbpAuthorizationException()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AbpAuthorizationException.AbpAuthorizationException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.ConstructorString">
            <summary>Sets the shim of AbpAuthorizationException.AbpAuthorizationException(String message)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.ConstructorStringException">
            <summary>Sets the shim of AbpAuthorizationException.AbpAuthorizationException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.SeverityGet">
            <summary>Sets the shim of AbpAuthorizationException.get_Severity()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizationException.SeveritySetLogSeverity">
            <summary>Sets the shim of AbpAuthorizationException.set_Severity(LogSeverity value)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute">
            <summary>Shim type of Abp.Authorization.AbpAuthorizeAttribute</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.#ctor(Abp.Authorization.AbpAuthorizeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.AllInstances.PermissionsGet">
            <summary>Sets the shim of AbpAuthorizeAttribute.get_Permissions()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.AllInstances.RequireAllPermissionsGet">
            <summary>Sets the shim of AbpAuthorizeAttribute.get_RequireAllPermissions()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.AllInstances.RequireAllPermissionsSetBoolean">
            <summary>Sets the shim of AbpAuthorizeAttribute.set_RequireAllPermissions(Boolean value)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.Bind(Abp.Authorization.IAbpAuthorizeAttribute)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.ConstructorStringArray">
            <summary>Sets the shim of AbpAuthorizeAttribute.AbpAuthorizeAttribute(String[] permissions)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.PermissionsGet">
            <summary>Sets the shim of AbpAuthorizeAttribute.get_Permissions()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.RequireAllPermissionsGet">
            <summary>Sets the shim of AbpAuthorizeAttribute.get_RequireAllPermissions()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAbpAuthorizeAttribute.RequireAllPermissionsSetBoolean">
            <summary>Sets the shim of AbpAuthorizeAttribute.set_RequireAllPermissions(Boolean value)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions">
            <summary>Shim type of Abp.Authorization.AuthorizationHelperExtensions</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.AuthorizeAsyncIAuthorizationHelperIAbpAuthorizeAttribute">
            <summary>Sets the shim of AuthorizationHelperExtensions.AuthorizeAsync(IAuthorizationHelper authorizationHelper, IAbpAuthorizeAttribute authorizeAttribute)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.AuthorizeIAuthorizationHelperIAbpAuthorizeAttribute">
            <summary>Sets the shim of AuthorizationHelperExtensions.Authorize(IAuthorizationHelper authorizationHelper, IAbpAuthorizeAttribute authorizeAttribute)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.AuthorizeIAuthorizationHelperIEnumerableOfIAbpAuthorizeAttribute">
            <summary>Sets the shim of AuthorizationHelperExtensions.Authorize(IAuthorizationHelper authorizationHelper, IEnumerable`1&lt;IAbpAuthorizeAttribute&gt; authorizeAttributes)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.AuthorizeIAuthorizationHelperMethodInfoType">
            <summary>Sets the shim of AuthorizationHelperExtensions.Authorize(IAuthorizationHelper authorizationHelper, MethodInfo methodInfo, Type type)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationHelperExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAuthorizationInterceptor">
            <summary>Shim type of Abp.Authorization.AuthorizationInterceptor</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.#ctor(Abp.Authorization.AuthorizationInterceptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.AllInstances.InterceptIInvocation">
            <summary>Sets the shim of AuthorizationInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.Bind(Castle.DynamicProxy.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.ConstructorIAuthorizationHelper">
            <summary>Sets the shim of AuthorizationInterceptor.AuthorizationInterceptor(IAuthorizationHelper authorizationHelper)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationInterceptor.InterceptIInvocation">
            <summary>Sets the shim of AuthorizationInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAuthorizationProvider">
            <summary>Shim type of Abp.Authorization.AuthorizationProvider</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationProvider.#ctor(Abp.Authorization.AuthorizationProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimAuthorizationProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimAuthorizationProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimAuthorizationProvider.Constructor">
            <summary>Sets the shim of AuthorizationProvider.AuthorizationProvider()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimNullPermissionChecker">
            <summary>Shim type of Abp.Authorization.NullPermissionChecker</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimNullPermissionChecker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimNullPermissionChecker.#ctor(Abp.Authorization.NullPermissionChecker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimNullPermissionChecker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.AllInstances.IsGrantedAsyncString">
            <summary>Sets the shim of NullPermissionChecker.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.AllInstances.IsGrantedAsyncUserIdentifierString">
            <summary>Sets the shim of NullPermissionChecker.IsGrantedAsync(UserIdentifier user, String permissionName)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimNullPermissionChecker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimNullPermissionChecker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimNullPermissionChecker.Bind(Abp.Authorization.IPermissionChecker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.Constructor">
            <summary>Sets the shim of NullPermissionChecker.NullPermissionChecker()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.InstanceGet">
            <summary>Sets the shim of NullPermissionChecker.get_Instance()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.IsGrantedAsyncString">
            <summary>Sets the shim of NullPermissionChecker.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.IsGrantedAsyncUserIdentifierString">
            <summary>Sets the shim of NullPermissionChecker.IsGrantedAsync(UserIdentifier user, String permissionName)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimNullPermissionChecker.StaticConstructor">
            <summary>Sets the shim of NullPermissionChecker.NullPermissionChecker()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimPermission">
            <summary>Shim type of Abp.Authorization.Permission</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermission.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermission.#ctor(Abp.Authorization.Permission)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimPermission.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.ChildrenGet">
            <summary>Sets the shim of Permission.get_Children()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.CreateChildPermissionStringILocalizableStringILocalizableStringMultiTenancySidesIFeatureDependency">
            <summary>Sets the shim of Permission.CreateChildPermission(String name, ILocalizableString displayName, ILocalizableString description, MultiTenancySides multiTenancySides, IFeatureDependency featureDependency)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.DescriptionGet">
            <summary>Sets the shim of Permission.get_Description()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.DescriptionSetILocalizableString">
            <summary>Sets the shim of Permission.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.DisplayNameGet">
            <summary>Sets the shim of Permission.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.DisplayNameSetILocalizableString">
            <summary>Sets the shim of Permission.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.FeatureDependencyGet">
            <summary>Sets the shim of Permission.get_FeatureDependency()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.FeatureDependencySetIFeatureDependency">
            <summary>Sets the shim of Permission.set_FeatureDependency(IFeatureDependency value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.MultiTenancySidesGet">
            <summary>Sets the shim of Permission.get_MultiTenancySides()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.MultiTenancySidesSetMultiTenancySides">
            <summary>Sets the shim of Permission.set_MultiTenancySides(MultiTenancySides value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.NameGet">
            <summary>Sets the shim of Permission.get_Name()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.ParentGet">
            <summary>Sets the shim of Permission.get_Parent()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.ParentSetPermission">
            <summary>Sets the shim of Permission.set_Parent(Permission value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.AllInstances.ToString01">
            <summary>Sets the shim of Permission.ToString()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermission.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermission.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.ChildrenGet">
            <summary>Sets the shim of Permission.get_Children()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.ConstructorStringILocalizableStringILocalizableStringMultiTenancySidesIFeatureDependency">
            <summary>Sets the shim of Permission.Permission(String name, ILocalizableString displayName, ILocalizableString description, MultiTenancySides multiTenancySides, IFeatureDependency featureDependency)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.CreateChildPermissionStringILocalizableStringILocalizableStringMultiTenancySidesIFeatureDependency">
            <summary>Sets the shim of Permission.CreateChildPermission(String name, ILocalizableString displayName, ILocalizableString description, MultiTenancySides multiTenancySides, IFeatureDependency featureDependency)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.DescriptionGet">
            <summary>Sets the shim of Permission.get_Description()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.DescriptionSetILocalizableString">
            <summary>Sets the shim of Permission.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.DisplayNameGet">
            <summary>Sets the shim of Permission.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.DisplayNameSetILocalizableString">
            <summary>Sets the shim of Permission.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.FeatureDependencyGet">
            <summary>Sets the shim of Permission.get_FeatureDependency()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.FeatureDependencySetIFeatureDependency">
            <summary>Sets the shim of Permission.set_FeatureDependency(IFeatureDependency value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.MultiTenancySidesGet">
            <summary>Sets the shim of Permission.get_MultiTenancySides()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.MultiTenancySidesSetMultiTenancySides">
            <summary>Sets the shim of Permission.set_MultiTenancySides(MultiTenancySides value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.NameGet">
            <summary>Sets the shim of Permission.get_Name()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.ParentGet">
            <summary>Sets the shim of Permission.get_Parent()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.ParentSetPermission">
            <summary>Sets the shim of Permission.set_Parent(Permission value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermission.ToString">
            <summary>Sets the shim of Permission.ToString()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions">
            <summary>Shim type of Abp.Authorization.PermissionCheckerExtensions</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.AuthorizeAsyncIPermissionCheckerBooleanStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.AuthorizeAsync(IPermissionChecker permissionChecker, Boolean requireAll, String[] permissionNames)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.AuthorizeAsyncIPermissionCheckerStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.AuthorizeAsync(IPermissionChecker permissionChecker, String[] permissionNames)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.AuthorizeIPermissionCheckerBooleanStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.Authorize(IPermissionChecker permissionChecker, Boolean requireAll, String[] permissionNames)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.AuthorizeIPermissionCheckerStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.Authorize(IPermissionChecker permissionChecker, String[] permissionNames)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.IsGrantedAsyncIPermissionCheckerBooleanStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.IsGrantedAsync(IPermissionChecker permissionChecker, Boolean requiresAll, String[] permissionNames)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.IsGrantedAsyncIPermissionCheckerUserIdentifierBooleanStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.IsGrantedAsync(IPermissionChecker permissionChecker, UserIdentifier user, Boolean requiresAll, String[] permissionNames)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.IsGrantedIPermissionCheckerBooleanStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.IsGranted(IPermissionChecker permissionChecker, Boolean requiresAll, String[] permissionNames)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.IsGrantedIPermissionCheckerString">
            <summary>Sets the shim of PermissionCheckerExtensions.IsGranted(IPermissionChecker permissionChecker, String permissionName)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.IsGrantedIPermissionCheckerUserIdentifierBooleanStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.IsGranted(IPermissionChecker permissionChecker, UserIdentifier user, Boolean requiresAll, String[] permissionNames)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.IsGrantedIPermissionCheckerUserIdentifierString">
            <summary>Sets the shim of PermissionCheckerExtensions.IsGranted(IPermissionChecker permissionChecker, UserIdentifier user, String permissionName)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.LIPermissionCheckerStringString">
            <summary>Sets the shim of PermissionCheckerExtensions.L(IPermissionChecker permissionChecker, String name, String defaultValue)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionCheckerExtensions.LocalizePermissionNamesIPermissionCheckerStringArray">
            <summary>Sets the shim of PermissionCheckerExtensions.LocalizePermissionNames(IPermissionChecker permissionChecker, String[] permissionNames)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimPermissionDependencyContext">
            <summary>Shim type of Abp.Authorization.PermissionDependencyContext</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyContext.#ctor(Abp.Authorization.PermissionDependencyContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimPermissionDependencyContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.AllInstances.IocResolverGet">
            <summary>Sets the shim of PermissionDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.AllInstances.PermissionCheckerGet">
            <summary>Sets the shim of PermissionDependencyContext.get_PermissionChecker()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.AllInstances.PermissionCheckerSetIPermissionChecker">
            <summary>Sets the shim of PermissionDependencyContext.set_PermissionChecker(IPermissionChecker value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.AllInstances.UserGet">
            <summary>Sets the shim of PermissionDependencyContext.get_User()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.AllInstances.UserSetUserIdentifier">
            <summary>Sets the shim of PermissionDependencyContext.set_User(UserIdentifier value)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyContext.Bind(Abp.Authorization.IPermissionDependencyContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyContext.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.ConstructorIIocResolver">
            <summary>Sets the shim of PermissionDependencyContext.PermissionDependencyContext(IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.IocResolverGet">
            <summary>Sets the shim of PermissionDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.PermissionCheckerGet">
            <summary>Sets the shim of PermissionDependencyContext.get_PermissionChecker()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.PermissionCheckerSetIPermissionChecker">
            <summary>Sets the shim of PermissionDependencyContext.set_PermissionChecker(IPermissionChecker value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.UserGet">
            <summary>Sets the shim of PermissionDependencyContext.get_User()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyContext.UserSetUserIdentifier">
            <summary>Sets the shim of PermissionDependencyContext.set_User(UserIdentifier value)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimPermissionDependencyExtensions">
            <summary>Shim type of Abp.Authorization.PermissionDependencyExtensions</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionDependencyExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionDependencyExtensions.IsSatisfiedIPermissionDependencyIPermissionDependencyContext">
            <summary>Sets the shim of PermissionDependencyExtensions.IsSatisfied(IPermissionDependency permissionDependency, IPermissionDependencyContext context)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimPermissionFinder">
            <summary>Shim type of Abp.Authorization.PermissionFinder</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionFinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionFinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimPermissionFinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionFinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimPermissionFinder.GetAllPermissionsAuthorizationProviderArray">
            <summary>Sets the shim of PermissionFinder.GetAllPermissions(AuthorizationProvider[] authorizationProviders)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimSimplePermissionDependency">
            <summary>Shim type of Abp.Authorization.SimplePermissionDependency</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimSimplePermissionDependency.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimSimplePermissionDependency.#ctor(Abp.Authorization.SimplePermissionDependency)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.ShimSimplePermissionDependency.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.AllInstances.IsSatisfiedAsyncIPermissionDependencyContext">
            <summary>Sets the shim of SimplePermissionDependency.IsSatisfiedAsync(IPermissionDependencyContext context)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.AllInstances.PermissionsGet">
            <summary>Sets the shim of SimplePermissionDependency.get_Permissions()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.AllInstances.PermissionsSetStringArray">
            <summary>Sets the shim of SimplePermissionDependency.set_Permissions(String[] value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.AllInstances.RequiresAllGet">
            <summary>Sets the shim of SimplePermissionDependency.get_RequiresAll()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.AllInstances.RequiresAllSetBoolean">
            <summary>Sets the shim of SimplePermissionDependency.set_RequiresAll(Boolean value)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimSimplePermissionDependency.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimSimplePermissionDependency.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.ShimSimplePermissionDependency.Bind(Abp.Authorization.IPermissionDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.ConstructorBooleanStringArray">
            <summary>Sets the shim of SimplePermissionDependency.SimplePermissionDependency(Boolean requiresAll, String[] permissions)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.ConstructorStringArray">
            <summary>Sets the shim of SimplePermissionDependency.SimplePermissionDependency(String[] permissions)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.IsSatisfiedAsyncIPermissionDependencyContext">
            <summary>Sets the shim of SimplePermissionDependency.IsSatisfiedAsync(IPermissionDependencyContext context)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.PermissionsGet">
            <summary>Sets the shim of SimplePermissionDependency.get_Permissions()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.PermissionsSetStringArray">
            <summary>Sets the shim of SimplePermissionDependency.set_Permissions(String[] value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.RequiresAllGet">
            <summary>Sets the shim of SimplePermissionDependency.get_RequiresAll()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.ShimSimplePermissionDependency.RequiresAllSetBoolean">
            <summary>Sets the shim of SimplePermissionDependency.set_RequiresAll(Boolean value)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute">
            <summary>Stub type of Abp.Authorization.AbpAllowAnonymousAttribute</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAbpAllowAnonymousAttribute</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAllowAnonymousAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubAbpAuthorizationException">
            <summary>Stub type of Abp.Authorization.AbpAuthorizationException</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAbpAuthorizationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAbpAuthorizationException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.InitializeStub">
            <summary>Initializes a new instance of type StubAbpAuthorizationException</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute">
            <summary>Stub type of Abp.Authorization.AbpAuthorizeAttribute</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAbpAuthorizeAttribute</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAbpAuthorizeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubAuthorizationInterceptor">
            <summary>Stub type of Abp.Authorization.AuthorizationInterceptor</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAuthorizationInterceptor.#ctor(Abp.Authorization.IAuthorizationHelper)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAuthorizationInterceptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAuthorizationInterceptor.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizationInterceptor</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAuthorizationInterceptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAuthorizationInterceptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubAuthorizationProvider">
            <summary>Stub type of Abp.Authorization.AuthorizationProvider</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAuthorizationProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAuthorizationProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAuthorizationProvider.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizationProvider</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAuthorizationProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubAuthorizationProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubAuthorizationProvider.SetPermissions(Abp.Authorization.IPermissionDefinitionContext)">
            <summary>Sets the stub of AuthorizationProvider.SetPermissions(IPermissionDefinitionContext context)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubAuthorizationProvider.SetPermissionsIPermissionDefinitionContext">
            <summary>Sets the stub of AuthorizationProvider.SetPermissions(IPermissionDefinitionContext context)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIAbpAllowAnonymousAttribute">
            <summary>Stub type of Abp.Authorization.IAbpAllowAnonymousAttribute</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIAbpAllowAnonymousAttribute.#ctor">
            <summary>Initializes a new instance of type StubIAbpAllowAnonymousAttribute</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute">
            <summary>Stub type of Abp.Authorization.IAbpAuthorizeAttribute</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute.#ctor">
            <summary>Initializes a new instance of type StubIAbpAuthorizeAttribute</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute.AttachBackingFieldToRequireAllPermissions">
            <summary>Attaches delegates to emulate StubIAbpAuthorizeAttribute.RequireAllPermissions as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute.Abp#Authorization#IAbpAuthorizeAttribute#Permissions">
            <summary>Sets the stub of IAbpAuthorizeAttribute.get_Permissions()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute.PermissionsGet">
            <summary>Sets the stub of IAbpAuthorizeAttribute.get_Permissions()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute.Abp#Authorization#IAbpAuthorizeAttribute#RequireAllPermissions">
            <summary>Sets the stub of IAbpAuthorizeAttribute.get_RequireAllPermissions()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute.RequireAllPermissionsGet">
            <summary>Sets the stub of IAbpAuthorizeAttribute.get_RequireAllPermissions()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIAbpAuthorizeAttribute.RequireAllPermissionsSetBoolean">
            <summary>Sets the stub of IAbpAuthorizeAttribute.set_RequireAllPermissions(Boolean value)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIAuthorizationHelper">
            <summary>Stub type of Abp.Authorization.IAuthorizationHelper</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIAuthorizationHelper.#ctor">
            <summary>Initializes a new instance of type StubIAuthorizationHelper</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIAuthorizationHelper.Abp#Authorization#IAuthorizationHelper#AuthorizeAsync(System.Collections.Generic.IEnumerable{Abp.Authorization.IAbpAuthorizeAttribute})">
            <summary>Sets the stub of IAuthorizationHelper.AuthorizeAsync(IEnumerable`1&lt;IAbpAuthorizeAttribute&gt; authorizeAttributes)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIAuthorizationHelper.Abp#Authorization#IAuthorizationHelper#AuthorizeAsync(System.Reflection.MethodInfo,System.Type)">
            <summary>Sets the stub of IAuthorizationHelper.AuthorizeAsync(MethodInfo methodInfo, Type type)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIAuthorizationHelper.AuthorizeAsyncIEnumerableOfIAbpAuthorizeAttribute">
            <summary>Sets the stub of IAuthorizationHelper.AuthorizeAsync(IEnumerable`1&lt;IAbpAuthorizeAttribute&gt; authorizeAttributes)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIAuthorizationHelper.AuthorizeAsyncMethodInfoType">
            <summary>Sets the stub of IAuthorizationHelper.AuthorizeAsync(MethodInfo methodInfo, Type type)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIPermissionChecker">
            <summary>Stub type of Abp.Authorization.IPermissionChecker</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionChecker.#ctor">
            <summary>Initializes a new instance of type StubIPermissionChecker</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionChecker.Abp#Authorization#IPermissionChecker#IsGrantedAsync(System.String)">
            <summary>Sets the stub of IPermissionChecker.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionChecker.Abp#Authorization#IPermissionChecker#IsGrantedAsync(Abp.UserIdentifier,System.String)">
            <summary>Sets the stub of IPermissionChecker.IsGrantedAsync(UserIdentifier user, String permissionName)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionChecker.IsGrantedAsyncString">
            <summary>Sets the stub of IPermissionChecker.IsGrantedAsync(String permissionName)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionChecker.IsGrantedAsyncUserIdentifierString">
            <summary>Sets the stub of IPermissionChecker.IsGrantedAsync(UserIdentifier user, String permissionName)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIPermissionDefinitionContext">
            <summary>Stub type of Abp.Authorization.IPermissionDefinitionContext</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionDefinitionContext.#ctor">
            <summary>Initializes a new instance of type StubIPermissionDefinitionContext</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionDefinitionContext.Abp#Authorization#IPermissionDefinitionContext#CreatePermission(System.String,Abp.Localization.ILocalizableString,Abp.Localization.ILocalizableString,Abp.MultiTenancy.MultiTenancySides,Abp.Application.Features.IFeatureDependency)">
            <summary>Sets the stub of IPermissionDefinitionContext.CreatePermission(String name, ILocalizableString displayName, ILocalizableString description, MultiTenancySides multiTenancySides, IFeatureDependency featureDependency)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionDefinitionContext.Abp#Authorization#IPermissionDefinitionContext#GetPermissionOrNull(System.String)">
            <summary>Sets the stub of IPermissionDefinitionContext.GetPermissionOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionDefinitionContext.CreatePermissionStringILocalizableStringILocalizableStringMultiTenancySidesIFeatureDependency">
            <summary>Sets the stub of IPermissionDefinitionContext.CreatePermission(String name, ILocalizableString displayName, ILocalizableString description, MultiTenancySides multiTenancySides, IFeatureDependency featureDependency)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionDefinitionContext.GetPermissionOrNullString">
            <summary>Sets the stub of IPermissionDefinitionContext.GetPermissionOrNull(String name)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIPermissionDependency">
            <summary>Stub type of Abp.Authorization.IPermissionDependency</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionDependency.#ctor">
            <summary>Initializes a new instance of type StubIPermissionDependency</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionDependency.Abp#Authorization#IPermissionDependency#IsSatisfiedAsync(Abp.Authorization.IPermissionDependencyContext)">
            <summary>Sets the stub of IPermissionDependency.IsSatisfiedAsync(IPermissionDependencyContext context)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionDependency.IsSatisfiedAsyncIPermissionDependencyContext">
            <summary>Sets the stub of IPermissionDependency.IsSatisfiedAsync(IPermissionDependencyContext context)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIPermissionDependencyContext">
            <summary>Stub type of Abp.Authorization.IPermissionDependencyContext</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionDependencyContext.#ctor">
            <summary>Initializes a new instance of type StubIPermissionDependencyContext</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubIPermissionDependencyContext.Abp#Authorization#IPermissionDependencyContext#IocResolver">
            <summary>Sets the stub of IPermissionDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionDependencyContext.IocResolverGet">
            <summary>Sets the stub of IPermissionDependencyContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubIPermissionDependencyContext.Abp#Authorization#IPermissionDependencyContext#PermissionChecker">
            <summary>Sets the stub of IPermissionDependencyContext.get_PermissionChecker()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionDependencyContext.PermissionCheckerGet">
            <summary>Sets the stub of IPermissionDependencyContext.get_PermissionChecker()</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubIPermissionDependencyContext.Abp#Authorization#IPermissionDependencyContext#User">
            <summary>Sets the stub of IPermissionDependencyContext.get_User()</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionDependencyContext.UserGet">
            <summary>Sets the stub of IPermissionDependencyContext.get_User()</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubIPermissionManager">
            <summary>Stub type of Abp.Authorization.IPermissionManager</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionManager.#ctor">
            <summary>Initializes a new instance of type StubIPermissionManager</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionManager.Abp#Authorization#IPermissionManager#GetAllPermissions(Abp.MultiTenancy.MultiTenancySides)">
            <summary>Sets the stub of IPermissionManager.GetAllPermissions(MultiTenancySides multiTenancySides)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionManager.Abp#Authorization#IPermissionManager#GetAllPermissions(System.Boolean)">
            <summary>Sets the stub of IPermissionManager.GetAllPermissions(Boolean tenancyFilter)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionManager.Abp#Authorization#IPermissionManager#GetPermission(System.String)">
            <summary>Sets the stub of IPermissionManager.GetPermission(String name)</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubIPermissionManager.Abp#Authorization#IPermissionManager#GetPermissionOrNull(System.String)">
            <summary>Sets the stub of IPermissionManager.GetPermissionOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionManager.GetAllPermissionsBoolean">
            <summary>Sets the stub of IPermissionManager.GetAllPermissions(Boolean tenancyFilter)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionManager.GetAllPermissionsMultiTenancySides">
            <summary>Sets the stub of IPermissionManager.GetAllPermissions(MultiTenancySides multiTenancySides)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionManager.GetPermissionOrNullString">
            <summary>Sets the stub of IPermissionManager.GetPermissionOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Authorization.Fakes.StubIPermissionManager.GetPermissionString">
            <summary>Sets the stub of IPermissionManager.GetPermission(String name)</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubPermissionDependencyContext">
            <summary>Stub type of Abp.Authorization.PermissionDependencyContext</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubPermissionDependencyContext.#ctor(Abp.Dependency.IIocResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubPermissionDependencyContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubPermissionDependencyContext.InitializeStub">
            <summary>Initializes a new instance of type StubPermissionDependencyContext</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubPermissionDependencyContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubPermissionDependencyContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Authorization.Fakes.StubSimplePermissionDependency">
            <summary>Stub type of Abp.Authorization.SimplePermissionDependency</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubSimplePermissionDependency.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubSimplePermissionDependency.#ctor(System.Boolean,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubSimplePermissionDependency.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Authorization.Fakes.StubSimplePermissionDependency.InitializeStub">
            <summary>Initializes a new instance of type StubSimplePermissionDependency</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubSimplePermissionDependency.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Authorization.Fakes.StubSimplePermissionDependency.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1">
            <summary>Shim type of Abp.BackgroundJobs.BackgroundJob`1</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.#ctor(Abp.BackgroundJobs.BackgroundJob{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.CurrentUnitOfWorkGet">
            <summary>Sets the shim of BackgroundJob`1.get_CurrentUnitOfWork()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LString">
            <summary>Sets the shim of BackgroundJob`1.L(String name)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LStringCultureInfo">
            <summary>Sets the shim of BackgroundJob`1.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LStringCultureInfoObjectArray">
            <summary>Sets the shim of BackgroundJob`1.L(String name, CultureInfo culture, Object[] args)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LStringObjectArray">
            <summary>Sets the shim of BackgroundJob`1.L(String name, Object[] args)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LocalizationManagerGet">
            <summary>Sets the shim of BackgroundJob`1.get_LocalizationManager()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LocalizationManagerSetILocalizationManager">
            <summary>Sets the shim of BackgroundJob`1.set_LocalizationManager(ILocalizationManager value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LocalizationSourceGet">
            <summary>Sets the shim of BackgroundJob`1.get_LocalizationSource()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LocalizationSourceNameGet">
            <summary>Sets the shim of BackgroundJob`1.get_LocalizationSourceName()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LocalizationSourceNameSetString">
            <summary>Sets the shim of BackgroundJob`1.set_LocalizationSourceName(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LoggerGet">
            <summary>Sets the shim of BackgroundJob`1.get_Logger()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of BackgroundJob`1.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.SettingManagerGet">
            <summary>Sets the shim of BackgroundJob`1.get_SettingManager()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.SettingManagerSetISettingManager">
            <summary>Sets the shim of BackgroundJob`1.set_SettingManager(ISettingManager value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.UnitOfWorkManagerGet">
            <summary>Sets the shim of BackgroundJob`1.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.AllInstances.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of BackgroundJob`1.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.Bind(Abp.BackgroundJobs.IBackgroundJob{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.Constructor">
            <summary>Sets the shim of BackgroundJob`1.BackgroundJob`1()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.CurrentUnitOfWorkGet">
            <summary>Sets the shim of BackgroundJob`1.get_CurrentUnitOfWork()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LString">
            <summary>Sets the shim of BackgroundJob`1.L(String name)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LStringCultureInfo">
            <summary>Sets the shim of BackgroundJob`1.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LStringCultureInfoObjectArray">
            <summary>Sets the shim of BackgroundJob`1.L(String name, CultureInfo culture, Object[] args)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LStringObjectArray">
            <summary>Sets the shim of BackgroundJob`1.L(String name, Object[] args)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LocalizationManagerGet">
            <summary>Sets the shim of BackgroundJob`1.get_LocalizationManager()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LocalizationManagerSetILocalizationManager">
            <summary>Sets the shim of BackgroundJob`1.set_LocalizationManager(ILocalizationManager value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LocalizationSourceGet">
            <summary>Sets the shim of BackgroundJob`1.get_LocalizationSource()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LocalizationSourceNameGet">
            <summary>Sets the shim of BackgroundJob`1.get_LocalizationSourceName()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LocalizationSourceNameSetString">
            <summary>Sets the shim of BackgroundJob`1.set_LocalizationSourceName(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LoggerGet">
            <summary>Sets the shim of BackgroundJob`1.get_Logger()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.LoggerSetILogger">
            <summary>Sets the shim of BackgroundJob`1.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.SettingManagerGet">
            <summary>Sets the shim of BackgroundJob`1.get_SettingManager()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.SettingManagerSetISettingManager">
            <summary>Sets the shim of BackgroundJob`1.set_SettingManager(ISettingManager value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.UnitOfWorkManagerGet">
            <summary>Sets the shim of BackgroundJob`1.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJob`1.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of BackgroundJob`1.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException">
            <summary>Shim type of Abp.BackgroundJobs.BackgroundJobException</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.#ctor(Abp.BackgroundJobs.BackgroundJobException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.AllInstances.BackgroundJobGet">
            <summary>Sets the shim of BackgroundJobException.get_BackgroundJob()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.AllInstances.BackgroundJobSetBackgroundJobInfo">
            <summary>Sets the shim of BackgroundJobException.set_BackgroundJob(BackgroundJobInfo value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.AllInstances.JobObjectGet">
            <summary>Sets the shim of BackgroundJobException.get_JobObject()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.AllInstances.JobObjectSetObject">
            <summary>Sets the shim of BackgroundJobException.set_JobObject(Object value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.BackgroundJobGet">
            <summary>Sets the shim of BackgroundJobException.get_BackgroundJob()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.BackgroundJobSetBackgroundJobInfo">
            <summary>Sets the shim of BackgroundJobException.set_BackgroundJob(BackgroundJobInfo value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.Constructor">
            <summary>Sets the shim of BackgroundJobException.BackgroundJobException()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of BackgroundJobException.BackgroundJobException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.ConstructorStringException">
            <summary>Sets the shim of BackgroundJobException.BackgroundJobException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.JobObjectGet">
            <summary>Sets the shim of BackgroundJobException.get_JobObject()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobException.JobObjectSetObject">
            <summary>Sets the shim of BackgroundJobException.set_JobObject(Object value)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo">
            <summary>Shim type of Abp.BackgroundJobs.BackgroundJobInfo</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.#ctor(Abp.BackgroundJobs.BackgroundJobInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.CalculateNextTryTime">
            <summary>Sets the shim of BackgroundJobInfo.CalculateNextTryTime()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.IsAbandonedGet">
            <summary>Sets the shim of BackgroundJobInfo.get_IsAbandoned()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.IsAbandonedSetBoolean">
            <summary>Sets the shim of BackgroundJobInfo.set_IsAbandoned(Boolean value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.JobArgsGet">
            <summary>Sets the shim of BackgroundJobInfo.get_JobArgs()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.JobArgsSetString">
            <summary>Sets the shim of BackgroundJobInfo.set_JobArgs(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.JobTypeGet">
            <summary>Sets the shim of BackgroundJobInfo.get_JobType()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.JobTypeSetString">
            <summary>Sets the shim of BackgroundJobInfo.set_JobType(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.LastTryTimeGet">
            <summary>Sets the shim of BackgroundJobInfo.get_LastTryTime()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.LastTryTimeSetNullableOfDateTime">
            <summary>Sets the shim of BackgroundJobInfo.set_LastTryTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.NextTryTimeGet">
            <summary>Sets the shim of BackgroundJobInfo.get_NextTryTime()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.NextTryTimeSetDateTime">
            <summary>Sets the shim of BackgroundJobInfo.set_NextTryTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.PriorityGet">
            <summary>Sets the shim of BackgroundJobInfo.get_Priority()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.PrioritySetBackgroundJobPriority">
            <summary>Sets the shim of BackgroundJobInfo.set_Priority(BackgroundJobPriority value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.TryCountGet">
            <summary>Sets the shim of BackgroundJobInfo.get_TryCount()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.AllInstances.TryCountSetInt16">
            <summary>Sets the shim of BackgroundJobInfo.set_TryCount(Int16 value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.Bind(Abp.Domain.Entities.IEntity{System.Int64})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.CalculateNextTryTime">
            <summary>Sets the shim of BackgroundJobInfo.CalculateNextTryTime()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.Constructor">
            <summary>Sets the shim of BackgroundJobInfo.BackgroundJobInfo()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.DefaultFirstWaitDurationGet">
            <summary>Sets the shim of BackgroundJobInfo.get_DefaultFirstWaitDuration()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.DefaultFirstWaitDurationSetInt32">
            <summary>Sets the shim of BackgroundJobInfo.set_DefaultFirstWaitDuration(Int32 value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.DefaultTimeoutGet">
            <summary>Sets the shim of BackgroundJobInfo.get_DefaultTimeout()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.DefaultTimeoutSetInt32">
            <summary>Sets the shim of BackgroundJobInfo.set_DefaultTimeout(Int32 value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.DefaultWaitFactorGet">
            <summary>Sets the shim of BackgroundJobInfo.get_DefaultWaitFactor()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.DefaultWaitFactorSetDouble">
            <summary>Sets the shim of BackgroundJobInfo.set_DefaultWaitFactor(Double value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.IsAbandonedGet">
            <summary>Sets the shim of BackgroundJobInfo.get_IsAbandoned()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.IsAbandonedSetBoolean">
            <summary>Sets the shim of BackgroundJobInfo.set_IsAbandoned(Boolean value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.JobArgsGet">
            <summary>Sets the shim of BackgroundJobInfo.get_JobArgs()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.JobArgsSetString">
            <summary>Sets the shim of BackgroundJobInfo.set_JobArgs(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.JobTypeGet">
            <summary>Sets the shim of BackgroundJobInfo.get_JobType()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.JobTypeSetString">
            <summary>Sets the shim of BackgroundJobInfo.set_JobType(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.LastTryTimeGet">
            <summary>Sets the shim of BackgroundJobInfo.get_LastTryTime()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.LastTryTimeSetNullableOfDateTime">
            <summary>Sets the shim of BackgroundJobInfo.set_LastTryTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.NextTryTimeGet">
            <summary>Sets the shim of BackgroundJobInfo.get_NextTryTime()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.NextTryTimeSetDateTime">
            <summary>Sets the shim of BackgroundJobInfo.set_NextTryTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.PriorityGet">
            <summary>Sets the shim of BackgroundJobInfo.get_Priority()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.PrioritySetBackgroundJobPriority">
            <summary>Sets the shim of BackgroundJobInfo.set_Priority(BackgroundJobPriority value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.StaticConstructor">
            <summary>Sets the shim of BackgroundJobInfo.BackgroundJobInfo()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.TryCountGet">
            <summary>Sets the shim of BackgroundJobInfo.get_TryCount()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobInfo.TryCountSetInt16">
            <summary>Sets the shim of BackgroundJobInfo.set_TryCount(Int16 value)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager">
            <summary>Shim type of Abp.BackgroundJobs.BackgroundJobManager</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.#ctor(Abp.BackgroundJobs.BackgroundJobManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances.DoWork">
            <summary>Sets the shim of BackgroundJobManager.DoWork()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances.EnqueueAsyncOf2M1BackgroundJobPriorityNullableOfTimeSpan``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.BackgroundJobs.BackgroundJobManager,``1,Abp.BackgroundJobs.BackgroundJobPriority,System.Nullable{System.TimeSpan},System.Threading.Tasks.Task})">
            <summary>Sets the shim of BackgroundJobManager.EnqueueAsync(!!1 args, BackgroundJobPriority priority, Nullable`1&lt;TimeSpan&gt; delay)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances.EventBusGet">
            <summary>Sets the shim of BackgroundJobManager.get_EventBus()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances.EventBusSetIEventBus">
            <summary>Sets the shim of BackgroundJobManager.set_EventBus(IEventBus value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances.TryProcessJobBackgroundJobInfo">
            <summary>Sets the shim of BackgroundJobManager.TryProcessJob(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances.TryUpdateBackgroundJobInfo">
            <summary>Sets the shim of BackgroundJobManager.TryUpdate(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.AllInstances._DoWorkb__13_0">
            <summary>Sets the shim of BackgroundJobManager.&lt;DoWork&gt;b__13_0()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.Bind(Abp.BackgroundJobs.IBackgroundJobManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.Bind(Abp.Threading.IRunnable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.Bind(Abp.Threading.BackgroundWorkers.IBackgroundWorker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.ConstructorIIocResolverIBackgroundJobStoreAbpTimer">
            <summary>Sets the shim of BackgroundJobManager.BackgroundJobManager(IIocResolver iocResolver, IBackgroundJobStore store, AbpTimer timer)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.DoWork">
            <summary>Sets the shim of BackgroundJobManager.DoWork()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.EnqueueAsyncOf2M1BackgroundJobPriorityNullableOfTimeSpan``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``1,Abp.BackgroundJobs.BackgroundJobPriority,System.Nullable{System.TimeSpan},System.Threading.Tasks.Task})">
            <summary>Sets the shim of BackgroundJobManager.EnqueueAsync(!!1 args, BackgroundJobPriority priority, Nullable`1&lt;TimeSpan&gt; delay)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.EventBusGet">
            <summary>Sets the shim of BackgroundJobManager.get_EventBus()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.EventBusSetIEventBus">
            <summary>Sets the shim of BackgroundJobManager.set_EventBus(IEventBus value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.JobPollPeriodGet">
            <summary>Sets the shim of BackgroundJobManager.get_JobPollPeriod()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.JobPollPeriodSetInt32">
            <summary>Sets the shim of BackgroundJobManager.set_JobPollPeriod(Int32 value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.StaticConstructor">
            <summary>Sets the shim of BackgroundJobManager.BackgroundJobManager()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.TryProcessJobBackgroundJobInfo">
            <summary>Sets the shim of BackgroundJobManager.TryProcessJob(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager.TryUpdateBackgroundJobInfo">
            <summary>Sets the shim of BackgroundJobManager.TryUpdate(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManager._DoWorkb__13_0">
            <summary>Sets the shim of BackgroundJobManager.&lt;DoWork&gt;b__13_0()</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManagerExtensions">
            <summary>Shim type of Abp.BackgroundJobs.BackgroundJobManagerExtensions</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimBackgroundJobManagerExtensions.EnqueueOf2IBackgroundJobManagerM1BackgroundJobPriorityNullableOfTimeSpan``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.BackgroundJobs.IBackgroundJobManager,``1,Abp.BackgroundJobs.BackgroundJobPriority,System.Nullable{System.TimeSpan}})">
            <summary>Sets the shim of BackgroundJobManagerExtensions.Enqueue(IBackgroundJobManager backgroundJobManager, !!1 args, BackgroundJobPriority priority, Nullable`1&lt;TimeSpan&gt; delay)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore">
            <summary>Shim type of Abp.BackgroundJobs.InMemoryBackgroundJobStore</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.#ctor(Abp.BackgroundJobs.InMemoryBackgroundJobStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.AllInstances.DeleteAsyncBackgroundJobInfo">
            <summary>Sets the shim of InMemoryBackgroundJobStore.DeleteAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.AllInstances.GetWaitingJobsAsyncInt32">
            <summary>Sets the shim of InMemoryBackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.AllInstances.InsertAsyncBackgroundJobInfo">
            <summary>Sets the shim of InMemoryBackgroundJobStore.InsertAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.AllInstances.UpdateAsyncBackgroundJobInfo">
            <summary>Sets the shim of InMemoryBackgroundJobStore.UpdateAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.Bind(Abp.BackgroundJobs.IBackgroundJobStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.Constructor">
            <summary>Sets the shim of InMemoryBackgroundJobStore.InMemoryBackgroundJobStore()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.DeleteAsyncBackgroundJobInfo">
            <summary>Sets the shim of InMemoryBackgroundJobStore.DeleteAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.GetWaitingJobsAsyncInt32">
            <summary>Sets the shim of InMemoryBackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.InsertAsyncBackgroundJobInfo">
            <summary>Sets the shim of InMemoryBackgroundJobStore.InsertAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimInMemoryBackgroundJobStore.UpdateAsyncBackgroundJobInfo">
            <summary>Sets the shim of InMemoryBackgroundJobStore.UpdateAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore">
            <summary>Shim type of Abp.BackgroundJobs.NullBackgroundJobStore</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.#ctor(Abp.BackgroundJobs.NullBackgroundJobStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.AllInstances.DeleteAsyncBackgroundJobInfo">
            <summary>Sets the shim of NullBackgroundJobStore.DeleteAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.AllInstances.GetWaitingJobsAsyncInt32">
            <summary>Sets the shim of NullBackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.AllInstances.InsertAsyncBackgroundJobInfo">
            <summary>Sets the shim of NullBackgroundJobStore.InsertAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.AllInstances.UpdateAsyncBackgroundJobInfo">
            <summary>Sets the shim of NullBackgroundJobStore.UpdateAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.Bind(Abp.BackgroundJobs.IBackgroundJobStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.Constructor">
            <summary>Sets the shim of NullBackgroundJobStore.NullBackgroundJobStore()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.DeleteAsyncBackgroundJobInfo">
            <summary>Sets the shim of NullBackgroundJobStore.DeleteAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.GetWaitingJobsAsyncInt32">
            <summary>Sets the shim of NullBackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.InsertAsyncBackgroundJobInfo">
            <summary>Sets the shim of NullBackgroundJobStore.InsertAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.ShimNullBackgroundJobStore.UpdateAsyncBackgroundJobInfo">
            <summary>Sets the shim of NullBackgroundJobStore.UpdateAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1">
            <summary>Stub type of Abp.BackgroundJobs.BackgroundJob`1</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.Execute(`0)">
            <summary>Sets the stub of BackgroundJob`1.Execute(!0 args)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.ExecuteT0">
            <summary>Sets the stub of BackgroundJob`1.Execute(!0 args)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.InitializeStub">
            <summary>Initializes a new instance of type StubBackgroundJob</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.L(System.String)">
            <summary>Sets the stub of BackgroundJob`1.L(String name)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of BackgroundJob`1.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.LString">
            <summary>Sets the stub of BackgroundJob`1.L(String name)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJob`1.LStringCultureInfo">
            <summary>Sets the stub of BackgroundJob`1.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubBackgroundJobException">
            <summary>Stub type of Abp.BackgroundJobs.BackgroundJobException</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubBackgroundJobException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubBackgroundJobException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.InitializeStub">
            <summary>Initializes a new instance of type StubBackgroundJobException</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo">
            <summary>Stub type of Abp.BackgroundJobs.BackgroundJobInfo</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToIsAbandoned">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.IsAbandoned as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToJobArgs">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.JobArgs as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToJobType">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.JobType as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToLastTryTime">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.LastTryTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToNextTryTime">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.NextTryTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToPriority">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.Priority as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.AttachBackingFieldToTryCount">
            <summary>Attaches delegates to emulate StubBackgroundJobInfo.TryCount as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CalculateNextTryTime">
            <summary>Sets the stub of BackgroundJobInfo.CalculateNextTryTime()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CalculateNextTryTime01">
            <summary>Sets the stub of BackgroundJobInfo.CalculateNextTryTime()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.IdSetInt64">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.InitializeStub">
            <summary>Initializes a new instance of type StubBackgroundJobInfo</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.IsAbandoned">
            <summary>Sets the stub of BackgroundJobInfo.get_IsAbandoned()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.IsAbandonedGet">
            <summary>Sets the stub of BackgroundJobInfo.get_IsAbandoned()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.IsAbandonedSetBoolean">
            <summary>Sets the stub of BackgroundJobInfo.set_IsAbandoned(Boolean value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.JobArgs">
            <summary>Sets the stub of BackgroundJobInfo.get_JobArgs()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.JobArgsGet">
            <summary>Sets the stub of BackgroundJobInfo.get_JobArgs()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.JobArgsSetString">
            <summary>Sets the stub of BackgroundJobInfo.set_JobArgs(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.JobType">
            <summary>Sets the stub of BackgroundJobInfo.get_JobType()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.JobTypeGet">
            <summary>Sets the stub of BackgroundJobInfo.get_JobType()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.JobTypeSetString">
            <summary>Sets the stub of BackgroundJobInfo.set_JobType(String value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.LastTryTime">
            <summary>Sets the stub of BackgroundJobInfo.get_LastTryTime()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.LastTryTimeGet">
            <summary>Sets the stub of BackgroundJobInfo.get_LastTryTime()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.LastTryTimeSetNullableOfDateTime">
            <summary>Sets the stub of BackgroundJobInfo.set_LastTryTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.NextTryTime">
            <summary>Sets the stub of BackgroundJobInfo.get_NextTryTime()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.NextTryTimeGet">
            <summary>Sets the stub of BackgroundJobInfo.get_NextTryTime()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.NextTryTimeSetDateTime">
            <summary>Sets the stub of BackgroundJobInfo.set_NextTryTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.Priority">
            <summary>Sets the stub of BackgroundJobInfo.get_Priority()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.PriorityGet">
            <summary>Sets the stub of BackgroundJobInfo.get_Priority()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.PrioritySetBackgroundJobPriority">
            <summary>Sets the stub of BackgroundJobInfo.set_Priority(BackgroundJobPriority value)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.TryCount">
            <summary>Sets the stub of BackgroundJobInfo.get_TryCount()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.TryCountGet">
            <summary>Sets the stub of BackgroundJobInfo.get_TryCount()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobInfo.TryCountSetInt16">
            <summary>Sets the stub of BackgroundJobInfo.set_TryCount(Int16 value)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager">
            <summary>Stub type of Abp.BackgroundJobs.BackgroundJobManager</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.#ctor(Abp.Dependency.IIocResolver,Abp.BackgroundJobs.IBackgroundJobStore,Abp.Threading.Timers.AbpTimer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.DoWork">
            <summary>Sets the stub of BackgroundJobManager.DoWork()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.DoWork01">
            <summary>Sets the stub of BackgroundJobManager.DoWork()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.InitializeStub">
            <summary>Initializes a new instance of type StubBackgroundJobManager</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.L(System.String)">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.LString">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.LStringCultureInfo">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.Start">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Start()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.Start01">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Start()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.Stop">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.Stop01">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.ToString">
            <summary>Sets the stub of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.ToString01">
            <summary>Sets the stub of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.WaitToStop">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubBackgroundJobManager.WaitToStop01">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubIBackgroundJob`1">
            <summary>Stub type of Abp.BackgroundJobs.IBackgroundJob`1</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJob`1.#ctor">
            <summary>Initializes a new instance of type StubIBackgroundJob</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJob`1.Abp#BackgroundJobs#IBackgroundJob{TArgs}#Execute(`0)">
            <summary>Sets the stub of IBackgroundJob`1.Execute(!0 args)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJob`1.ExecuteT0">
            <summary>Sets the stub of IBackgroundJob`1.Execute(!0 args)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration">
            <summary>Stub type of Abp.BackgroundJobs.IBackgroundJobConfiguration</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIBackgroundJobConfiguration</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration.Abp#BackgroundJobs#IBackgroundJobConfiguration#AbpConfiguration">
            <summary>Sets the stub of IBackgroundJobConfiguration.get_AbpConfiguration()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration.AbpConfigurationGet">
            <summary>Sets the stub of IBackgroundJobConfiguration.get_AbpConfiguration()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration.AttachBackingFieldToIsJobExecutionEnabled">
            <summary>Attaches delegates to emulate StubIBackgroundJobConfiguration.IsJobExecutionEnabled as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration.Abp#BackgroundJobs#IBackgroundJobConfiguration#IsJobExecutionEnabled">
            <summary>Sets the stub of IBackgroundJobConfiguration.get_IsJobExecutionEnabled()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration.IsJobExecutionEnabledGet">
            <summary>Sets the stub of IBackgroundJobConfiguration.get_IsJobExecutionEnabled()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobConfiguration.IsJobExecutionEnabledSetBoolean">
            <summary>Sets the stub of IBackgroundJobConfiguration.set_IsJobExecutionEnabled(Boolean value)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager">
            <summary>Stub type of Abp.BackgroundJobs.IBackgroundJobManager</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.#ctor">
            <summary>Initializes a new instance of type StubIBackgroundJobManager</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.Abp#BackgroundJobs#IBackgroundJobManager#EnqueueAsync``2(``1,Abp.BackgroundJobs.BackgroundJobPriority,System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of IBackgroundJobManager.EnqueueAsync(!!1 args, BackgroundJobPriority priority, Nullable`1&lt;TimeSpan&gt; delay)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.Abp#Threading#IRunnable#Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.Abp#Threading#IRunnable#Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.Abp#Threading#IRunnable#WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.EnqueueAsyncOf2M1BackgroundJobPriorityNullableOfTimeSpan``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``1,Abp.BackgroundJobs.BackgroundJobPriority,System.Nullable{System.TimeSpan},System.Threading.Tasks.Task})">
            <summary>Sets stubs of EnqueueAsync(!!1 args, BackgroundJobPriority priority, Nullable`1&lt;TimeSpan&gt; delay)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobManager.WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore">
            <summary>Stub type of Abp.BackgroundJobs.IBackgroundJobStore</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.#ctor">
            <summary>Initializes a new instance of type StubIBackgroundJobStore</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.Abp#BackgroundJobs#IBackgroundJobStore#DeleteAsync(Abp.BackgroundJobs.BackgroundJobInfo)">
            <summary>Sets the stub of IBackgroundJobStore.DeleteAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.Abp#BackgroundJobs#IBackgroundJobStore#GetWaitingJobsAsync(System.Int32)">
            <summary>Sets the stub of IBackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.Abp#BackgroundJobs#IBackgroundJobStore#InsertAsync(Abp.BackgroundJobs.BackgroundJobInfo)">
            <summary>Sets the stub of IBackgroundJobStore.InsertAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.Abp#BackgroundJobs#IBackgroundJobStore#UpdateAsync(Abp.BackgroundJobs.BackgroundJobInfo)">
            <summary>Sets the stub of IBackgroundJobStore.UpdateAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.DeleteAsyncBackgroundJobInfo">
            <summary>Sets the stub of IBackgroundJobStore.DeleteAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.GetWaitingJobsAsyncInt32">
            <summary>Sets the stub of IBackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.InsertAsyncBackgroundJobInfo">
            <summary>Sets the stub of IBackgroundJobStore.InsertAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="F:Abp.BackgroundJobs.Fakes.StubIBackgroundJobStore.UpdateAsyncBackgroundJobInfo">
            <summary>Sets the stub of IBackgroundJobStore.UpdateAsync(BackgroundJobInfo jobInfo)</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubInMemoryBackgroundJobStore">
            <summary>Stub type of Abp.BackgroundJobs.InMemoryBackgroundJobStore</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubInMemoryBackgroundJobStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubInMemoryBackgroundJobStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubInMemoryBackgroundJobStore.InitializeStub">
            <summary>Initializes a new instance of type StubInMemoryBackgroundJobStore</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubInMemoryBackgroundJobStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubInMemoryBackgroundJobStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.BackgroundJobs.Fakes.StubNullBackgroundJobStore">
            <summary>Stub type of Abp.BackgroundJobs.NullBackgroundJobStore</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubNullBackgroundJobStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubNullBackgroundJobStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.BackgroundJobs.Fakes.StubNullBackgroundJobStore.InitializeStub">
            <summary>Initializes a new instance of type StubNullBackgroundJobStore</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubNullBackgroundJobStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.BackgroundJobs.Fakes.StubNullBackgroundJobStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Collections.Extensions.Fakes.ShimCollectionExtensions">
            <summary>Shim type of Abp.Collections.Extensions.CollectionExtensions</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimCollectionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimCollectionExtensions.AddIfNotContainsOf1ICollectionOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},``0,System.Boolean})">
            <summary>Sets the shim of CollectionExtensions.AddIfNotContains(ICollection`1&lt;!!0&gt; source, !!0 item)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimCollectionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimCollectionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Collections.Extensions.Fakes.ShimCollectionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimCollectionExtensions.IsNullOrEmptyOf1ICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},System.Boolean})">
            <summary>Sets the shim of CollectionExtensions.IsNullOrEmpty(ICollection`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="T:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions">
            <summary>Shim type of Abp.Collections.Extensions.DictionaryExtensions</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.GetOrAddOf2IDictionaryOfM0M1M0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},``1})">
            <summary>Sets the shim of DictionaryExtensions.GetOrAdd(IDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key, Func`2&lt;!!0,!!1&gt; factory)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.GetOrAddOf2IDictionaryOfM0M1M0FuncOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1},``1})">
            <summary>Sets the shim of DictionaryExtensions.GetOrAdd(IDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key, Func`1&lt;!!1&gt; factory)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.GetOrDefaultOf2IDictionaryOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{``0,``1},``0,``1})">
            <summary>Sets the shim of DictionaryExtensions.GetOrDefault(IDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimDictionaryExtensions.TryGetValueOf1IDictionaryOfStringObjectStringM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0,System.Boolean})">
            <summary>Sets the shim of DictionaryExtensions.TryGetValue(IDictionary`2&lt;String,Object&gt; dictionary, String key, !!0&amp; value)</summary>
        </member>
        <member name="T:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions">
            <summary>Shim type of Abp.Collections.Extensions.EnumerableExtensions</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.JoinAsStringIEnumerableOfStringString">
            <summary>Sets the shim of EnumerableExtensions.JoinAsString(IEnumerable`1&lt;String&gt; source, String separator)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.JoinAsStringOf1IEnumerableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.String,System.String})">
            <summary>Sets the shim of EnumerableExtensions.JoinAsString(IEnumerable`1&lt;!!0&gt; source, String separator)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.WhereIfOf1IEnumerableOfM0BooleanFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of EnumerableExtensions.WhereIf(IEnumerable`1&lt;!!0&gt; source, Boolean condition, Func`2&lt;!!0,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimEnumerableExtensions.WhereIfOf1IEnumerableOfM0BooleanFuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of EnumerableExtensions.WhereIf(IEnumerable`1&lt;!!0&gt; source, Boolean condition, Func`3&lt;!!0,Int32,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:Abp.Collections.Extensions.Fakes.ShimListExtensions">
            <summary>Shim type of Abp.Collections.Extensions.ListExtensions</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimListExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimListExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimListExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Collections.Extensions.Fakes.ShimListExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimListExtensions.SortByDependenciesOf1IEnumerableOfM0FuncOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.List{``0}})">
            <summary>Sets the shim of ListExtensions.SortByDependencies(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,IEnumerable`1&lt;!!0&gt;&gt; getDependencies)</summary>
        </member>
        <member name="M:Abp.Collections.Extensions.Fakes.ShimListExtensions.SortByDependenciesVisitOf1M0FuncOfM0IEnumerableOfM0ListOfM0DictionaryOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.List{``0},System.Collections.Generic.Dictionary{``0,System.Boolean}})">
            <summary>Sets the shim of ListExtensions.SortByDependenciesVisit(!!0 item, Func`2&lt;!!0,IEnumerable`1&lt;!!0&gt;&gt; getDependencies, List`1&lt;!!0&gt; sorted, Dictionary`2&lt;!!0,Boolean&gt; visited)</summary>
        </member>
        <member name="T:Abp.Collections.Fakes.ShimTypeList">
            <summary>Shim type of Abp.Collections.TypeList</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.#ctor(Abp.Collections.TypeList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Collections.Fakes.ShimTypeList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.Bind(Abp.Collections.ITypeList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.Bind(Abp.Collections.ITypeList{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.Bind(System.Collections.Generic.ICollection{System.Type})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.Bind(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList.Bind(System.Collections.Generic.IList{System.Type})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList.Constructor">
            <summary>Sets the shim of TypeList.TypeList()</summary>
        </member>
        <member name="T:Abp.Collections.Fakes.ShimTypeList`1">
            <summary>Shim type of Abp.Collections.TypeList`1</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.#ctor(Abp.Collections.TypeList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of TypeList`1.Add()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AddType">
            <summary>Sets the shim of TypeList`1.Add(Type item)</summary>
        </member>
        <member name="T:Abp.Collections.Fakes.ShimTypeList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Collections.TypeList{`0}})">
            <summary>Sets the shim of TypeList`1.Add()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.AddType">
            <summary>Sets the shim of TypeList`1.Add(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.Clear">
            <summary>Sets the shim of TypeList`1.Clear()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.ContainsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Collections.TypeList{`0},System.Boolean})">
            <summary>Sets the shim of TypeList`1.Contains()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.ContainsType">
            <summary>Sets the shim of TypeList`1.Contains(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.CopyToTypeArrayInt32">
            <summary>Sets the shim of TypeList`1.CopyTo(Type[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.CountGet">
            <summary>Sets the shim of TypeList`1.get_Count()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of TypeList`1.GetEnumerator()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.IndexOfType">
            <summary>Sets the shim of TypeList`1.IndexOf(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.InsertInt32Type">
            <summary>Sets the shim of TypeList`1.Insert(Int32 index, Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of TypeList`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TypeList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.ItemSetInt32Type">
            <summary>Sets the shim of TypeList`1.set_Item(Int32 index, Type value)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of TypeList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Collections.TypeList{`0}})">
            <summary>Sets the shim of TypeList`1.Remove()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.RemoveType">
            <summary>Sets the shim of TypeList`1.Remove(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TypeList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.Bind(Abp.Collections.ITypeList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.Bind(System.Collections.Generic.ICollection{System.Type})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.Bind(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.Bind(System.Collections.Generic.IList{System.Type})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.CheckTypeType">
            <summary>Sets the shim of TypeList`1.CheckType(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.Clear">
            <summary>Sets the shim of TypeList`1.Clear()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.Constructor">
            <summary>Sets the shim of TypeList`1.TypeList`1()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.ContainsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the shim of TypeList`1.Contains()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.ContainsType">
            <summary>Sets the shim of TypeList`1.Contains(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.CopyToTypeArrayInt32">
            <summary>Sets the shim of TypeList`1.CopyTo(Type[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.CountGet">
            <summary>Sets the shim of TypeList`1.get_Count()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.GetEnumerator">
            <summary>Sets the shim of TypeList`1.GetEnumerator()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.IndexOfType">
            <summary>Sets the shim of TypeList`1.IndexOf(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.InsertInt32Type">
            <summary>Sets the shim of TypeList`1.Insert(Int32 index, Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.IsReadOnlyGet">
            <summary>Sets the shim of TypeList`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.ItemGetInt32">
            <summary>Sets the shim of TypeList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.ItemSetInt32Type">
            <summary>Sets the shim of TypeList`1.set_Item(Int32 index, Type value)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.RemoveAtInt32">
            <summary>Sets the shim of TypeList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.ShimTypeList`1.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of TypeList`1.Remove()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.RemoveType">
            <summary>Sets the shim of TypeList`1.Remove(Type item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.ShimTypeList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TypeList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Abp.Collections.Fakes.StubITypeList`1">
            <summary>Stub type of Abp.Collections.ITypeList`1</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.#ctor">
            <summary>Initializes a new instance of type StubITypeList</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.Abp#Collections#ITypeList{TBaseType}#Add``1">
            <summary>Sets the stub of ITypeList`1.Add()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.Abp#Collections#ITypeList{TBaseType}#Contains``1">
            <summary>Sets the stub of ITypeList`1.Contains()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.Abp#Collections#ITypeList{TBaseType}#Remove``1">
            <summary>Sets the stub of ITypeList`1.Remove()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of Add()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.AddType">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.ContainsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of Contains()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.ContainsType">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.CopyToTypeArrayInt32">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#ICollection{System#Type}#Count">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.CountGet">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.IndexOfType">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.InsertInt32Type">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#ICollection{System#Type}#IsReadOnly">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.IsReadOnlyGet">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#IList{System#Type}#Item(System.Int32)">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.ItemGetInt32">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.ItemSetInt32Type">
            <summary>Sets the stub of IList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.RemoveAtInt32">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of Remove()</summary>
        </member>
        <member name="F:Abp.Collections.Fakes.StubITypeList`1.RemoveType">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#ICollection{System#Type}#Add(System.Type)">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#ICollection{System#Type}#Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#ICollection{System#Type}#Contains(System.Type)">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#ICollection{System#Type}#CopyTo(System.Type[],System.Int32)">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#ICollection{System#Type}#Remove(System.Type)">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#IEnumerable{System#Type}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#IList{System#Type}#IndexOf(System.Type)">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#IList{System#Type}#Insert(System.Int32,System.Type)">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#Generic#IList{System#Type}#RemoveAt(System.Int32)">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubITypeList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Abp.Collections.Fakes.StubTypeList">
            <summary>Stub type of Abp.Collections.TypeList</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubTypeList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubTypeList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubTypeList.InitializeStub">
            <summary>Initializes a new instance of type StubTypeList</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubTypeList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubTypeList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Collections.Fakes.StubTypeList`1">
            <summary>Stub type of Abp.Collections.TypeList`1</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubTypeList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubTypeList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Collections.Fakes.StubTypeList`1.InitializeStub">
            <summary>Initializes a new instance of type StubTypeList</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubTypeList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Collections.Fakes.StubTypeList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions">
            <summary>Shim type of Abp.Configuration.CacheManagerSettingExtensions</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions.GetApplicationSettingsCacheICacheManager">
            <summary>Sets the shim of CacheManagerSettingExtensions.GetApplicationSettingsCache(ICacheManager cacheManager)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions.GetTenantSettingsCacheICacheManager">
            <summary>Sets the shim of CacheManagerSettingExtensions.GetTenantSettingsCache(ICacheManager cacheManager)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimCacheManagerSettingExtensions.GetUserSettingsCacheICacheManager">
            <summary>Sets the shim of CacheManagerSettingExtensions.GetUserSettingsCache(ICacheManager cacheManager)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore">
            <summary>Shim type of Abp.Configuration.DefaultConfigSettingStore</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.#ctor(Abp.Configuration.DefaultConfigSettingStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.AllInstances.CreateAsyncSettingInfo">
            <summary>Sets the shim of DefaultConfigSettingStore.CreateAsync(SettingInfo setting)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.AllInstances.DeleteAsyncSettingInfo">
            <summary>Sets the shim of DefaultConfigSettingStore.DeleteAsync(SettingInfo setting)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.AllInstances.GetAllListAsyncNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of DefaultConfigSettingStore.GetAllListAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.AllInstances.GetSettingOrNullAsyncNullableOfInt32NullableOfInt64String">
            <summary>Sets the shim of DefaultConfigSettingStore.GetSettingOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId, String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.AllInstances.UpdateAsyncSettingInfo">
            <summary>Sets the shim of DefaultConfigSettingStore.UpdateAsync(SettingInfo setting)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.Bind(Abp.Configuration.ISettingStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.Constructor">
            <summary>Sets the shim of DefaultConfigSettingStore.DefaultConfigSettingStore()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.CreateAsyncSettingInfo">
            <summary>Sets the shim of DefaultConfigSettingStore.CreateAsync(SettingInfo setting)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.DeleteAsyncSettingInfo">
            <summary>Sets the shim of DefaultConfigSettingStore.DeleteAsync(SettingInfo setting)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.GetAllListAsyncNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of DefaultConfigSettingStore.GetAllListAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.GetSettingOrNullAsyncNullableOfInt32NullableOfInt64String">
            <summary>Sets the shim of DefaultConfigSettingStore.GetSettingOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId, String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.InstanceGet">
            <summary>Sets the shim of DefaultConfigSettingStore.get_Instance()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.StaticConstructor">
            <summary>Sets the shim of DefaultConfigSettingStore.DefaultConfigSettingStore()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDefaultConfigSettingStore.UpdateAsyncSettingInfo">
            <summary>Sets the shim of DefaultConfigSettingStore.UpdateAsync(SettingInfo setting)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimDictionaryBasedConfig">
            <summary>Shim type of Abp.Configuration.DictionaryBasedConfig</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.#ctor(Abp.Configuration.DictionaryBasedConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.CustomSettingsGet">
            <summary>Sets the shim of DictionaryBasedConfig.get_CustomSettings()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.CustomSettingsSetDictionaryOfStringObject">
            <summary>Sets the shim of DictionaryBasedConfig.set_CustomSettings(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Configuration.DictionaryBasedConfig,System.String,``0})">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.GetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Configuration.DictionaryBasedConfig,System.String,``0,``0})">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.GetOrCreateOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Configuration.DictionaryBasedConfig,System.String,System.Func{``0},``0})">
            <summary>Sets the shim of DictionaryBasedConfig.GetOrCreate(String name, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.GetString">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.GetStringObject">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name, Object defaultValue)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.ItemGetString">
            <summary>Sets the shim of DictionaryBasedConfig.get_Item(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of DictionaryBasedConfig.set_Item(String name, Object value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.AllInstances.SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Configuration.DictionaryBasedConfig,System.String,``0})">
            <summary>Sets the shim of DictionaryBasedConfig.Set(String name, !!0 value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.Bind(Abp.Configuration.IDictionaryBasedConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.Constructor">
            <summary>Sets the shim of DictionaryBasedConfig.DictionaryBasedConfig()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.CustomSettingsGet">
            <summary>Sets the shim of DictionaryBasedConfig.get_CustomSettings()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.CustomSettingsSetDictionaryOfStringObject">
            <summary>Sets the shim of DictionaryBasedConfig.set_CustomSettings(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.GetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.GetOrCreateOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},``0})">
            <summary>Sets the shim of DictionaryBasedConfig.GetOrCreate(String name, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.GetString">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.GetStringObject">
            <summary>Sets the shim of DictionaryBasedConfig.Get(String name, Object defaultValue)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.ItemGetString">
            <summary>Sets the shim of DictionaryBasedConfig.get_Item(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.ItemSetStringObject">
            <summary>Sets the shim of DictionaryBasedConfig.set_Item(String name, Object value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimDictionaryBasedConfig.SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets the shim of DictionaryBasedConfig.Set(String name, !!0 value)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingDefinition">
            <summary>Shim type of Abp.Configuration.SettingDefinition</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinition.#ctor(Abp.Configuration.SettingDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.CustomDataGet">
            <summary>Sets the shim of SettingDefinition.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.CustomDataSetObject">
            <summary>Sets the shim of SettingDefinition.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.DefaultValueGet">
            <summary>Sets the shim of SettingDefinition.get_DefaultValue()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.DefaultValueSetString">
            <summary>Sets the shim of SettingDefinition.set_DefaultValue(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.DescriptionGet">
            <summary>Sets the shim of SettingDefinition.get_Description()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.DescriptionSetILocalizableString">
            <summary>Sets the shim of SettingDefinition.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.DisplayNameGet">
            <summary>Sets the shim of SettingDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.DisplayNameSetILocalizableString">
            <summary>Sets the shim of SettingDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.GroupGet">
            <summary>Sets the shim of SettingDefinition.get_Group()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.GroupSetSettingDefinitionGroup">
            <summary>Sets the shim of SettingDefinition.set_Group(SettingDefinitionGroup value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.IsInheritedGet">
            <summary>Sets the shim of SettingDefinition.get_IsInherited()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.IsInheritedSetBoolean">
            <summary>Sets the shim of SettingDefinition.set_IsInherited(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.IsVisibleToClientsGet">
            <summary>Sets the shim of SettingDefinition.get_IsVisibleToClients()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.IsVisibleToClientsSetBoolean">
            <summary>Sets the shim of SettingDefinition.set_IsVisibleToClients(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.NameGet">
            <summary>Sets the shim of SettingDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.NameSetString">
            <summary>Sets the shim of SettingDefinition.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.ScopesGet">
            <summary>Sets the shim of SettingDefinition.get_Scopes()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.AllInstances.ScopesSetSettingScopes">
            <summary>Sets the shim of SettingDefinition.set_Scopes(SettingScopes value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.ConstructorStringStringILocalizableStringSettingDefinitionGroupILocalizableStringSettingScopesBooleanBooleanObject">
            <summary>Sets the shim of SettingDefinition.SettingDefinition(String name, String defaultValue, ILocalizableString displayName, SettingDefinitionGroup group, ILocalizableString description, SettingScopes scopes, Boolean isVisibleToClients, Boolean isInherited, Object customData)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.CustomDataGet">
            <summary>Sets the shim of SettingDefinition.get_CustomData()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.CustomDataSetObject">
            <summary>Sets the shim of SettingDefinition.set_CustomData(Object value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.DefaultValueGet">
            <summary>Sets the shim of SettingDefinition.get_DefaultValue()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.DefaultValueSetString">
            <summary>Sets the shim of SettingDefinition.set_DefaultValue(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.DescriptionGet">
            <summary>Sets the shim of SettingDefinition.get_Description()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.DescriptionSetILocalizableString">
            <summary>Sets the shim of SettingDefinition.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.DisplayNameGet">
            <summary>Sets the shim of SettingDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.DisplayNameSetILocalizableString">
            <summary>Sets the shim of SettingDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.GroupGet">
            <summary>Sets the shim of SettingDefinition.get_Group()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.GroupSetSettingDefinitionGroup">
            <summary>Sets the shim of SettingDefinition.set_Group(SettingDefinitionGroup value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.IsInheritedGet">
            <summary>Sets the shim of SettingDefinition.get_IsInherited()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.IsInheritedSetBoolean">
            <summary>Sets the shim of SettingDefinition.set_IsInherited(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.IsVisibleToClientsGet">
            <summary>Sets the shim of SettingDefinition.get_IsVisibleToClients()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.IsVisibleToClientsSetBoolean">
            <summary>Sets the shim of SettingDefinition.set_IsVisibleToClients(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.NameGet">
            <summary>Sets the shim of SettingDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.NameSetString">
            <summary>Sets the shim of SettingDefinition.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.ScopesGet">
            <summary>Sets the shim of SettingDefinition.get_Scopes()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinition.ScopesSetSettingScopes">
            <summary>Sets the shim of SettingDefinition.set_Scopes(SettingScopes value)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingDefinitionGroup">
            <summary>Shim type of Abp.Configuration.SettingDefinitionGroup</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.#ctor(Abp.Configuration.SettingDefinitionGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AddChildSettingDefinitionGroup">
            <summary>Sets the shim of SettingDefinitionGroup.AddChild(SettingDefinitionGroup child)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.AddChildSettingDefinitionGroup">
            <summary>Sets the shim of SettingDefinitionGroup.AddChild(SettingDefinitionGroup child)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.ChildrenGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_Children()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.DisplayNameGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.DisplayNameSetILocalizableString">
            <summary>Sets the shim of SettingDefinitionGroup.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.NameGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_Name()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.NameSetString">
            <summary>Sets the shim of SettingDefinitionGroup.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.ParentGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_Parent()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.AllInstances.ParentSetSettingDefinitionGroup">
            <summary>Sets the shim of SettingDefinitionGroup.set_Parent(SettingDefinitionGroup value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.ChildrenGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_Children()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.ConstructorStringILocalizableString">
            <summary>Sets the shim of SettingDefinitionGroup.SettingDefinitionGroup(String name, ILocalizableString displayName)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.DisplayNameGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.DisplayNameSetILocalizableString">
            <summary>Sets the shim of SettingDefinitionGroup.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.NameGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_Name()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.NameSetString">
            <summary>Sets the shim of SettingDefinitionGroup.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.ParentGet">
            <summary>Sets the shim of SettingDefinitionGroup.get_Parent()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionGroup.ParentSetSettingDefinitionGroup">
            <summary>Sets the shim of SettingDefinitionGroup.set_Parent(SettingDefinitionGroup value)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext">
            <summary>Shim type of Abp.Configuration.SettingDefinitionProviderContext</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.#ctor(Abp.Configuration.SettingDefinitionProviderContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.AllInstances.ManagerGet">
            <summary>Sets the shim of SettingDefinitionProviderContext.get_Manager()</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.ConstructorISettingDefinitionManager">
            <summary>Sets the shim of SettingDefinitionProviderContext.SettingDefinitionProviderContext(ISettingDefinitionManager manager)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingDefinitionProviderContext.ManagerGet">
            <summary>Sets the shim of SettingDefinitionProviderContext.get_Manager()</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingInfo">
            <summary>Shim type of Abp.Configuration.SettingInfo</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingInfo.#ctor(Abp.Configuration.SettingInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.NameGet">
            <summary>Sets the shim of SettingInfo.get_Name()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.NameSetString">
            <summary>Sets the shim of SettingInfo.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.TenantIdGet">
            <summary>Sets the shim of SettingInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of SettingInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.UserIdGet">
            <summary>Sets the shim of SettingInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.UserIdSetNullableOfInt64">
            <summary>Sets the shim of SettingInfo.set_UserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.ValueGet">
            <summary>Sets the shim of SettingInfo.get_Value()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.AllInstances.ValueSetString">
            <summary>Sets the shim of SettingInfo.set_Value(String value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.Constructor">
            <summary>Sets the shim of SettingInfo.SettingInfo()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.ConstructorNullableOfInt32NullableOfInt64StringString">
            <summary>Sets the shim of SettingInfo.SettingInfo(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.NameGet">
            <summary>Sets the shim of SettingInfo.get_Name()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.NameSetString">
            <summary>Sets the shim of SettingInfo.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.TenantIdGet">
            <summary>Sets the shim of SettingInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of SettingInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.UserIdGet">
            <summary>Sets the shim of SettingInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.UserIdSetNullableOfInt64">
            <summary>Sets the shim of SettingInfo.set_UserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.ValueGet">
            <summary>Sets the shim of SettingInfo.get_Value()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingInfo.ValueSetString">
            <summary>Sets the shim of SettingInfo.set_Value(String value)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingManager">
            <summary>Shim type of Abp.Configuration.SettingManager</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManager.#ctor(Abp.Configuration.SettingManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AbpSessionGet">
            <summary>Sets the shim of SettingManager.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AbpSessionSetIAbpSession">
            <summary>Sets the shim of SettingManager.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.AbpSessionGet">
            <summary>Sets the shim of SettingManager.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.AbpSessionSetIAbpSession">
            <summary>Sets the shim of SettingManager.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.ChangeSettingForApplicationAsyncStringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForApplicationAsync(String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.ChangeSettingForTenantAsyncInt32StringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForTenantAsync(Int32 tenantId, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.ChangeSettingForUserAsyncInt64StringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForUserAsync(Int64 userId, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.ChangeSettingForUserAsyncUserIdentifierStringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForUserAsync(UserIdentifier user, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetAllSettingValuesAsync">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesAsync()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetAllSettingValuesAsyncSettingScopes">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesAsync(SettingScopes scopes)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetAllSettingValuesForApplicationAsync">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForApplicationAsync()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetAllSettingValuesForTenantAsyncInt32">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForTenantAsync(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetAllSettingValuesForUserAsyncInt64">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForUserAsync(Int64 userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetAllSettingValuesForUserAsyncUserIdentifier">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForUserAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetApplicationSettingsAsync">
            <summary>Sets the shim of SettingManager.GetApplicationSettingsAsync()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetReadOnlyTenantSettingsInt32">
            <summary>Sets the shim of SettingManager.GetReadOnlyTenantSettings(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetReadOnlyUserSettingsUserIdentifier">
            <summary>Sets the shim of SettingManager.GetReadOnlyUserSettings(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueAsyncString">
            <summary>Sets the shim of SettingManager.GetSettingValueAsync(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForApplicationAsyncString">
            <summary>Sets the shim of SettingManager.GetSettingValueForApplicationAsync(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForApplicationAsyncStringBoolean">
            <summary>Sets the shim of SettingManager.GetSettingValueForApplicationAsync(String name, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForApplicationOrNullAsyncString">
            <summary>Sets the shim of SettingManager.GetSettingValueForApplicationOrNullAsync(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForTenantAsyncStringInt32">
            <summary>Sets the shim of SettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForTenantAsyncStringInt32Boolean">
            <summary>Sets the shim of SettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForTenantOrNullAsyncInt32String">
            <summary>Sets the shim of SettingManager.GetSettingValueForTenantOrNullAsync(Int32 tenantId, String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForUserAsyncStringNullableOfInt32Int64">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForUserAsyncStringNullableOfInt32Int64Boolean">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForUserAsyncStringUserIdentifier">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserAsync(String name, UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueForUserOrNullAsyncUserIdentifierString">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserOrNullAsync(UserIdentifier user, String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetSettingValueInternalAsyncStringNullableOfInt32NullableOfInt64Boolean">
            <summary>Sets the shim of SettingManager.GetSettingValueInternalAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetTenantSettingsFromCacheInt32">
            <summary>Sets the shim of SettingManager.GetTenantSettingsFromCache(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.GetUserSettingsFromCacheUserIdentifier">
            <summary>Sets the shim of SettingManager.GetUserSettingsFromCache(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.InsertOrUpdateOrDeleteSettingValueAsyncStringStringNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of SettingManager.InsertOrUpdateOrDeleteSettingValueAsync(String name, String value, Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.SettingStoreGet">
            <summary>Sets the shim of SettingManager.get_SettingStore()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances.SettingStoreSetISettingStore">
            <summary>Sets the shim of SettingManager.set_SettingStore(ISettingStore value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.AllInstances._GetApplicationSettingsAsyncb__36_0">
            <summary>Sets the shim of SettingManager.&lt;GetApplicationSettingsAsync&gt;b__36_0()</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManager.Bind(Abp.Configuration.ISettingManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManager.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.ChangeSettingForApplicationAsyncStringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForApplicationAsync(String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.ChangeSettingForTenantAsyncInt32StringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForTenantAsync(Int32 tenantId, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.ChangeSettingForUserAsyncInt64StringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForUserAsync(Int64 userId, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.ChangeSettingForUserAsyncUserIdentifierStringString">
            <summary>Sets the shim of SettingManager.ChangeSettingForUserAsync(UserIdentifier user, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.ConstructorISettingDefinitionManagerICacheManager">
            <summary>Sets the shim of SettingManager.SettingManager(ISettingDefinitionManager settingDefinitionManager, ICacheManager cacheManager)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetAllSettingValuesAsync">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesAsync()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetAllSettingValuesAsyncSettingScopes">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesAsync(SettingScopes scopes)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetAllSettingValuesForApplicationAsync">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForApplicationAsync()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetAllSettingValuesForTenantAsyncInt32">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForTenantAsync(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetAllSettingValuesForUserAsyncInt64">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForUserAsync(Int64 userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetAllSettingValuesForUserAsyncUserIdentifier">
            <summary>Sets the shim of SettingManager.GetAllSettingValuesForUserAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetApplicationSettingsAsync">
            <summary>Sets the shim of SettingManager.GetApplicationSettingsAsync()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetReadOnlyTenantSettingsInt32">
            <summary>Sets the shim of SettingManager.GetReadOnlyTenantSettings(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetReadOnlyUserSettingsUserIdentifier">
            <summary>Sets the shim of SettingManager.GetReadOnlyUserSettings(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueAsyncString">
            <summary>Sets the shim of SettingManager.GetSettingValueAsync(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForApplicationAsyncString">
            <summary>Sets the shim of SettingManager.GetSettingValueForApplicationAsync(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForApplicationAsyncStringBoolean">
            <summary>Sets the shim of SettingManager.GetSettingValueForApplicationAsync(String name, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForApplicationOrNullAsyncString">
            <summary>Sets the shim of SettingManager.GetSettingValueForApplicationOrNullAsync(String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForTenantAsyncStringInt32">
            <summary>Sets the shim of SettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForTenantAsyncStringInt32Boolean">
            <summary>Sets the shim of SettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForTenantOrNullAsyncInt32String">
            <summary>Sets the shim of SettingManager.GetSettingValueForTenantOrNullAsync(Int32 tenantId, String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForUserAsyncStringNullableOfInt32Int64">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForUserAsyncStringNullableOfInt32Int64Boolean">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForUserAsyncStringUserIdentifier">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserAsync(String name, UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueForUserOrNullAsyncUserIdentifierString">
            <summary>Sets the shim of SettingManager.GetSettingValueForUserOrNullAsync(UserIdentifier user, String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetSettingValueInternalAsyncStringNullableOfInt32NullableOfInt64Boolean">
            <summary>Sets the shim of SettingManager.GetSettingValueInternalAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetTenantSettingsFromCacheInt32">
            <summary>Sets the shim of SettingManager.GetTenantSettingsFromCache(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.GetUserSettingsFromCacheUserIdentifier">
            <summary>Sets the shim of SettingManager.GetUserSettingsFromCache(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.InsertOrUpdateOrDeleteSettingValueAsyncStringStringNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of SettingManager.InsertOrUpdateOrDeleteSettingValueAsync(String name, String value, Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.SettingStoreGet">
            <summary>Sets the shim of SettingManager.get_SettingStore()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager.SettingStoreSetISettingStore">
            <summary>Sets the shim of SettingManager.set_SettingStore(ISettingStore value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManager._GetApplicationSettingsAsyncb__36_0">
            <summary>Sets the shim of SettingManager.&lt;GetApplicationSettingsAsync&gt;b__36_0()</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingManagerExtensions">
            <summary>Shim type of Abp.Configuration.SettingManagerExtensions</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.ChangeSettingForApplicationISettingManagerStringString">
            <summary>Sets the shim of SettingManagerExtensions.ChangeSettingForApplication(ISettingManager settingManager, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.ChangeSettingForTenantISettingManagerInt32StringString">
            <summary>Sets the shim of SettingManagerExtensions.ChangeSettingForTenant(ISettingManager settingManager, Int32 tenantId, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.ChangeSettingForUserISettingManagerUserIdentifierStringString">
            <summary>Sets the shim of SettingManagerExtensions.ChangeSettingForUser(ISettingManager settingManager, UserIdentifier user, String name, String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetAllSettingValuesForApplicationISettingManager">
            <summary>Sets the shim of SettingManagerExtensions.GetAllSettingValuesForApplication(ISettingManager settingManager)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetAllSettingValuesForTenantISettingManagerInt32">
            <summary>Sets the shim of SettingManagerExtensions.GetAllSettingValuesForTenant(ISettingManager settingManager, Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetAllSettingValuesForUserISettingManagerUserIdentifier">
            <summary>Sets the shim of SettingManagerExtensions.GetAllSettingValuesForUser(ISettingManager settingManager, UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetAllSettingValuesISettingManager">
            <summary>Sets the shim of SettingManagerExtensions.GetAllSettingValues(ISettingManager settingManager)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetSettingValueForApplicationISettingManagerString">
            <summary>Sets the shim of SettingManagerExtensions.GetSettingValueForApplication(ISettingManager settingManager, String name)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetSettingValueForTenantISettingManagerStringInt32">
            <summary>Sets the shim of SettingManagerExtensions.GetSettingValueForTenant(ISettingManager settingManager, String name, Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetSettingValueForUserISettingManagerStringNullableOfInt32Int64">
            <summary>Sets the shim of SettingManagerExtensions.GetSettingValueForUser(ISettingManager settingManager, String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetSettingValueForUserISettingManagerStringNullableOfInt32Int64Boolean">
            <summary>Sets the shim of SettingManagerExtensions.GetSettingValueForUser(ISettingManager settingManager, String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingManagerExtensions.GetSettingValueISettingManagerString">
            <summary>Sets the shim of SettingManagerExtensions.GetSettingValue(ISettingManager settingManager, String name)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingProvider">
            <summary>Shim type of Abp.Configuration.SettingProvider</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingProvider.#ctor(Abp.Configuration.SettingProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.ShimSettingProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.ShimSettingProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.ShimSettingProvider.Constructor">
            <summary>Sets the shim of SettingProvider.SettingProvider()</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubDictionaryBasedConfig">
            <summary>Stub type of Abp.Configuration.DictionaryBasedConfig</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubDictionaryBasedConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubDictionaryBasedConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubDictionaryBasedConfig.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryBasedConfig</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubDictionaryBasedConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubDictionaryBasedConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubIDictionaryBasedConfig">
            <summary>Stub type of Abp.Configuration.IDictionaryBasedConfig</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryBasedConfig</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.Abp#Configuration#IDictionaryBasedConfig#Get(System.String)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.Abp#Configuration#IDictionaryBasedConfig#Get``1(System.String)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.Abp#Configuration#IDictionaryBasedConfig#Get``1(System.String,``0)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.Abp#Configuration#IDictionaryBasedConfig#Get(System.String,System.Object)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name, Object defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.Abp#Configuration#IDictionaryBasedConfig#GetOrCreate``1(System.String,System.Func{``0})">
            <summary>Sets the stub of IDictionaryBasedConfig.GetOrCreate(String name, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.Abp#Configuration#IDictionaryBasedConfig#Set``1(System.String,``0)">
            <summary>Sets the stub of IDictionaryBasedConfig.Set(String name, !!0 value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.GetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets stubs of Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.GetOrCreateOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},``0})">
            <summary>Sets stubs of GetOrCreate(String name, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.GetString">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.GetStringObject">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name, Object defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubIDictionaryBasedConfig.SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets stubs of Set(String name, !!0 value)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubISettingDefinitionManager">
            <summary>Stub type of Abp.Configuration.ISettingDefinitionManager</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingDefinitionManager.#ctor">
            <summary>Initializes a new instance of type StubISettingDefinitionManager</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingDefinitionManager.Abp#Configuration#ISettingDefinitionManager#GetAllSettingDefinitions">
            <summary>Sets the stub of ISettingDefinitionManager.GetAllSettingDefinitions()</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingDefinitionManager.Abp#Configuration#ISettingDefinitionManager#GetSettingDefinition(System.String)">
            <summary>Sets the stub of ISettingDefinitionManager.GetSettingDefinition(String name)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingDefinitionManager.GetAllSettingDefinitions">
            <summary>Sets the stub of ISettingDefinitionManager.GetAllSettingDefinitions()</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingDefinitionManager.GetSettingDefinitionString">
            <summary>Sets the stub of ISettingDefinitionManager.GetSettingDefinition(String name)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubISettingManager">
            <summary>Stub type of Abp.Configuration.ISettingManager</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.#ctor">
            <summary>Initializes a new instance of type StubISettingManager</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#ChangeSettingForApplicationAsync(System.String,System.String)">
            <summary>Sets the stub of ISettingManager.ChangeSettingForApplicationAsync(String name, String value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#ChangeSettingForTenantAsync(System.Int32,System.String,System.String)">
            <summary>Sets the stub of ISettingManager.ChangeSettingForTenantAsync(Int32 tenantId, String name, String value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#ChangeSettingForUserAsync(Abp.UserIdentifier,System.String,System.String)">
            <summary>Sets the stub of ISettingManager.ChangeSettingForUserAsync(UserIdentifier user, String name, String value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetAllSettingValuesAsync">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesAsync()</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetAllSettingValuesAsync(Abp.Configuration.SettingScopes)">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesAsync(SettingScopes scopes)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetAllSettingValuesForApplicationAsync">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesForApplicationAsync()</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetAllSettingValuesForTenantAsync(System.Int32)">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesForTenantAsync(Int32 tenantId)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetAllSettingValuesForUserAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesForUserAsync(UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueAsync(System.String)">
            <summary>Sets the stub of ISettingManager.GetSettingValueAsync(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueForApplicationAsync(System.String)">
            <summary>Sets the stub of ISettingManager.GetSettingValueForApplicationAsync(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueForApplicationAsync(System.String,System.Boolean)">
            <summary>Sets the stub of ISettingManager.GetSettingValueForApplicationAsync(String name, Boolean fallbackToDefault)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueForTenantAsync(System.String,System.Int32)">
            <summary>Sets the stub of ISettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueForTenantAsync(System.String,System.Int32,System.Boolean)">
            <summary>Sets the stub of ISettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueForUserAsync(System.String,Abp.UserIdentifier)">
            <summary>Sets the stub of ISettingManager.GetSettingValueForUserAsync(String name, UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueForUserAsync(System.String,System.Nullable{System.Int32},System.Int64)">
            <summary>Sets the stub of ISettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingManager.Abp#Configuration#ISettingManager#GetSettingValueForUserAsync(System.String,System.Nullable{System.Int32},System.Int64,System.Boolean)">
            <summary>Sets the stub of ISettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.ChangeSettingForApplicationAsyncStringString">
            <summary>Sets the stub of ISettingManager.ChangeSettingForApplicationAsync(String name, String value)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.ChangeSettingForTenantAsyncInt32StringString">
            <summary>Sets the stub of ISettingManager.ChangeSettingForTenantAsync(Int32 tenantId, String name, String value)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.ChangeSettingForUserAsyncUserIdentifierStringString">
            <summary>Sets the stub of ISettingManager.ChangeSettingForUserAsync(UserIdentifier user, String name, String value)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetAllSettingValuesAsync">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesAsync()</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetAllSettingValuesAsyncSettingScopes">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesAsync(SettingScopes scopes)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetAllSettingValuesForApplicationAsync">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesForApplicationAsync()</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetAllSettingValuesForTenantAsyncInt32">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesForTenantAsync(Int32 tenantId)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetAllSettingValuesForUserAsyncUserIdentifier">
            <summary>Sets the stub of ISettingManager.GetAllSettingValuesForUserAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueAsyncString">
            <summary>Sets the stub of ISettingManager.GetSettingValueAsync(String name)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueForApplicationAsyncString">
            <summary>Sets the stub of ISettingManager.GetSettingValueForApplicationAsync(String name)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueForApplicationAsyncStringBoolean">
            <summary>Sets the stub of ISettingManager.GetSettingValueForApplicationAsync(String name, Boolean fallbackToDefault)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueForTenantAsyncStringInt32">
            <summary>Sets the stub of ISettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueForTenantAsyncStringInt32Boolean">
            <summary>Sets the stub of ISettingManager.GetSettingValueForTenantAsync(String name, Int32 tenantId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueForUserAsyncStringNullableOfInt32Int64">
            <summary>Sets the stub of ISettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueForUserAsyncStringNullableOfInt32Int64Boolean">
            <summary>Sets the stub of ISettingManager.GetSettingValueForUserAsync(String name, Nullable`1&lt;Int32&gt; tenantId, Int64 userId, Boolean fallbackToDefault)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingManager.GetSettingValueForUserAsyncStringUserIdentifier">
            <summary>Sets the stub of ISettingManager.GetSettingValueForUserAsync(String name, UserIdentifier user)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubISettingStore">
            <summary>Stub type of Abp.Configuration.ISettingStore</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingStore.#ctor">
            <summary>Initializes a new instance of type StubISettingStore</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingStore.Abp#Configuration#ISettingStore#CreateAsync(Abp.Configuration.SettingInfo)">
            <summary>Sets the stub of ISettingStore.CreateAsync(SettingInfo setting)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingStore.Abp#Configuration#ISettingStore#DeleteAsync(Abp.Configuration.SettingInfo)">
            <summary>Sets the stub of ISettingStore.DeleteAsync(SettingInfo setting)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingStore.Abp#Configuration#ISettingStore#GetAllListAsync(System.Nullable{System.Int32},System.Nullable{System.Int64})">
            <summary>Sets the stub of ISettingStore.GetAllListAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingStore.Abp#Configuration#ISettingStore#GetSettingOrNullAsync(System.Nullable{System.Int32},System.Nullable{System.Int64},System.String)">
            <summary>Sets the stub of ISettingStore.GetSettingOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId, String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingStore.Abp#Configuration#ISettingStore#UpdateAsync(Abp.Configuration.SettingInfo)">
            <summary>Sets the stub of ISettingStore.UpdateAsync(SettingInfo setting)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingStore.CreateAsyncSettingInfo">
            <summary>Sets the stub of ISettingStore.CreateAsync(SettingInfo setting)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingStore.DeleteAsyncSettingInfo">
            <summary>Sets the stub of ISettingStore.DeleteAsync(SettingInfo setting)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingStore.GetAllListAsyncNullableOfInt32NullableOfInt64">
            <summary>Sets the stub of ISettingStore.GetAllListAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingStore.GetSettingOrNullAsyncNullableOfInt32NullableOfInt64String">
            <summary>Sets the stub of ISettingStore.GetSettingOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId, String name)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingStore.UpdateAsyncSettingInfo">
            <summary>Sets the stub of ISettingStore.UpdateAsync(SettingInfo setting)</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubISettingValue">
            <summary>Stub type of Abp.Configuration.ISettingValue</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubISettingValue.#ctor">
            <summary>Initializes a new instance of type StubISettingValue</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubISettingValue.Abp#Configuration#ISettingValue#Name">
            <summary>Sets the stub of ISettingValue.get_Name()</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingValue.NameGet">
            <summary>Sets the stub of ISettingValue.get_Name()</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubISettingValue.Abp#Configuration#ISettingValue#Value">
            <summary>Sets the stub of ISettingValue.get_Value()</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubISettingValue.ValueGet">
            <summary>Sets the stub of ISettingValue.get_Value()</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubSettingDefinition">
            <summary>Stub type of Abp.Configuration.SettingDefinition</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingDefinition.#ctor(System.String,System.String,Abp.Localization.ILocalizableString,Abp.Configuration.SettingDefinitionGroup,Abp.Localization.ILocalizableString,Abp.Configuration.SettingScopes,System.Boolean,System.Boolean,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubSettingDefinition</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubSettingDefinitionGroup">
            <summary>Stub type of Abp.Configuration.SettingDefinitionGroup</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingDefinitionGroup.#ctor(System.String,Abp.Localization.ILocalizableString)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingDefinitionGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingDefinitionGroup.InitializeStub">
            <summary>Initializes a new instance of type StubSettingDefinitionGroup</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingDefinitionGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingDefinitionGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubSettingInfo">
            <summary>Stub type of Abp.Configuration.SettingInfo</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingInfo.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingInfo.InitializeStub">
            <summary>Initializes a new instance of type StubSettingInfo</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubSettingManager">
            <summary>Stub type of Abp.Configuration.SettingManager</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingManager.#ctor(Abp.Configuration.ISettingDefinitionManager,Abp.Runtime.Caching.ICacheManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingManager.ChangeSettingForApplicationAsync(System.String,System.String)">
            <summary>Sets the stub of SettingManager.ChangeSettingForApplicationAsync(String name, String value)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubSettingManager.ChangeSettingForApplicationAsyncStringString">
            <summary>Sets the stub of SettingManager.ChangeSettingForApplicationAsync(String name, String value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingManager.ChangeSettingForTenantAsync(System.Int32,System.String,System.String)">
            <summary>Sets the stub of SettingManager.ChangeSettingForTenantAsync(Int32 tenantId, String name, String value)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubSettingManager.ChangeSettingForTenantAsyncInt32StringString">
            <summary>Sets the stub of SettingManager.ChangeSettingForTenantAsync(Int32 tenantId, String name, String value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingManager.ChangeSettingForUserAsync(System.Int64,System.String,System.String)">
            <summary>Sets the stub of SettingManager.ChangeSettingForUserAsync(Int64 userId, String name, String value)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubSettingManager.ChangeSettingForUserAsyncInt64StringString">
            <summary>Sets the stub of SettingManager.ChangeSettingForUserAsync(Int64 userId, String name, String value)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingManager.InitializeStub">
            <summary>Initializes a new instance of type StubSettingManager</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Configuration.Fakes.StubSettingProvider">
            <summary>Stub type of Abp.Configuration.SettingProvider</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingProvider.GetSettingDefinitions(Abp.Configuration.SettingDefinitionProviderContext)">
            <summary>Sets the stub of SettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="F:Abp.Configuration.Fakes.StubSettingProvider.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the stub of SettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="M:Abp.Configuration.Fakes.StubSettingProvider.InitializeStub">
            <summary>Initializes a new instance of type StubSettingProvider</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Configuration.Fakes.StubSettingProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions">
            <summary>Shim type of Abp.Configuration.Startup.AbpStartupConfigurationExtensions</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions.ReplaceServiceIAbpStartupConfigurationTypeTypeDependencyLifeStyle">
            <summary>Sets the shim of AbpStartupConfigurationExtensions.ReplaceService(IAbpStartupConfiguration configuration, Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions.ReplaceServiceOf1IAbpStartupConfigurationAction``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Configuration.Startup.IAbpStartupConfiguration,System.Action})">
            <summary>Sets the shim of AbpStartupConfigurationExtensions.ReplaceService(IAbpStartupConfiguration configuration, Action replaceAction)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimAbpStartupConfigurationExtensions.ReplaceServiceOf2IAbpStartupConfigurationDependencyLifeStyle``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Configuration.Startup.IAbpStartupConfiguration,Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets the shim of AbpStartupConfigurationExtensions.ReplaceService(IAbpStartupConfiguration configuration, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration">
            <summary>Shim type of Abp.Configuration.Startup.ValidationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.#ctor(Abp.Configuration.Startup.ValidationConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.AllInstances.IgnoredTypesGet">
            <summary>Sets the shim of ValidationConfiguration.get_IgnoredTypes()</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.Bind(Abp.Configuration.Startup.IValidationConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.Constructor">
            <summary>Sets the shim of ValidationConfiguration.ValidationConfiguration()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.ShimValidationConfiguration.IgnoredTypesGet">
            <summary>Sets the shim of ValidationConfiguration.get_IgnoredTypes()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.IAbpStartupConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIAbpStartupConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#IDictionaryBasedConfig#Get(System.String)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#IDictionaryBasedConfig#Get``1(System.String,``0)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#IDictionaryBasedConfig#Get(System.String,System.Object)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name, Object defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#IDictionaryBasedConfig#Get``1(System.String)">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#IDictionaryBasedConfig#GetOrCreate``1(System.String,System.Func{``0})">
            <summary>Sets the stub of IDictionaryBasedConfig.GetOrCreate(String name, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#IDictionaryBasedConfig#Set``1(System.String,``0)">
            <summary>Sets the stub of IDictionaryBasedConfig.Set(String name, !!0 value)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Get``1">
            <summary>Sets the stub of IAbpStartupConfiguration.Get()</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#ReplaceService(System.Type,System.Action)">
            <summary>Sets the stub of IAbpStartupConfiguration.ReplaceService(Type type, Action replaceAction)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.AttachBackingFieldToDefaultNameOrConnectionString">
            <summary>Attaches delegates to emulate StubIAbpStartupConfiguration.DefaultNameOrConnectionString as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Auditing">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Auditing()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.AuditingGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Auditing()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Authorization">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Authorization()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.AuthorizationGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Authorization()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#BackgroundJobs">
            <summary>Sets the stub of IAbpStartupConfiguration.get_BackgroundJobs()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.BackgroundJobsGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_BackgroundJobs()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Caching">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Caching()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.CachingGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Caching()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#DefaultNameOrConnectionString">
            <summary>Sets the stub of IAbpStartupConfiguration.get_DefaultNameOrConnectionString()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.DefaultNameOrConnectionStringGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_DefaultNameOrConnectionString()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.DefaultNameOrConnectionStringSetString">
            <summary>Sets the stub of IAbpStartupConfiguration.set_DefaultNameOrConnectionString(String value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#EmbeddedResources">
            <summary>Sets the stub of IAbpStartupConfiguration.get_EmbeddedResources()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.EmbeddedResourcesGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_EmbeddedResources()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#EventBus">
            <summary>Sets the stub of IAbpStartupConfiguration.get_EventBus()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.EventBusGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_EventBus()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Features">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Features()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.FeaturesGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Features()</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Get()</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of Get(String name)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.GetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets stubs of Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.GetOrCreateOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},``0})">
            <summary>Sets stubs of GetOrCreate(String name, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.GetString">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.GetStringObject">
            <summary>Sets the stub of IDictionaryBasedConfig.Get(String name, Object defaultValue)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#IocManager">
            <summary>Sets the stub of IAbpStartupConfiguration.get_IocManager()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.IocManagerGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_IocManager()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Localization">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Localization()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.LocalizationGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Localization()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Modules">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Modules()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.ModulesGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Modules()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#MultiTenancy">
            <summary>Sets the stub of IAbpStartupConfiguration.get_MultiTenancy()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.MultiTenancyGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_MultiTenancy()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Navigation">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Navigation()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.NavigationGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Navigation()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Notifications">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Notifications()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.NotificationsGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Notifications()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.ReplaceServiceTypeAction">
            <summary>Sets the stub of IAbpStartupConfiguration.ReplaceService(Type type, Action replaceAction)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.SetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets stubs of Set(String name, !!0 value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Settings">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Settings()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.SettingsGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Settings()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#UnitOfWork">
            <summary>Sets the stub of IAbpStartupConfiguration.get_UnitOfWork()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.UnitOfWorkGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_UnitOfWork()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.Abp#Configuration#Startup#IAbpStartupConfiguration#Validation">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Validation()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAbpStartupConfiguration.ValidationGet">
            <summary>Sets the stub of IAbpStartupConfiguration.get_Validation()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.IAuthorizationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIAuthorizationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration.AttachBackingFieldToIsEnabled">
            <summary>Attaches delegates to emulate StubIAuthorizationConfiguration.IsEnabled as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration.Abp#Configuration#Startup#IAuthorizationConfiguration#IsEnabled">
            <summary>Sets the stub of IAuthorizationConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration.IsEnabledGet">
            <summary>Sets the stub of IAuthorizationConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration.IsEnabledSetBoolean">
            <summary>Sets the stub of IAuthorizationConfiguration.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration.Abp#Configuration#Startup#IAuthorizationConfiguration#Providers">
            <summary>Sets the stub of IAuthorizationConfiguration.get_Providers()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIAuthorizationConfiguration.ProvidersGet">
            <summary>Sets the stub of IAuthorizationConfiguration.get_Providers()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubIEventBusConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.IEventBusConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIEventBusConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIEventBusConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIEventBusConfiguration.AttachBackingFieldToUseDefaultEventBus">
            <summary>Attaches delegates to emulate StubIEventBusConfiguration.UseDefaultEventBus as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIEventBusConfiguration.Abp#Configuration#Startup#IEventBusConfiguration#UseDefaultEventBus">
            <summary>Sets the stub of IEventBusConfiguration.get_UseDefaultEventBus()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIEventBusConfiguration.UseDefaultEventBusGet">
            <summary>Sets the stub of IEventBusConfiguration.get_UseDefaultEventBus()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIEventBusConfiguration.UseDefaultEventBusSetBoolean">
            <summary>Sets the stub of IEventBusConfiguration.set_UseDefaultEventBus(Boolean value)</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.ILocalizationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.#ctor">
            <summary>Initializes a new instance of type StubILocalizationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.AttachBackingFieldToHumanizeTextIfNotFound">
            <summary>Attaches delegates to emulate StubILocalizationConfiguration.HumanizeTextIfNotFound as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.AttachBackingFieldToIsEnabled">
            <summary>Attaches delegates to emulate StubILocalizationConfiguration.IsEnabled as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.AttachBackingFieldToLogWarnMessageIfNotFound">
            <summary>Attaches delegates to emulate StubILocalizationConfiguration.LogWarnMessageIfNotFound as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.AttachBackingFieldToReturnGivenTextIfNotFound">
            <summary>Attaches delegates to emulate StubILocalizationConfiguration.ReturnGivenTextIfNotFound as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.AttachBackingFieldToWrapGivenTextIfNotFound">
            <summary>Attaches delegates to emulate StubILocalizationConfiguration.WrapGivenTextIfNotFound as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.Abp#Configuration#Startup#ILocalizationConfiguration#HumanizeTextIfNotFound">
            <summary>Sets the stub of ILocalizationConfiguration.get_HumanizeTextIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.HumanizeTextIfNotFoundGet">
            <summary>Sets the stub of ILocalizationConfiguration.get_HumanizeTextIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.HumanizeTextIfNotFoundSetBoolean">
            <summary>Sets the stub of ILocalizationConfiguration.set_HumanizeTextIfNotFound(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.Abp#Configuration#Startup#ILocalizationConfiguration#IsEnabled">
            <summary>Sets the stub of ILocalizationConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.IsEnabledGet">
            <summary>Sets the stub of ILocalizationConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.IsEnabledSetBoolean">
            <summary>Sets the stub of ILocalizationConfiguration.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.Abp#Configuration#Startup#ILocalizationConfiguration#Languages">
            <summary>Sets the stub of ILocalizationConfiguration.get_Languages()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.LanguagesGet">
            <summary>Sets the stub of ILocalizationConfiguration.get_Languages()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.Abp#Configuration#Startup#ILocalizationConfiguration#LogWarnMessageIfNotFound">
            <summary>Sets the stub of ILocalizationConfiguration.get_LogWarnMessageIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.LogWarnMessageIfNotFoundGet">
            <summary>Sets the stub of ILocalizationConfiguration.get_LogWarnMessageIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.LogWarnMessageIfNotFoundSetBoolean">
            <summary>Sets the stub of ILocalizationConfiguration.set_LogWarnMessageIfNotFound(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.Abp#Configuration#Startup#ILocalizationConfiguration#ReturnGivenTextIfNotFound">
            <summary>Sets the stub of ILocalizationConfiguration.get_ReturnGivenTextIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.ReturnGivenTextIfNotFoundGet">
            <summary>Sets the stub of ILocalizationConfiguration.get_ReturnGivenTextIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.ReturnGivenTextIfNotFoundSetBoolean">
            <summary>Sets the stub of ILocalizationConfiguration.set_ReturnGivenTextIfNotFound(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.Abp#Configuration#Startup#ILocalizationConfiguration#Sources">
            <summary>Sets the stub of ILocalizationConfiguration.get_Sources()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.SourcesGet">
            <summary>Sets the stub of ILocalizationConfiguration.get_Sources()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.Abp#Configuration#Startup#ILocalizationConfiguration#WrapGivenTextIfNotFound">
            <summary>Sets the stub of ILocalizationConfiguration.get_WrapGivenTextIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.WrapGivenTextIfNotFoundGet">
            <summary>Sets the stub of ILocalizationConfiguration.get_WrapGivenTextIfNotFound()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationConfiguration.WrapGivenTextIfNotFoundSetBoolean">
            <summary>Sets the stub of ILocalizationConfiguration.set_WrapGivenTextIfNotFound(Boolean value)</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList">
            <summary>Stub type of Abp.Configuration.Startup.ILocalizationSourceList</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.#ctor">
            <summary>Initializes a new instance of type StubILocalizationSourceList</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.AddILocalizationSource">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.ContainsILocalizationSource">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.CopyToILocalizationSourceArrayInt32">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#ICollection{Abp#Localization#Sources#ILocalizationSource}#Count">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.CountGet">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.Abp#Configuration#Startup#ILocalizationSourceList#Extensions">
            <summary>Sets the stub of ILocalizationSourceList.get_Extensions()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.ExtensionsGet">
            <summary>Sets the stub of ILocalizationSourceList.get_Extensions()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.IndexOfILocalizationSource">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.InsertInt32ILocalizationSource">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#ICollection{Abp#Localization#Sources#ILocalizationSource}#IsReadOnly">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.IsReadOnlyGet">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#IList{Abp#Localization#Sources#ILocalizationSource}#Item(System.Int32)">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.ItemGetInt32">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.ItemSetInt32ILocalizationSource">
            <summary>Sets the stub of IList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.RemoveAtInt32">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.RemoveILocalizationSource">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#ICollection{Abp#Localization#Sources#ILocalizationSource}#Add(Abp.Localization.Sources.ILocalizationSource)">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#ICollection{Abp#Localization#Sources#ILocalizationSource}#Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#ICollection{Abp#Localization#Sources#ILocalizationSource}#Contains(Abp.Localization.Sources.ILocalizationSource)">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#ICollection{Abp#Localization#Sources#ILocalizationSource}#CopyTo(Abp.Localization.Sources.ILocalizationSource[],System.Int32)">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#ICollection{Abp#Localization#Sources#ILocalizationSource}#Remove(Abp.Localization.Sources.ILocalizationSource)">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#IEnumerable{Abp#Localization#Sources#ILocalizationSource}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#IList{Abp#Localization#Sources#ILocalizationSource}#IndexOf(Abp.Localization.Sources.ILocalizationSource)">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#IList{Abp#Localization#Sources#ILocalizationSource}#Insert(System.Int32,Abp.Localization.Sources.ILocalizationSource)">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#Generic#IList{Abp#Localization#Sources#ILocalizationSource}#RemoveAt(System.Int32)">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubILocalizationSourceList.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubIModuleConfigurations">
            <summary>Stub type of Abp.Configuration.Startup.IModuleConfigurations</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIModuleConfigurations.#ctor">
            <summary>Initializes a new instance of type StubIModuleConfigurations</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIModuleConfigurations.Abp#Configuration#Startup#IModuleConfigurations#AbpConfiguration">
            <summary>Sets the stub of IModuleConfigurations.get_AbpConfiguration()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIModuleConfigurations.AbpConfigurationGet">
            <summary>Sets the stub of IModuleConfigurations.get_AbpConfiguration()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig">
            <summary>Stub type of Abp.Configuration.Startup.IMultiTenancyConfig</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig.#ctor">
            <summary>Initializes a new instance of type StubIMultiTenancyConfig</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig.AttachBackingFieldToIsEnabled">
            <summary>Attaches delegates to emulate StubIMultiTenancyConfig.IsEnabled as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig.Abp#Configuration#Startup#IMultiTenancyConfig#IsEnabled">
            <summary>Sets the stub of IMultiTenancyConfig.get_IsEnabled()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig.IsEnabledGet">
            <summary>Sets the stub of IMultiTenancyConfig.get_IsEnabled()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig.IsEnabledSetBoolean">
            <summary>Sets the stub of IMultiTenancyConfig.set_IsEnabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig.Abp#Configuration#Startup#IMultiTenancyConfig#Resolvers">
            <summary>Sets the stub of IMultiTenancyConfig.get_Resolvers()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIMultiTenancyConfig.ResolversGet">
            <summary>Sets the stub of IMultiTenancyConfig.get_Resolvers()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubINavigationConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.INavigationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubINavigationConfiguration.#ctor">
            <summary>Initializes a new instance of type StubINavigationConfiguration</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubINavigationConfiguration.Abp#Configuration#Startup#INavigationConfiguration#Providers">
            <summary>Sets the stub of INavigationConfiguration.get_Providers()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubINavigationConfiguration.ProvidersGet">
            <summary>Sets the stub of INavigationConfiguration.get_Providers()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubISettingsConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.ISettingsConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubISettingsConfiguration.#ctor">
            <summary>Initializes a new instance of type StubISettingsConfiguration</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubISettingsConfiguration.Abp#Configuration#Startup#ISettingsConfiguration#Providers">
            <summary>Sets the stub of ISettingsConfiguration.get_Providers()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubISettingsConfiguration.ProvidersGet">
            <summary>Sets the stub of ISettingsConfiguration.get_Providers()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubIValidationConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.IValidationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubIValidationConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIValidationConfiguration</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubIValidationConfiguration.Abp#Configuration#Startup#IValidationConfiguration#IgnoredTypes">
            <summary>Sets the stub of IValidationConfiguration.get_IgnoredTypes()</summary>
        </member>
        <member name="F:Abp.Configuration.Startup.Fakes.StubIValidationConfiguration.IgnoredTypesGet">
            <summary>Sets the stub of IValidationConfiguration.get_IgnoredTypes()</summary>
        </member>
        <member name="T:Abp.Configuration.Startup.Fakes.StubValidationConfiguration">
            <summary>Stub type of Abp.Configuration.Startup.ValidationConfiguration</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubValidationConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubValidationConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Configuration.Startup.Fakes.StubValidationConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubValidationConfiguration</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubValidationConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Configuration.Startup.Fakes.StubValidationConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Data.Fakes.ShimActiveTransactionProviderArgs">
            <summary>Shim type of Abp.Data.ActiveTransactionProviderArgs</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.#ctor(Abp.Data.ActiveTransactionProviderArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.Constructor">
            <summary>Sets the shim of ActiveTransactionProviderArgs.ActiveTransactionProviderArgs()</summary>
        </member>
        <member name="P:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.EmptyGet">
            <summary>Sets the shim of ActiveTransactionProviderArgs.get_Empty()</summary>
        </member>
        <member name="P:Abp.Data.Fakes.ShimActiveTransactionProviderArgs.StaticConstructor">
            <summary>Sets the shim of ActiveTransactionProviderArgs.ActiveTransactionProviderArgs()</summary>
        </member>
        <member name="T:Abp.Data.Fakes.StubActiveTransactionProviderArgs">
            <summary>Stub type of Abp.Data.ActiveTransactionProviderArgs</summary>
        </member>
        <member name="M:Abp.Data.Fakes.StubActiveTransactionProviderArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Data.Fakes.StubActiveTransactionProviderArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Data.Fakes.StubActiveTransactionProviderArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Data.Fakes.StubActiveTransactionProviderArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Abp.Data.Fakes.StubActiveTransactionProviderArgs.InitializeStub">
            <summary>Initializes a new instance of type StubActiveTransactionProviderArgs</summary>
        </member>
        <member name="P:Abp.Data.Fakes.StubActiveTransactionProviderArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Data.Fakes.StubActiveTransactionProviderArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Data.Fakes.StubActiveTransactionProviderArgs.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:Abp.Data.Fakes.StubActiveTransactionProviderArgs.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:Abp.Data.Fakes.StubIActiveTransactionProvider">
            <summary>Stub type of Abp.Data.IActiveTransactionProvider</summary>
        </member>
        <member name="M:Abp.Data.Fakes.StubIActiveTransactionProvider.#ctor">
            <summary>Initializes a new instance of type StubIActiveTransactionProvider</summary>
        </member>
        <member name="M:Abp.Data.Fakes.StubIActiveTransactionProvider.Abp#Data#IActiveTransactionProvider#GetActiveConnection(Abp.Data.ActiveTransactionProviderArgs)">
            <summary>Sets the stub of IActiveTransactionProvider.GetActiveConnection(ActiveTransactionProviderArgs args)</summary>
        </member>
        <member name="M:Abp.Data.Fakes.StubIActiveTransactionProvider.Abp#Data#IActiveTransactionProvider#GetActiveTransaction(Abp.Data.ActiveTransactionProviderArgs)">
            <summary>Sets the stub of IActiveTransactionProvider.GetActiveTransaction(ActiveTransactionProviderArgs args)</summary>
        </member>
        <member name="F:Abp.Data.Fakes.StubIActiveTransactionProvider.GetActiveConnectionActiveTransactionProviderArgs">
            <summary>Sets the stub of IActiveTransactionProvider.GetActiveConnection(ActiveTransactionProviderArgs args)</summary>
        </member>
        <member name="F:Abp.Data.Fakes.StubIActiveTransactionProvider.GetActiveTransactionActiveTransactionProviderArgs">
            <summary>Sets the stub of IActiveTransactionProvider.GetActiveTransaction(ActiveTransactionProviderArgs args)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar">
            <summary>Shim type of Abp.Dependency.BasicConventionalRegistrar</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.#ctor(Abp.Dependency.BasicConventionalRegistrar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.AllInstances.RegisterAssemblyIConventionalRegistrationContext">
            <summary>Sets the shim of BasicConventionalRegistrar.RegisterAssembly(IConventionalRegistrationContext context)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.Bind(Abp.Dependency.IConventionalDependencyRegistrar)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.Constructor">
            <summary>Sets the shim of BasicConventionalRegistrar.BasicConventionalRegistrar()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimBasicConventionalRegistrar.RegisterAssemblyIConventionalRegistrationContext">
            <summary>Sets the shim of BasicConventionalRegistrar.RegisterAssembly(IConventionalRegistrationContext context)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig">
            <summary>Shim type of Abp.Dependency.ConventionalRegistrationConfig</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.#ctor(Abp.Dependency.ConventionalRegistrationConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.AllInstances.InstallInstallersGet">
            <summary>Sets the shim of ConventionalRegistrationConfig.get_InstallInstallers()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.AllInstances.InstallInstallersSetBoolean">
            <summary>Sets the shim of ConventionalRegistrationConfig.set_InstallInstallers(Boolean value)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.Bind(Abp.Configuration.IDictionaryBasedConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.Constructor">
            <summary>Sets the shim of ConventionalRegistrationConfig.ConventionalRegistrationConfig()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.InstallInstallersGet">
            <summary>Sets the shim of ConventionalRegistrationConfig.get_InstallInstallers()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimConventionalRegistrationConfig.InstallInstallersSetBoolean">
            <summary>Sets the shim of ConventionalRegistrationConfig.set_InstallInstallers(Boolean value)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimIocManager">
            <summary>Shim type of Abp.Dependency.IocManager</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.#ctor(Abp.Dependency.IocManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AddConventionalRegistrarIConventionalDependencyRegistrar">
            <summary>Sets the shim of IocManager.AddConventionalRegistrar(IConventionalDependencyRegistrar registrar)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimIocManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.AddConventionalRegistrarIConventionalDependencyRegistrar">
            <summary>Sets the shim of IocManager.AddConventionalRegistrar(IConventionalDependencyRegistrar registrar)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.Dispose">
            <summary>Sets the shim of IocManager.Dispose()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.IocContainerGet">
            <summary>Sets the shim of IocManager.get_IocContainer()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.IocContainerSetIWindsorContainer">
            <summary>Sets the shim of IocManager.set_IocContainer(IWindsorContainer value)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IocManager,System.Boolean})">
            <summary>Sets the shim of IocManager.IsRegistered()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.IsRegisteredType">
            <summary>Sets the shim of IocManager.IsRegistered(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.RegisterAssemblyByConventionAssembly">
            <summary>Sets the shim of IocManager.RegisterAssemblyByConvention(Assembly assembly)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.RegisterAssemblyByConventionAssemblyConventionalRegistrationConfig">
            <summary>Sets the shim of IocManager.RegisterAssemblyByConvention(Assembly assembly, ConventionalRegistrationConfig config)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.RegisterOf1DependencyLifeStyle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.IocManager,Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets the shim of IocManager.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.RegisterOf2DependencyLifeStyle``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.IocManager,Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets the shim of IocManager.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.RegisterTypeDependencyLifeStyle">
            <summary>Sets the shim of IocManager.Register(Type type, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.RegisterTypeTypeDependencyLifeStyle">
            <summary>Sets the shim of IocManager.Register(Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ReleaseObject">
            <summary>Sets the shim of IocManager.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IocManager,``0[]})">
            <summary>Sets the shim of IocManager.ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveAllOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IocManager,System.Object,``0[]})">
            <summary>Sets the shim of IocManager.ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveAllType">
            <summary>Sets the shim of IocManager.ResolveAll(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveAllTypeObject">
            <summary>Sets the shim of IocManager.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IocManager,``0})">
            <summary>Sets the shim of IocManager.Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IocManager,System.Object,``0})">
            <summary>Sets the shim of IocManager.Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IocManager,System.Type,``0})">
            <summary>Sets the shim of IocManager.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveType">
            <summary>Sets the shim of IocManager.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances.ResolveTypeObject">
            <summary>Sets the shim of IocManager.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.AllInstances._ctorb__10_0">
            <summary>Sets the shim of IocManager.&lt;.ctor&gt;b__10_0()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.ApplyLifestyleOf1ComponentRegistrationOfM0DependencyLifeStyle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.MicroKernel.Registration.ComponentRegistration{``0},Abp.Dependency.DependencyLifeStyle,Castle.MicroKernel.Registration.ComponentRegistration{``0}})">
            <summary>Sets the shim of IocManager.ApplyLifestyle(ComponentRegistration`1&lt;!!0&gt; registration, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.Bind(Abp.Dependency.IIocManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.Bind(Abp.Dependency.IIocRegistrar)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.Bind(Abp.Dependency.IIocResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.Constructor">
            <summary>Sets the shim of IocManager.IocManager()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.Dispose">
            <summary>Sets the shim of IocManager.Dispose()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.InstanceGet">
            <summary>Sets the shim of IocManager.get_Instance()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.InstanceSetIocManager">
            <summary>Sets the shim of IocManager.set_Instance(IocManager value)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.IocContainerGet">
            <summary>Sets the shim of IocManager.get_IocContainer()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.IocContainerSetIWindsorContainer">
            <summary>Sets the shim of IocManager.set_IocContainer(IWindsorContainer value)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the shim of IocManager.IsRegistered()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.IsRegisteredType">
            <summary>Sets the shim of IocManager.IsRegistered(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.RegisterAssemblyByConventionAssembly">
            <summary>Sets the shim of IocManager.RegisterAssemblyByConvention(Assembly assembly)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.RegisterAssemblyByConventionAssemblyConventionalRegistrationConfig">
            <summary>Sets the shim of IocManager.RegisterAssemblyByConvention(Assembly assembly, ConventionalRegistrationConfig config)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.RegisterOf1DependencyLifeStyle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets the shim of IocManager.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.RegisterOf2DependencyLifeStyle``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets the shim of IocManager.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.RegisterTypeDependencyLifeStyle">
            <summary>Sets the shim of IocManager.Register(Type type, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.RegisterTypeTypeDependencyLifeStyle">
            <summary>Sets the shim of IocManager.Register(Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.ReleaseObject">
            <summary>Sets the shim of IocManager.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.ResolveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>Sets the shim of IocManager.ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.ResolveAllOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0[]})">
            <summary>Sets the shim of IocManager.ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.ResolveAllType">
            <summary>Sets the shim of IocManager.ResolveAll(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.ResolveAllTypeObject">
            <summary>Sets the shim of IocManager.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of IocManager.Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.ResolveOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of IocManager.Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocManager.ResolveOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0})">
            <summary>Sets the shim of IocManager.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.ResolveType">
            <summary>Sets the shim of IocManager.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.ResolveTypeObject">
            <summary>Sets the shim of IocManager.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager.StaticConstructor">
            <summary>Sets the shim of IocManager.IocManager()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocManager._ctorb__10_0">
            <summary>Sets the shim of IocManager.&lt;.ctor&gt;b__10_0()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimIocRegistrarExtensions">
            <summary>Shim type of Abp.Dependency.IocRegistrarExtensions</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.RegisterIfNotIIocRegistrarTypeDependencyLifeStyle">
            <summary>Sets the shim of IocRegistrarExtensions.RegisterIfNot(IIocRegistrar iocRegistrar, Type type, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.RegisterIfNotIIocRegistrarTypeTypeDependencyLifeStyle">
            <summary>Sets the shim of IocRegistrarExtensions.RegisterIfNot(IIocRegistrar iocRegistrar, Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.RegisterIfNotOf1IIocRegistrarDependencyLifeStyle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocRegistrar,Abp.Dependency.DependencyLifeStyle,System.Boolean})">
            <summary>Sets the shim of IocRegistrarExtensions.RegisterIfNot(IIocRegistrar iocRegistrar, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocRegistrarExtensions.RegisterIfNotOf2IIocRegistrarDependencyLifeStyle``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocRegistrar,Abp.Dependency.DependencyLifeStyle,System.Boolean})">
            <summary>Sets the shim of IocRegistrarExtensions.RegisterIfNot(IIocRegistrar iocRegistrar, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimIocResolverExtensions">
            <summary>Shim type of Abp.Dependency.IocResolverExtensions</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocResolverExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocResolverExtensions.CreateScopeIIocResolver">
            <summary>Sets the shim of IocResolverExtensions.CreateScope(IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocResolverExtensions.ResolveAsDisposableIIocResolverType">
            <summary>Sets the shim of IocResolverExtensions.ResolveAsDisposable(IIocResolver iocResolver, Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocResolverExtensions.ResolveAsDisposableIIocResolverTypeObject">
            <summary>Sets the shim of IocResolverExtensions.ResolveAsDisposable(IIocResolver iocResolver, Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.ResolveAsDisposableOf1IIocResolver``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocResolver,Abp.Dependency.IDisposableDependencyObjectWrapper{``0}})">
            <summary>Sets the shim of IocResolverExtensions.ResolveAsDisposable(IIocResolver iocResolver)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.ResolveAsDisposableOf1IIocResolverObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocResolver,System.Object,Abp.Dependency.IDisposableDependencyObjectWrapper{``0}})">
            <summary>Sets the shim of IocResolverExtensions.ResolveAsDisposable(IIocResolver iocResolver, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.ResolveAsDisposableOf1IIocResolverType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocResolver,System.Type,Abp.Dependency.IDisposableDependencyObjectWrapper{``0}})">
            <summary>Sets the shim of IocResolverExtensions.ResolveAsDisposable(IIocResolver iocResolver, Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.ResolveAsDisposableOf1IIocResolverTypeObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocResolver,System.Type,System.Object,Abp.Dependency.IDisposableDependencyObjectWrapper{``0}})">
            <summary>Sets the shim of IocResolverExtensions.ResolveAsDisposable(IIocResolver iocResolver, Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.UsingOf1IIocResolverActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.IIocResolver,System.Action{``0}})">
            <summary>Sets the shim of IocResolverExtensions.Using(IIocResolver iocResolver, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimIocResolverExtensions.UsingOf2IIocResolverFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocResolver,System.Func{``0,``1},``1})">
            <summary>Sets the shim of IocResolverExtensions.Using(IIocResolver iocResolver, Func`2&lt;!!0,!!1&gt; func)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimIocResolverExtensions.UsingScopeIIocResolverActionOfIScopedIocResolver">
            <summary>Sets the shim of IocResolverExtensions.UsingScope(IIocResolver iocResolver, Action`1&lt;IScopedIocResolver&gt; action)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimScopedIocResolver">
            <summary>Shim type of Abp.Dependency.ScopedIocResolver</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.#ctor(Abp.Dependency.ScopedIocResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.Dispose">
            <summary>Sets the shim of ScopedIocResolver.Dispose()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.ScopedIocResolver,System.Boolean})">
            <summary>Sets the shim of ScopedIocResolver.IsRegistered()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.IsRegisteredType">
            <summary>Sets the shim of ScopedIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ReleaseObject">
            <summary>Sets the shim of ScopedIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.ScopedIocResolver,``0[]})">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveAllOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.ScopedIocResolver,System.Object,``0[]})">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveAllType">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveAllTypeObject">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.ScopedIocResolver,``0})">
            <summary>Sets the shim of ScopedIocResolver.Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.ScopedIocResolver,System.Object,``0})">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.ScopedIocResolver,System.Type,``0})">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveType">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.AllInstances.ResolveTypeObject">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.Bind(Abp.Dependency.IIocResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.Bind(Abp.Dependency.IScopedIocResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.ConstructorIIocResolver">
            <summary>Sets the shim of ScopedIocResolver.ScopedIocResolver(IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.Dispose">
            <summary>Sets the shim of ScopedIocResolver.Dispose()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the shim of ScopedIocResolver.IsRegistered()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.IsRegisteredType">
            <summary>Sets the shim of ScopedIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.ReleaseObject">
            <summary>Sets the shim of ScopedIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveAllOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0[]})">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveAllType">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveAllTypeObject">
            <summary>Sets the shim of ScopedIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ScopedIocResolver.Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0})">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveType">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimScopedIocResolver.ResolveTypeObject">
            <summary>Sets the shim of ScopedIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.ShimSingletonDependency`1">
            <summary>Shim type of Abp.Dependency.SingletonDependency`1</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimSingletonDependency`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimSingletonDependency`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.ShimSingletonDependency`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimSingletonDependency`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimSingletonDependency`1.InstanceGet">
            <summary>Sets the shim of SingletonDependency`1.get_Instance()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.ShimSingletonDependency`1.StaticConstructor">
            <summary>Sets the shim of SingletonDependency`1.SingletonDependency`1()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubBasicConventionalRegistrar">
            <summary>Stub type of Abp.Dependency.BasicConventionalRegistrar</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubBasicConventionalRegistrar.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubBasicConventionalRegistrar.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubBasicConventionalRegistrar.InitializeStub">
            <summary>Initializes a new instance of type StubBasicConventionalRegistrar</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubBasicConventionalRegistrar.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubBasicConventionalRegistrar.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubConventionalRegistrationConfig">
            <summary>Stub type of Abp.Dependency.ConventionalRegistrationConfig</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubConventionalRegistrationConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubConventionalRegistrationConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubConventionalRegistrationConfig.InitializeStub">
            <summary>Initializes a new instance of type StubConventionalRegistrationConfig</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubConventionalRegistrationConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubConventionalRegistrationConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIConventionalDependencyRegistrar">
            <summary>Stub type of Abp.Dependency.IConventionalDependencyRegistrar</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIConventionalDependencyRegistrar.#ctor">
            <summary>Initializes a new instance of type StubIConventionalDependencyRegistrar</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIConventionalDependencyRegistrar.Abp#Dependency#IConventionalDependencyRegistrar#RegisterAssembly(Abp.Dependency.IConventionalRegistrationContext)">
            <summary>Sets the stub of IConventionalDependencyRegistrar.RegisterAssembly(IConventionalRegistrationContext context)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIConventionalDependencyRegistrar.RegisterAssemblyIConventionalRegistrationContext">
            <summary>Sets the stub of IConventionalDependencyRegistrar.RegisterAssembly(IConventionalRegistrationContext context)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIConventionalRegistrationContext">
            <summary>Stub type of Abp.Dependency.IConventionalRegistrationContext</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIConventionalRegistrationContext.#ctor">
            <summary>Initializes a new instance of type StubIConventionalRegistrationContext</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIConventionalRegistrationContext.Abp#Dependency#IConventionalRegistrationContext#Assembly">
            <summary>Sets the stub of IConventionalRegistrationContext.get_Assembly()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIConventionalRegistrationContext.AssemblyGet">
            <summary>Sets the stub of IConventionalRegistrationContext.get_Assembly()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIConventionalRegistrationContext.Abp#Dependency#IConventionalRegistrationContext#Config">
            <summary>Sets the stub of IConventionalRegistrationContext.get_Config()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIConventionalRegistrationContext.ConfigGet">
            <summary>Sets the stub of IConventionalRegistrationContext.get_Config()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIConventionalRegistrationContext.Abp#Dependency#IConventionalRegistrationContext#IocManager">
            <summary>Sets the stub of IConventionalRegistrationContext.get_IocManager()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIConventionalRegistrationContext.IocManagerGet">
            <summary>Sets the stub of IConventionalRegistrationContext.get_IocManager()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper">
            <summary>Stub type of Abp.Dependency.IDisposableDependencyObjectWrapper</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper.#ctor">
            <summary>Initializes a new instance of type StubIDisposableDependencyObjectWrapper</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper.Abp#Dependency#IDisposableDependencyObjectWrapper{System#Object}#Object">
            <summary>Sets the stub of IDisposableDependencyObjectWrapper`1.get_Object()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper.ObjectGet">
            <summary>Sets the stub of IDisposableDependencyObjectWrapper`1.get_Object()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper`1">
            <summary>Stub type of Abp.Dependency.IDisposableDependencyObjectWrapper`1</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper`1.#ctor">
            <summary>Initializes a new instance of type StubIDisposableDependencyObjectWrapper</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper`1.Abp#Dependency#IDisposableDependencyObjectWrapper{T}#Object">
            <summary>Sets the stub of IDisposableDependencyObjectWrapper`1.get_Object()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper`1.ObjectGet">
            <summary>Sets the stub of IDisposableDependencyObjectWrapper`1.get_Object()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIDisposableDependencyObjectWrapper`1.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIIocManager">
            <summary>Stub type of Abp.Dependency.IIocManager</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.#ctor">
            <summary>Initializes a new instance of type StubIIocManager</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocManager#IsRegistered``1">
            <summary>Sets the stub of IIocManager.IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocManager#IsRegistered(System.Type)">
            <summary>Sets the stub of IIocManager.IsRegistered(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#AddConventionalRegistrar(Abp.Dependency.IConventionalDependencyRegistrar)">
            <summary>Sets the stub of IIocRegistrar.AddConventionalRegistrar(IConventionalDependencyRegistrar registrar)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#IsRegistered``1">
            <summary>Sets the stub of IIocRegistrar.IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#IsRegistered(System.Type)">
            <summary>Sets the stub of IIocRegistrar.IsRegistered(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#Register``1(Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#Register``2(Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#Register(System.Type,Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#Register(System.Type,System.Type,Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#RegisterAssemblyByConvention(System.Reflection.Assembly)">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocRegistrar#RegisterAssemblyByConvention(System.Reflection.Assembly,Abp.Dependency.ConventionalRegistrationConfig)">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly, ConventionalRegistrationConfig config)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#IsRegistered``1">
            <summary>Sets the stub of IIocResolver.IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#IsRegistered(System.Type)">
            <summary>Sets the stub of IIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#Release(System.Object)">
            <summary>Sets the stub of IIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#Resolve``1">
            <summary>Sets the stub of IIocResolver.Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#Resolve``1(System.Object)">
            <summary>Sets the stub of IIocResolver.Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#Resolve``1(System.Type)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#Resolve(System.Type)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#Resolve(System.Type,System.Object)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#ResolveAll``1(System.Object)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#ResolveAll(System.Type)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#ResolveAll(System.Type,System.Object)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocResolver#ResolveAll``1">
            <summary>Sets the stub of IIocResolver.ResolveAll()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.AddConventionalRegistrarIConventionalDependencyRegistrar">
            <summary>Sets the stub of IIocRegistrar.AddConventionalRegistrar(IConventionalDependencyRegistrar registrar)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIIocManager.Abp#Dependency#IIocManager#IocContainer">
            <summary>Sets the stub of IIocManager.get_IocContainer()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.IocContainerGet">
            <summary>Sets the stub of IIocManager.get_IocContainer()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.IsRegisteredOf101``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.IsRegisteredOf102``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of IsRegistered()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.IsRegisteredType">
            <summary>Sets the stub of IIocManager.IsRegistered(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.IsRegisteredType01">
            <summary>Sets the stub of IIocRegistrar.IsRegistered(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.IsRegisteredType02">
            <summary>Sets the stub of IIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.RegisterAssemblyByConventionAssembly">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.RegisterAssemblyByConventionAssemblyConventionalRegistrationConfig">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly, ConventionalRegistrationConfig config)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.RegisterOf1DependencyLifeStyle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets stubs of Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.RegisterOf2DependencyLifeStyle``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets stubs of Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.RegisterTypeDependencyLifeStyle">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.RegisterTypeTypeDependencyLifeStyle">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.ReleaseObject">
            <summary>Sets the stub of IIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.ResolveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>Sets stubs of ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.ResolveAllOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0[]})">
            <summary>Sets stubs of ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.ResolveAllType">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.ResolveAllTypeObject">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.ResolveOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets stubs of Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.ResolveOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0})">
            <summary>Sets stubs of Resolve(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.ResolveType">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManager.ResolveTypeObject">
            <summary>Sets the stub of IIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManager.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIIocManagerAccessor">
            <summary>Stub type of Abp.Dependency.IIocManagerAccessor</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocManagerAccessor.#ctor">
            <summary>Initializes a new instance of type StubIIocManagerAccessor</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIIocManagerAccessor.Abp#Dependency#IIocManagerAccessor#IocManager">
            <summary>Sets the stub of IIocManagerAccessor.get_IocManager()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocManagerAccessor.IocManagerGet">
            <summary>Sets the stub of IIocManagerAccessor.get_IocManager()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIIocRegistrar">
            <summary>Stub type of Abp.Dependency.IIocRegistrar</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.#ctor">
            <summary>Initializes a new instance of type StubIIocRegistrar</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#AddConventionalRegistrar(Abp.Dependency.IConventionalDependencyRegistrar)">
            <summary>Sets the stub of IIocRegistrar.AddConventionalRegistrar(IConventionalDependencyRegistrar registrar)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#IsRegistered``1">
            <summary>Sets the stub of IIocRegistrar.IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#IsRegistered(System.Type)">
            <summary>Sets the stub of IIocRegistrar.IsRegistered(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#Register``1(Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#Register``2(Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#Register(System.Type,Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#Register(System.Type,System.Type,Abp.Dependency.DependencyLifeStyle)">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#RegisterAssemblyByConvention(System.Reflection.Assembly)">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.Abp#Dependency#IIocRegistrar#RegisterAssemblyByConvention(System.Reflection.Assembly,Abp.Dependency.ConventionalRegistrationConfig)">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly, ConventionalRegistrationConfig config)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocRegistrar.AddConventionalRegistrarIConventionalDependencyRegistrar">
            <summary>Sets the stub of IIocRegistrar.AddConventionalRegistrar(IConventionalDependencyRegistrar registrar)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of IsRegistered()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocRegistrar.IsRegisteredType">
            <summary>Sets the stub of IIocRegistrar.IsRegistered(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocRegistrar.RegisterAssemblyByConventionAssembly">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocRegistrar.RegisterAssemblyByConventionAssemblyConventionalRegistrationConfig">
            <summary>Sets the stub of IIocRegistrar.RegisterAssemblyByConvention(Assembly assembly, ConventionalRegistrationConfig config)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.RegisterOf1DependencyLifeStyle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets stubs of Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocRegistrar.RegisterOf2DependencyLifeStyle``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Dependency.DependencyLifeStyle})">
            <summary>Sets stubs of Register(DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocRegistrar.RegisterTypeDependencyLifeStyle">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocRegistrar.RegisterTypeTypeDependencyLifeStyle">
            <summary>Sets the stub of IIocRegistrar.Register(Type type, Type impl, DependencyLifeStyle lifeStyle)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIIocResolver">
            <summary>Stub type of Abp.Dependency.IIocResolver</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.#ctor">
            <summary>Initializes a new instance of type StubIIocResolver</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#IsRegistered``1">
            <summary>Sets the stub of IIocResolver.IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#IsRegistered(System.Type)">
            <summary>Sets the stub of IIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#Release(System.Object)">
            <summary>Sets the stub of IIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#Resolve``1">
            <summary>Sets the stub of IIocResolver.Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#Resolve``1(System.Object)">
            <summary>Sets the stub of IIocResolver.Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#Resolve``1(System.Type)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#Resolve(System.Type)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#Resolve(System.Type,System.Object)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#ResolveAll``1">
            <summary>Sets the stub of IIocResolver.ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#ResolveAll``1(System.Object)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#ResolveAll(System.Type)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.Abp#Dependency#IIocResolver#ResolveAll(System.Type,System.Object)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of IsRegistered()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocResolver.IsRegisteredType">
            <summary>Sets the stub of IIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocResolver.ReleaseObject">
            <summary>Sets the stub of IIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.ResolveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>Sets stubs of ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.ResolveAllOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0[]})">
            <summary>Sets stubs of ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocResolver.ResolveAllType">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocResolver.ResolveAllTypeObject">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.ResolveOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets stubs of Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIIocResolver.ResolveOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0})">
            <summary>Sets stubs of Resolve(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocResolver.ResolveType">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIIocResolver.ResolveTypeObject">
            <summary>Sets the stub of IIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIScopedIocResolver">
            <summary>Stub type of Abp.Dependency.IScopedIocResolver</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.#ctor">
            <summary>Initializes a new instance of type StubIScopedIocResolver</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#IsRegistered``1">
            <summary>Sets the stub of IIocResolver.IsRegistered()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#IsRegistered(System.Type)">
            <summary>Sets the stub of IIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#Release(System.Object)">
            <summary>Sets the stub of IIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#Resolve``1">
            <summary>Sets the stub of IIocResolver.Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#Resolve``1(System.Object)">
            <summary>Sets the stub of IIocResolver.Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#Resolve``1(System.Type)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#Resolve(System.Type)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#Resolve(System.Type,System.Object)">
            <summary>Sets the stub of IIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#ResolveAll``1">
            <summary>Sets the stub of IIocResolver.ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#ResolveAll(System.Type,System.Object)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#ResolveAll``1(System.Object)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.Abp#Dependency#IIocResolver#ResolveAll(System.Type)">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIScopedIocResolver.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.IsRegisteredOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of IsRegistered()</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIScopedIocResolver.IsRegisteredType">
            <summary>Sets the stub of IIocResolver.IsRegistered(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIScopedIocResolver.ReleaseObject">
            <summary>Sets the stub of IIocResolver.Release(Object obj)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[]})">
            <summary>Sets stubs of ResolveAll()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveAllOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0[]})">
            <summary>Sets stubs of ResolveAll(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveAllType">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveAllTypeObject">
            <summary>Sets the stub of IIocResolver.ResolveAll(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Resolve()</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets stubs of Resolve(Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0})">
            <summary>Sets stubs of Resolve(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveType">
            <summary>Sets the stub of IIocResolver.Resolve(Type type)</summary>
        </member>
        <member name="F:Abp.Dependency.Fakes.StubIScopedIocResolver.ResolveTypeObject">
            <summary>Sets the stub of IIocResolver.Resolve(Type type, Object argumentsAsAnonymousType)</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIScopedIocResolver.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubISingletonDependency">
            <summary>Stub type of Abp.Dependency.ISingletonDependency</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubISingletonDependency.#ctor">
            <summary>Initializes a new instance of type StubISingletonDependency</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubITransientDependency">
            <summary>Stub type of Abp.Dependency.ITransientDependency</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubITransientDependency.#ctor">
            <summary>Initializes a new instance of type StubITransientDependency</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubIocManager">
            <summary>Stub type of Abp.Dependency.IocManager</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIocManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIocManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubIocManager.InitializeStub">
            <summary>Initializes a new instance of type StubIocManager</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIocManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubIocManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Dependency.Fakes.StubScopedIocResolver">
            <summary>Stub type of Abp.Dependency.ScopedIocResolver</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubScopedIocResolver.#ctor(Abp.Dependency.IIocResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubScopedIocResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Dependency.Fakes.StubScopedIocResolver.InitializeStub">
            <summary>Initializes a new instance of type StubScopedIocResolver</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubScopedIocResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Dependency.Fakes.StubScopedIocResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot">
            <summary>Shim type of Abp.Domain.Entities.Auditing.AuditedAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.#ctor(Abp.Domain.Entities.Auditing.AuditedAggregateRoot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.IAggregateRoot{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot.Constructor">
            <summary>Sets the shim of AuditedAggregateRoot.AuditedAggregateRoot()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1">
            <summary>Shim type of Abp.Domain.Entities.Auditing.AuditedAggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.#ctor(Abp.Domain.Entities.Auditing.AuditedAggregateRoot{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.AllInstances.LastModificationTimeGet">
            <summary>Sets the shim of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.AllInstances.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the shim of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.AllInstances.LastModifierUserIdGet">
            <summary>Sets the shim of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.AllInstances.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IAggregateRoot{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.Constructor">
            <summary>Sets the shim of AuditedAggregateRoot`1.AuditedAggregateRoot`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.LastModificationTimeGet">
            <summary>Sets the shim of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the shim of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.LastModifierUserIdGet">
            <summary>Sets the shim of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2">
            <summary>Shim type of Abp.Domain.Entities.Auditing.AuditedAggregateRoot`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.#ctor(Abp.Domain.Entities.Auditing.AuditedAggregateRoot{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.AllInstances.CreatorUserGet">
            <summary>Sets the shim of AuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.AllInstances.CreatorUserSetT1">
            <summary>Sets the shim of AuditedAggregateRoot`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.AllInstances.LastModifierUserGet">
            <summary>Sets the shim of AuditedAggregateRoot`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.AllInstances.LastModifierUserSetT1">
            <summary>Sets the shim of AuditedAggregateRoot`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IAggregateRoot{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.Constructor">
            <summary>Sets the shim of AuditedAggregateRoot`2.AuditedAggregateRoot`2()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.CreatorUserGet">
            <summary>Sets the shim of AuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.CreatorUserSetT1">
            <summary>Sets the shim of AuditedAggregateRoot`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.LastModifierUserGet">
            <summary>Sets the shim of AuditedAggregateRoot`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedAggregateRoot`2.LastModifierUserSetT1">
            <summary>Sets the shim of AuditedAggregateRoot`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity">
            <summary>Shim type of Abp.Domain.Entities.Auditing.AuditedEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.#ctor(Abp.Domain.Entities.Auditing.AuditedEntity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Bind(Abp.Domain.Entities.IEntity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity.Constructor">
            <summary>Sets the shim of AuditedEntity.AuditedEntity()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1">
            <summary>Shim type of Abp.Domain.Entities.Auditing.AuditedEntity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.#ctor(Abp.Domain.Entities.Auditing.AuditedEntity{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.AllInstances.LastModificationTimeGet">
            <summary>Sets the shim of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.AllInstances.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the shim of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.AllInstances.LastModifierUserIdGet">
            <summary>Sets the shim of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.AllInstances.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.Constructor">
            <summary>Sets the shim of AuditedEntity`1.AuditedEntity`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.LastModificationTimeGet">
            <summary>Sets the shim of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the shim of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.LastModifierUserIdGet">
            <summary>Sets the shim of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the shim of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2">
            <summary>Shim type of Abp.Domain.Entities.Auditing.AuditedEntity`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.#ctor(Abp.Domain.Entities.Auditing.AuditedEntity{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.AllInstances.CreatorUserGet">
            <summary>Sets the shim of AuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.AllInstances.CreatorUserSetT1">
            <summary>Sets the shim of AuditedEntity`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.AllInstances.LastModifierUserGet">
            <summary>Sets the shim of AuditedEntity`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.AllInstances.LastModifierUserSetT1">
            <summary>Sets the shim of AuditedEntity`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.Constructor">
            <summary>Sets the shim of AuditedEntity`2.AuditedEntity`2()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.CreatorUserGet">
            <summary>Sets the shim of AuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.CreatorUserSetT1">
            <summary>Sets the shim of AuditedEntity`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.LastModifierUserGet">
            <summary>Sets the shim of AuditedEntity`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimAuditedEntity`2.LastModifierUserSetT1">
            <summary>Sets the shim of AuditedEntity`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot">
            <summary>Shim type of Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.#ctor(Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.Bind(Abp.Domain.Entities.IAggregateRoot{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot.Constructor">
            <summary>Sets the shim of CreationAuditedAggregateRoot.CreationAuditedAggregateRoot()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1">
            <summary>Shim type of Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.#ctor(Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.AllInstances.CreationTimeGet">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.AllInstances.CreatorUserIdGet">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.AllInstances.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IAggregateRoot{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.Constructor">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.CreationAuditedAggregateRoot`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.CreationTimeGet">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.CreationTimeSetDateTime">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.CreatorUserIdGet">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2">
            <summary>Shim type of Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.#ctor(Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.AllInstances.CreatorUserGet">
            <summary>Sets the shim of CreationAuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.AllInstances.CreatorUserSetT1">
            <summary>Sets the shim of CreationAuditedAggregateRoot`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IAggregateRoot{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.Constructor">
            <summary>Sets the shim of CreationAuditedAggregateRoot`2.CreationAuditedAggregateRoot`2()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.CreatorUserGet">
            <summary>Sets the shim of CreationAuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedAggregateRoot`2.CreatorUserSetT1">
            <summary>Sets the shim of CreationAuditedAggregateRoot`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity">
            <summary>Shim type of Abp.Domain.Entities.Auditing.CreationAuditedEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.#ctor(Abp.Domain.Entities.Auditing.CreationAuditedEntity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.Bind(Abp.Domain.Entities.IEntity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity.Constructor">
            <summary>Sets the shim of CreationAuditedEntity.CreationAuditedEntity()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1">
            <summary>Shim type of Abp.Domain.Entities.Auditing.CreationAuditedEntity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.#ctor(Abp.Domain.Entities.Auditing.CreationAuditedEntity{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.AllInstances.CreationTimeGet">
            <summary>Sets the shim of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.AllInstances.CreatorUserIdGet">
            <summary>Sets the shim of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.AllInstances.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.Constructor">
            <summary>Sets the shim of CreationAuditedEntity`1.CreationAuditedEntity`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.CreationTimeGet">
            <summary>Sets the shim of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.CreationTimeSetDateTime">
            <summary>Sets the shim of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.CreatorUserIdGet">
            <summary>Sets the shim of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the shim of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2">
            <summary>Shim type of Abp.Domain.Entities.Auditing.CreationAuditedEntity`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.#ctor(Abp.Domain.Entities.Auditing.CreationAuditedEntity{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.AllInstances.CreatorUserGet">
            <summary>Sets the shim of CreationAuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.AllInstances.CreatorUserSetT1">
            <summary>Sets the shim of CreationAuditedEntity`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.Constructor">
            <summary>Sets the shim of CreationAuditedEntity`2.CreationAuditedEntity`2()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.CreatorUserGet">
            <summary>Sets the shim of CreationAuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimCreationAuditedEntity`2.CreatorUserSetT1">
            <summary>Sets the shim of CreationAuditedEntity`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimEntityAuditingHelper">
            <summary>Shim type of Abp.Domain.Entities.Auditing.EntityAuditingHelper</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimEntityAuditingHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimEntityAuditingHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimEntityAuditingHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimEntityAuditingHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimEntityAuditingHelper.SetCreationAuditPropertiesIMultiTenancyConfigObjectNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of EntityAuditingHelper.SetCreationAuditProperties(IMultiTenancyConfig multiTenancyConfig, Object entityAsObj, Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimEntityAuditingHelper.SetModificationAuditPropertiesIMultiTenancyConfigObjectNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of EntityAuditingHelper.SetModificationAuditProperties(IMultiTenancyConfig multiTenancyConfig, Object entityAsObj, Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot">
            <summary>Shim type of Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.#ctor(Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.IAggregateRoot{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot.Constructor">
            <summary>Sets the shim of FullAuditedAggregateRoot.FullAuditedAggregateRoot()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1">
            <summary>Shim type of Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.#ctor(Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.AllInstances.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.AllInstances.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.AllInstances.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.AllInstances.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.AllInstances.IsDeletedGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.AllInstances.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IAggregateRoot{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.Constructor">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.FullAuditedAggregateRoot`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.IsDeletedGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`1.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedAggregateRoot`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2">
            <summary>Shim type of Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.#ctor(Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.DeleterUserGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.DeleterUserSetT1">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_DeleterUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.IsDeletedGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.AllInstances.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IAggregateRoot{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IFullAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.Constructor">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.FullAuditedAggregateRoot`2()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.DeleterUserGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.DeleterUserSetT1">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_DeleterUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.IsDeletedGet">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedAggregateRoot`2.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedAggregateRoot`2.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity">
            <summary>Shim type of Abp.Domain.Entities.Auditing.FullAuditedEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.#ctor(Abp.Domain.Entities.Auditing.FullAuditedEntity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.IEntity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity.Constructor">
            <summary>Sets the shim of FullAuditedEntity.FullAuditedEntity()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1">
            <summary>Shim type of Abp.Domain.Entities.Auditing.FullAuditedEntity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.#ctor(Abp.Domain.Entities.Auditing.FullAuditedEntity{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.AllInstances.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedEntity`1.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.AllInstances.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedEntity`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.AllInstances.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedEntity`1.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.AllInstances.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedEntity`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.AllInstances.IsDeletedGet">
            <summary>Sets the shim of FullAuditedEntity`1.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.AllInstances.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedEntity`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.Constructor">
            <summary>Sets the shim of FullAuditedEntity`1.FullAuditedEntity`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedEntity`1.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedEntity`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedEntity`1.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedEntity`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.IsDeletedGet">
            <summary>Sets the shim of FullAuditedEntity`1.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`1.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedEntity`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2">
            <summary>Shim type of Abp.Domain.Entities.Auditing.FullAuditedEntity`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.#ctor(Abp.Domain.Entities.Auditing.FullAuditedEntity{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.DeleterUserGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedEntity`2.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.DeleterUserSetT1">
            <summary>Sets the shim of FullAuditedEntity`2.set_DeleterUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedEntity`2.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.IsDeletedGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.AllInstances.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedEntity`2.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.ISoftDelete)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IFullAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IHasDeletionTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IHasModificationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.ICreationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IDeletionAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IFullAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Bind(Abp.Domain.Entities.Auditing.IModificationAudited{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.Constructor">
            <summary>Sets the shim of FullAuditedEntity`2.FullAuditedEntity`2()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.DeleterUserGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.DeleterUserIdGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_DeleterUserId()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the shim of FullAuditedEntity`2.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.DeleterUserSetT1">
            <summary>Sets the shim of FullAuditedEntity`2.set_DeleterUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.DeletionTimeGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_DeletionTime()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the shim of FullAuditedEntity`2.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.IsDeletedGet">
            <summary>Sets the shim of FullAuditedEntity`2.get_IsDeleted()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.ShimFullAuditedEntity`2.IsDeletedSetBoolean">
            <summary>Sets the shim of FullAuditedEntity`2.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot">
            <summary>Stub type of Abp.Domain.Entities.Auditing.AuditedAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.LastModificationTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.LastModificationTimeGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.LastModifierUserId">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.AuditedAggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.LastModificationTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.LastModificationTimeGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.LastModifierUserId">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2">
            <summary>Stub type of Abp.Domain.Entities.Auditing.AuditedAggregateRoot`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.AttachBackingFieldToLastModifierUser">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.LastModifierUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubAuditedAggregateRoot.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreatorUser">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreatorUserGet">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.CreatorUserSetT1">
            <summary>Sets the stub of AuditedAggregateRoot`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModificationTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModificationTimeGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModifierUser">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_LastModifierUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModifierUserGet">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModifierUserId">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.LastModifierUserSetT1">
            <summary>Sets the stub of AuditedAggregateRoot`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedAggregateRoot`2.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity">
            <summary>Stub type of Abp.Domain.Entities.Auditing.AuditedEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubAuditedEntity.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubAuditedEntity.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.LastModificationTime">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.LastModificationTimeGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.LastModifierUserId">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.AuditedEntity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubAuditedEntity.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubAuditedEntity.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.LastModificationTime">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.LastModificationTimeGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.LastModifierUserId">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2">
            <summary>Stub type of Abp.Domain.Entities.Auditing.AuditedEntity`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubAuditedEntity.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubAuditedEntity.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.AttachBackingFieldToLastModifierUser">
            <summary>Attaches delegates to emulate StubAuditedEntity.LastModifierUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubAuditedEntity.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreatorUser">
            <summary>Sets the stub of AuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreatorUserGet">
            <summary>Sets the stub of AuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.CreatorUserSetT1">
            <summary>Sets the stub of AuditedEntity`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.InitializeStub">
            <summary>Initializes a new instance of type StubAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModificationTime">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModificationTimeGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModifierUser">
            <summary>Sets the stub of AuditedEntity`2.get_LastModifierUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModifierUserGet">
            <summary>Sets the stub of AuditedEntity`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModifierUserId">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.LastModifierUserSetT1">
            <summary>Sets the stub of AuditedEntity`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubAuditedEntity`2.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot">
            <summary>Stub type of Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2">
            <summary>Stub type of Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubCreationAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreatorUser">
            <summary>Sets the stub of CreationAuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreatorUserGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.CreatorUserSetT1">
            <summary>Sets the stub of CreationAuditedAggregateRoot`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedAggregateRoot`2.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity">
            <summary>Stub type of Abp.Domain.Entities.Auditing.CreationAuditedEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.CreationAuditedEntity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2">
            <summary>Stub type of Abp.Domain.Entities.Auditing.CreationAuditedEntity`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubCreationAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreatorUser">
            <summary>Sets the stub of CreationAuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreatorUserGet">
            <summary>Sets the stub of CreationAuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.CreatorUserSetT1">
            <summary>Sets the stub of CreationAuditedEntity`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.InitializeStub">
            <summary>Initializes a new instance of type StubCreationAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubCreationAuditedEntity`2.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot">
            <summary>Stub type of Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DeleterUserId">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DeleterUserIdGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DeletionTime">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DeletionTimeGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.IsDeleted">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.IsDeletedGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.IsDeletedSetBoolean">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.LastModificationTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.LastModificationTimeGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.LastModifierUserId">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DeleterUserId">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DeleterUserIdGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DeletionTime">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DeletionTimeGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.IsDeleted">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.IsDeletedGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.IsDeletedSetBoolean">
            <summary>Sets the stub of FullAuditedAggregateRoot`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.LastModificationTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.LastModificationTimeGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.LastModifierUserId">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2">
            <summary>Stub type of Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToDeleterUser">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.DeleterUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToLastModifierUser">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.LastModifierUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubFullAuditedAggregateRoot.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreationTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreatorUser">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreatorUserGet">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreatorUserId">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedAggregateRoot`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.CreatorUserSetT1">
            <summary>Sets the stub of AuditedAggregateRoot`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeleterUser">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_DeleterUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeleterUserGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeleterUserId">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeleterUserIdGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeleterUserSetT1">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.set_DeleterUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeletionTime">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeletionTimeGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.IsDeleted">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.IsDeletedGet">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.IsDeletedSetBoolean">
            <summary>Sets the stub of FullAuditedAggregateRoot`2.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModificationTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModificationTimeGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModifierUser">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_LastModifierUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModifierUserGet">
            <summary>Sets the stub of AuditedAggregateRoot`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModifierUserId">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedAggregateRoot`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedAggregateRoot`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.LastModifierUserSetT1">
            <summary>Sets the stub of AuditedAggregateRoot`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedAggregateRoot`2.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity">
            <summary>Stub type of Abp.Domain.Entities.Auditing.FullAuditedEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.DeleterUserId">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.DeleterUserIdGet">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of FullAuditedEntity`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.DeletionTime">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.DeletionTimeGet">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of FullAuditedEntity`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.IsDeleted">
            <summary>Sets the stub of FullAuditedEntity`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.IsDeletedGet">
            <summary>Sets the stub of FullAuditedEntity`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.IsDeletedSetBoolean">
            <summary>Sets the stub of FullAuditedEntity`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.LastModificationTime">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.LastModificationTimeGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.LastModifierUserId">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.FullAuditedEntity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.DeleterUserId">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.DeleterUserIdGet">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of FullAuditedEntity`1.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.DeletionTime">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.DeletionTimeGet">
            <summary>Sets the stub of FullAuditedEntity`1.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of FullAuditedEntity`1.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.IsDeleted">
            <summary>Sets the stub of FullAuditedEntity`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.IsDeletedGet">
            <summary>Sets the stub of FullAuditedEntity`1.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.IsDeletedSetBoolean">
            <summary>Sets the stub of FullAuditedEntity`1.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.LastModificationTime">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.LastModificationTimeGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.LastModifierUserId">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2">
            <summary>Stub type of Abp.Domain.Entities.Auditing.FullAuditedEntity`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToDeleterUser">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.DeleterUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToLastModifierUser">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.LastModifierUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubFullAuditedEntity.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreatorUser">
            <summary>Sets the stub of AuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreatorUserGet">
            <summary>Sets the stub of AuditedEntity`2.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.CreatorUserSetT1">
            <summary>Sets the stub of AuditedEntity`2.set_CreatorUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeleterUser">
            <summary>Sets the stub of FullAuditedEntity`2.get_DeleterUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeleterUserGet">
            <summary>Sets the stub of FullAuditedEntity`2.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeleterUserId">
            <summary>Sets the stub of FullAuditedEntity`2.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeleterUserIdGet">
            <summary>Sets the stub of FullAuditedEntity`2.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of FullAuditedEntity`2.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeleterUserSetT1">
            <summary>Sets the stub of FullAuditedEntity`2.set_DeleterUser(!1 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeletionTime">
            <summary>Sets the stub of FullAuditedEntity`2.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeletionTimeGet">
            <summary>Sets the stub of FullAuditedEntity`2.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of FullAuditedEntity`2.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.InitializeStub">
            <summary>Initializes a new instance of type StubFullAuditedEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.IsDeleted">
            <summary>Sets the stub of FullAuditedEntity`2.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.IsDeletedGet">
            <summary>Sets the stub of FullAuditedEntity`2.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.IsDeletedSetBoolean">
            <summary>Sets the stub of FullAuditedEntity`2.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModificationTime">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModificationTimeGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of AuditedEntity`1.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModifierUser">
            <summary>Sets the stub of AuditedEntity`2.get_LastModifierUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModifierUserGet">
            <summary>Sets the stub of AuditedEntity`2.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModifierUserId">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModifierUserIdGet">
            <summary>Sets the stub of AuditedEntity`1.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of AuditedEntity`1.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.LastModifierUserSetT1">
            <summary>Sets the stub of AuditedEntity`2.set_LastModifierUser(!1 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubFullAuditedEntity`2.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIAudited">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.#ctor">
            <summary>Initializes a new instance of type StubIAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubIAudited.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubIAudited.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubIAudited.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubIAudited.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.Abp#Domain#Entities#Auditing#IHasCreationTime#CreationTime">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.CreationTimeGet">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.CreationTimeSetDateTime">
            <summary>Sets the stub of IHasCreationTime.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.Abp#Domain#Entities#Auditing#ICreationAudited#CreatorUserId">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.CreatorUserIdGet">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of ICreationAudited.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.Abp#Domain#Entities#Auditing#IHasModificationTime#LastModificationTime">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.LastModificationTimeGet">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasModificationTime.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.Abp#Domain#Entities#Auditing#IModificationAudited#LastModifierUserId">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.LastModifierUserIdGet">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of IModificationAudited.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IAudited`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.#ctor">
            <summary>Initializes a new instance of type StubIAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubIAudited.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubIAudited.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubIAudited.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubIAudited.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.AttachBackingFieldToLastModifierUser">
            <summary>Attaches delegates to emulate StubIAudited.LastModifierUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubIAudited.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.Abp#Domain#Entities#Auditing#IHasCreationTime#CreationTime">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.CreationTimeGet">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.CreationTimeSetDateTime">
            <summary>Sets the stub of IHasCreationTime.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.Abp#Domain#Entities#Auditing#ICreationAudited{TUser}#CreatorUser">
            <summary>Sets the stub of ICreationAudited`1.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.CreatorUserGet">
            <summary>Sets the stub of ICreationAudited`1.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.Abp#Domain#Entities#Auditing#ICreationAudited#CreatorUserId">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.CreatorUserIdGet">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of ICreationAudited.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.CreatorUserSetT0">
            <summary>Sets the stub of ICreationAudited`1.set_CreatorUser(!0 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.Abp#Domain#Entities#Auditing#IHasModificationTime#LastModificationTime">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.LastModificationTimeGet">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasModificationTime.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.Abp#Domain#Entities#Auditing#IModificationAudited{TUser}#LastModifierUser">
            <summary>Sets the stub of IModificationAudited`1.get_LastModifierUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.LastModifierUserGet">
            <summary>Sets the stub of IModificationAudited`1.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.Abp#Domain#Entities#Auditing#IModificationAudited#LastModifierUserId">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.LastModifierUserIdGet">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of IModificationAudited.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIAudited`1.LastModifierUserSetT0">
            <summary>Sets the stub of IModificationAudited`1.set_LastModifierUser(!0 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited">
            <summary>Stub type of Abp.Domain.Entities.Auditing.ICreationAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.#ctor">
            <summary>Initializes a new instance of type StubICreationAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubICreationAudited.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubICreationAudited.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.Abp#Domain#Entities#Auditing#IHasCreationTime#CreationTime">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.CreationTimeGet">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.CreationTimeSetDateTime">
            <summary>Sets the stub of IHasCreationTime.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.Abp#Domain#Entities#Auditing#ICreationAudited#CreatorUserId">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.CreatorUserIdGet">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of ICreationAudited.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.ICreationAudited`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.#ctor">
            <summary>Initializes a new instance of type StubICreationAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubICreationAudited.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubICreationAudited.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubICreationAudited.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.Abp#Domain#Entities#Auditing#IHasCreationTime#CreationTime">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.CreationTimeGet">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.CreationTimeSetDateTime">
            <summary>Sets the stub of IHasCreationTime.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.Abp#Domain#Entities#Auditing#ICreationAudited{TUser}#CreatorUser">
            <summary>Sets the stub of ICreationAudited`1.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.CreatorUserGet">
            <summary>Sets the stub of ICreationAudited`1.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.Abp#Domain#Entities#Auditing#ICreationAudited#CreatorUserId">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.CreatorUserIdGet">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of ICreationAudited.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubICreationAudited`1.CreatorUserSetT0">
            <summary>Sets the stub of ICreationAudited`1.set_CreatorUser(!0 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IDeletionAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.#ctor">
            <summary>Initializes a new instance of type StubIDeletionAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubIDeletionAudited.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubIDeletionAudited.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubIDeletionAudited.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.Abp#Domain#Entities#Auditing#IDeletionAudited#DeleterUserId">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.DeleterUserIdGet">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of IDeletionAudited.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.Abp#Domain#Entities#Auditing#IHasDeletionTime#DeletionTime">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.DeletionTimeGet">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasDeletionTime.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.Abp#Domain#Entities#ISoftDelete#IsDeleted">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.IsDeletedGet">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited.IsDeletedSetBoolean">
            <summary>Sets the stub of ISoftDelete.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IDeletionAudited`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.#ctor">
            <summary>Initializes a new instance of type StubIDeletionAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.AttachBackingFieldToDeleterUser">
            <summary>Attaches delegates to emulate StubIDeletionAudited.DeleterUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubIDeletionAudited.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubIDeletionAudited.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubIDeletionAudited.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.Abp#Domain#Entities#Auditing#IDeletionAudited{TUser}#DeleterUser">
            <summary>Sets the stub of IDeletionAudited`1.get_DeleterUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.DeleterUserGet">
            <summary>Sets the stub of IDeletionAudited`1.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.Abp#Domain#Entities#Auditing#IDeletionAudited#DeleterUserId">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.DeleterUserIdGet">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of IDeletionAudited.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.DeleterUserSetT0">
            <summary>Sets the stub of IDeletionAudited`1.set_DeleterUser(!0 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.Abp#Domain#Entities#Auditing#IHasDeletionTime#DeletionTime">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.DeletionTimeGet">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasDeletionTime.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.Abp#Domain#Entities#ISoftDelete#IsDeleted">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.IsDeletedGet">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIDeletionAudited`1.IsDeletedSetBoolean">
            <summary>Sets the stub of ISoftDelete.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IFullAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.#ctor">
            <summary>Initializes a new instance of type StubIFullAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubIFullAudited.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubIFullAudited.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubIFullAudited.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubIFullAudited.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubIFullAudited.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubIFullAudited.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubIFullAudited.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.Abp#Domain#Entities#Auditing#IHasCreationTime#CreationTime">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.CreationTimeGet">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.CreationTimeSetDateTime">
            <summary>Sets the stub of IHasCreationTime.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.Abp#Domain#Entities#Auditing#ICreationAudited#CreatorUserId">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.CreatorUserIdGet">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of ICreationAudited.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.Abp#Domain#Entities#Auditing#IDeletionAudited#DeleterUserId">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.DeleterUserIdGet">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of IDeletionAudited.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.Abp#Domain#Entities#Auditing#IHasDeletionTime#DeletionTime">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.DeletionTimeGet">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasDeletionTime.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.Abp#Domain#Entities#ISoftDelete#IsDeleted">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.IsDeletedGet">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.IsDeletedSetBoolean">
            <summary>Sets the stub of ISoftDelete.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.Abp#Domain#Entities#Auditing#IHasModificationTime#LastModificationTime">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.LastModificationTimeGet">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasModificationTime.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.Abp#Domain#Entities#Auditing#IModificationAudited#LastModifierUserId">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.LastModifierUserIdGet">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of IModificationAudited.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IFullAudited`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.#ctor">
            <summary>Initializes a new instance of type StubIFullAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubIFullAudited.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToCreatorUser">
            <summary>Attaches delegates to emulate StubIFullAudited.CreatorUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubIFullAudited.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToDeleterUser">
            <summary>Attaches delegates to emulate StubIFullAudited.DeleterUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToDeleterUserId">
            <summary>Attaches delegates to emulate StubIFullAudited.DeleterUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubIFullAudited.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubIFullAudited.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubIFullAudited.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToLastModifierUser">
            <summary>Attaches delegates to emulate StubIFullAudited.LastModifierUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubIFullAudited.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#IHasCreationTime#CreationTime">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.CreationTimeGet">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.CreationTimeSetDateTime">
            <summary>Sets the stub of IHasCreationTime.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#ICreationAudited{TUser}#CreatorUser">
            <summary>Sets the stub of ICreationAudited`1.get_CreatorUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.CreatorUserGet">
            <summary>Sets the stub of ICreationAudited`1.get_CreatorUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#ICreationAudited#CreatorUserId">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.CreatorUserIdGet">
            <summary>Sets the stub of ICreationAudited.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of ICreationAudited.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.CreatorUserSetT0">
            <summary>Sets the stub of ICreationAudited`1.set_CreatorUser(!0 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#IDeletionAudited{TUser}#DeleterUser">
            <summary>Sets the stub of IDeletionAudited`1.get_DeleterUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.DeleterUserGet">
            <summary>Sets the stub of IDeletionAudited`1.get_DeleterUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#IDeletionAudited#DeleterUserId">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.DeleterUserIdGet">
            <summary>Sets the stub of IDeletionAudited.get_DeleterUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.DeleterUserIdSetNullableOfInt64">
            <summary>Sets the stub of IDeletionAudited.set_DeleterUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.DeleterUserSetT0">
            <summary>Sets the stub of IDeletionAudited`1.set_DeleterUser(!0 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#IHasDeletionTime#DeletionTime">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.DeletionTimeGet">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasDeletionTime.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#ISoftDelete#IsDeleted">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.IsDeletedGet">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.IsDeletedSetBoolean">
            <summary>Sets the stub of ISoftDelete.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#IHasModificationTime#LastModificationTime">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.LastModificationTimeGet">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasModificationTime.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#IModificationAudited{TUser}#LastModifierUser">
            <summary>Sets the stub of IModificationAudited`1.get_LastModifierUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.LastModifierUserGet">
            <summary>Sets the stub of IModificationAudited`1.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.Abp#Domain#Entities#Auditing#IModificationAudited#LastModifierUserId">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.LastModifierUserIdGet">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of IModificationAudited.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIFullAudited`1.LastModifierUserSetT0">
            <summary>Sets the stub of IModificationAudited`1.set_LastModifierUser(!0 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIHasCreationTime">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IHasCreationTime</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIHasCreationTime.#ctor">
            <summary>Initializes a new instance of type StubIHasCreationTime</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIHasCreationTime.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubIHasCreationTime.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIHasCreationTime.Abp#Domain#Entities#Auditing#IHasCreationTime#CreationTime">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasCreationTime.CreationTimeGet">
            <summary>Sets the stub of IHasCreationTime.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasCreationTime.CreationTimeSetDateTime">
            <summary>Sets the stub of IHasCreationTime.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IHasDeletionTime</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.#ctor">
            <summary>Initializes a new instance of type StubIHasDeletionTime</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.AttachBackingFieldToDeletionTime">
            <summary>Attaches delegates to emulate StubIHasDeletionTime.DeletionTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubIHasDeletionTime.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.Abp#Domain#Entities#Auditing#IHasDeletionTime#DeletionTime">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.DeletionTimeGet">
            <summary>Sets the stub of IHasDeletionTime.get_DeletionTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.DeletionTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasDeletionTime.set_DeletionTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.Abp#Domain#Entities#ISoftDelete#IsDeleted">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.IsDeletedGet">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasDeletionTime.IsDeletedSetBoolean">
            <summary>Sets the stub of ISoftDelete.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIHasModificationTime">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IHasModificationTime</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIHasModificationTime.#ctor">
            <summary>Initializes a new instance of type StubIHasModificationTime</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIHasModificationTime.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubIHasModificationTime.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIHasModificationTime.Abp#Domain#Entities#Auditing#IHasModificationTime#LastModificationTime">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasModificationTime.LastModificationTimeGet">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIHasModificationTime.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasModificationTime.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IModificationAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.#ctor">
            <summary>Initializes a new instance of type StubIModificationAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubIModificationAudited.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubIModificationAudited.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.Abp#Domain#Entities#Auditing#IHasModificationTime#LastModificationTime">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.LastModificationTimeGet">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasModificationTime.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.Abp#Domain#Entities#Auditing#IModificationAudited#LastModifierUserId">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.LastModifierUserIdGet">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of IModificationAudited.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1">
            <summary>Stub type of Abp.Domain.Entities.Auditing.IModificationAudited`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.#ctor">
            <summary>Initializes a new instance of type StubIModificationAudited</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.AttachBackingFieldToLastModificationTime">
            <summary>Attaches delegates to emulate StubIModificationAudited.LastModificationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.AttachBackingFieldToLastModifierUser">
            <summary>Attaches delegates to emulate StubIModificationAudited.LastModifierUser as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.AttachBackingFieldToLastModifierUserId">
            <summary>Attaches delegates to emulate StubIModificationAudited.LastModifierUserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.Abp#Domain#Entities#Auditing#IHasModificationTime#LastModificationTime">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.LastModificationTimeGet">
            <summary>Sets the stub of IHasModificationTime.get_LastModificationTime()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.LastModificationTimeSetNullableOfDateTime">
            <summary>Sets the stub of IHasModificationTime.set_LastModificationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.Abp#Domain#Entities#Auditing#IModificationAudited{TUser}#LastModifierUser">
            <summary>Sets the stub of IModificationAudited`1.get_LastModifierUser()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.LastModifierUserGet">
            <summary>Sets the stub of IModificationAudited`1.get_LastModifierUser()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.Abp#Domain#Entities#Auditing#IModificationAudited#LastModifierUserId">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.LastModifierUserIdGet">
            <summary>Sets the stub of IModificationAudited.get_LastModifierUserId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.LastModifierUserIdSetNullableOfInt64">
            <summary>Sets the stub of IModificationAudited.set_LastModifierUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Auditing.Fakes.StubIModificationAudited`1.LastModifierUserSetT0">
            <summary>Sets the stub of IModificationAudited`1.set_LastModifierUser(!0 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2">
            <summary>Shim type of Abp.Domain.Entities.Caching.EntityCache`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.#ctor(Abp.Domain.Entities.Caching.EntityCache{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.Bind(Abp.Domain.Entities.Caching.IEntityCache{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.Bind(Abp.Domain.Entities.Caching.IEntityCache{`1,System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.Bind(Abp.Events.Bus.Handlers.IEventHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.Bind(Abp.Events.Bus.Handlers.IEventHandler{Abp.Events.Bus.Entities.EntityChangedEventData{`0}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`2.ConstructorICacheManagerIRepositoryOfT0Int32String">
            <summary>Sets the shim of EntityCache`2.EntityCache`2(ICacheManager cacheManager, IRepository`2&lt;!0,Int32&gt; repository, String cacheName)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3">
            <summary>Shim type of Abp.Domain.Entities.Caching.EntityCache`3</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.#ctor(Abp.Domain.Entities.Caching.EntityCache{`0,`1,`2})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.CacheManagerGet">
            <summary>Sets the shim of EntityCache`3.get_CacheManager()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.CacheManagerSetICacheManager">
            <summary>Sets the shim of EntityCache`3.set_CacheManager(ICacheManager value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.CacheNameGet">
            <summary>Sets the shim of EntityCache`3.get_CacheName()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.CacheNameSetString">
            <summary>Sets the shim of EntityCache`3.set_CacheName(String value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.GenerateDefaultCacheName">
            <summary>Sets the shim of EntityCache`3.GenerateDefaultCacheName()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.GetAsyncT2">
            <summary>Sets the shim of EntityCache`3.GetAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.GetCacheItemFromDataSourceAsyncT2">
            <summary>Sets the shim of EntityCache`3.GetCacheItemFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.GetCacheItemFromDataSourceT2">
            <summary>Sets the shim of EntityCache`3.GetCacheItemFromDataSource(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.GetEntityFromDataSourceAsyncT2">
            <summary>Sets the shim of EntityCache`3.GetEntityFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.GetEntityFromDataSourceT2">
            <summary>Sets the shim of EntityCache`3.GetEntityFromDataSource(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.GetT2">
            <summary>Sets the shim of EntityCache`3.Get(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.HandleEventEntityChangedEventDataOfT0">
            <summary>Sets the shim of EntityCache`3.HandleEvent(EntityChangedEventData`1&lt;!0&gt; eventData)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.InternalCacheGet">
            <summary>Sets the shim of EntityCache`3.get_InternalCache()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.ItemGetT2">
            <summary>Sets the shim of EntityCache`3.get_Item(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.MapToCacheItemT0">
            <summary>Sets the shim of EntityCache`3.MapToCacheItem(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.ObjectMapperGet">
            <summary>Sets the shim of EntityCache`3.get_ObjectMapper()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.ObjectMapperSetIObjectMapper">
            <summary>Sets the shim of EntityCache`3.set_ObjectMapper(IObjectMapper value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.RepositoryGet">
            <summary>Sets the shim of EntityCache`3.get_Repository()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.RepositorySetIRepositoryOfT0T2">
            <summary>Sets the shim of EntityCache`3.set_Repository(IRepository`2&lt;!0,!2&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.AllInstances.ToString01">
            <summary>Sets the shim of EntityCache`3.ToString()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.Bind(Abp.Domain.Entities.Caching.IEntityCache{`1,`2})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.Bind(Abp.Events.Bus.Handlers.IEventHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.Bind(Abp.Events.Bus.Handlers.IEventHandler{Abp.Events.Bus.Entities.EntityChangedEventData{`0}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.CacheManagerGet">
            <summary>Sets the shim of EntityCache`3.get_CacheManager()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.CacheManagerSetICacheManager">
            <summary>Sets the shim of EntityCache`3.set_CacheManager(ICacheManager value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.CacheNameGet">
            <summary>Sets the shim of EntityCache`3.get_CacheName()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.CacheNameSetString">
            <summary>Sets the shim of EntityCache`3.set_CacheName(String value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.ConstructorICacheManagerIRepositoryOfT0T2String">
            <summary>Sets the shim of EntityCache`3.EntityCache`3(ICacheManager cacheManager, IRepository`2&lt;!0,!2&gt; repository, String cacheName)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.GenerateDefaultCacheName">
            <summary>Sets the shim of EntityCache`3.GenerateDefaultCacheName()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.GetAsyncT2">
            <summary>Sets the shim of EntityCache`3.GetAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.GetCacheItemFromDataSourceAsyncT2">
            <summary>Sets the shim of EntityCache`3.GetCacheItemFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.GetCacheItemFromDataSourceT2">
            <summary>Sets the shim of EntityCache`3.GetCacheItemFromDataSource(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.GetEntityFromDataSourceAsyncT2">
            <summary>Sets the shim of EntityCache`3.GetEntityFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.GetEntityFromDataSourceT2">
            <summary>Sets the shim of EntityCache`3.GetEntityFromDataSource(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.GetT2">
            <summary>Sets the shim of EntityCache`3.Get(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.HandleEventEntityChangedEventDataOfT0">
            <summary>Sets the shim of EntityCache`3.HandleEvent(EntityChangedEventData`1&lt;!0&gt; eventData)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.InternalCacheGet">
            <summary>Sets the shim of EntityCache`3.get_InternalCache()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.ItemGetT2">
            <summary>Sets the shim of EntityCache`3.get_Item(!2 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.MapToCacheItemT0">
            <summary>Sets the shim of EntityCache`3.MapToCacheItem(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.ObjectMapperGet">
            <summary>Sets the shim of EntityCache`3.get_ObjectMapper()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.ObjectMapperSetIObjectMapper">
            <summary>Sets the shim of EntityCache`3.set_ObjectMapper(IObjectMapper value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.RepositoryGet">
            <summary>Sets the shim of EntityCache`3.get_Repository()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.RepositorySetIRepositoryOfT0T2">
            <summary>Sets the shim of EntityCache`3.set_Repository(IRepository`2&lt;!0,!2&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.ShimEntityCache`3.ToString">
            <summary>Sets the shim of EntityCache`3.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2">
            <summary>Stub type of Abp.Domain.Entities.Caching.EntityCache`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.#ctor(Abp.Runtime.Caching.ICacheManager,Abp.Domain.Repositories.IRepository{`0,System.Int32},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GenerateDefaultCacheName">
            <summary>Sets the stub of EntityCache`3.GenerateDefaultCacheName()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GenerateDefaultCacheName01">
            <summary>Sets the stub of EntityCache`3.GenerateDefaultCacheName()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.Get(System.Int32)">
            <summary>Sets the stub of EntityCache`3.Get(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetAsync(System.Int32)">
            <summary>Sets the stub of EntityCache`3.GetAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetAsyncInt32">
            <summary>Sets the stub of EntityCache`3.GetAsync(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetCacheItemFromDataSource(System.Int32)">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSource(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetCacheItemFromDataSourceAsync(System.Int32)">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetCacheItemFromDataSourceAsyncInt32">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetCacheItemFromDataSourceInt32">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSource(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetEntityFromDataSource(System.Int32)">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSource(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetEntityFromDataSourceAsync(System.Int32)">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetEntityFromDataSourceAsyncInt32">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetEntityFromDataSourceInt32">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSource(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.GetInt32">
            <summary>Sets the stub of EntityCache`3.Get(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.HandleEvent(Abp.Events.Bus.Entities.EntityChangedEventData{`0})">
            <summary>Sets the stub of EntityCache`3.HandleEvent(EntityChangedEventData`1&lt;!0&gt; eventData)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.HandleEventEntityChangedEventDataOfT0">
            <summary>Sets the stub of EntityCache`3.HandleEvent(EntityChangedEventData`1&lt;!0&gt; eventData)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.InitializeStub">
            <summary>Initializes a new instance of type StubEntityCache</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.MapToCacheItem(`0)">
            <summary>Sets the stub of EntityCache`3.MapToCacheItem(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.MapToCacheItemT0">
            <summary>Sets the stub of EntityCache`3.MapToCacheItem(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.ToString">
            <summary>Sets the stub of EntityCache`3.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`2.ToString01">
            <summary>Sets the stub of EntityCache`3.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3">
            <summary>Stub type of Abp.Domain.Entities.Caching.EntityCache`3</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.#ctor(Abp.Runtime.Caching.ICacheManager,Abp.Domain.Repositories.IRepository{`0,`2},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GenerateDefaultCacheName">
            <summary>Sets the stub of EntityCache`3.GenerateDefaultCacheName()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GenerateDefaultCacheName01">
            <summary>Sets the stub of EntityCache`3.GenerateDefaultCacheName()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.Get(`2)">
            <summary>Sets the stub of EntityCache`3.Get(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetAsync(`2)">
            <summary>Sets the stub of EntityCache`3.GetAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetAsyncT2">
            <summary>Sets the stub of EntityCache`3.GetAsync(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetCacheItemFromDataSource(`2)">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSource(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetCacheItemFromDataSourceAsync(`2)">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetCacheItemFromDataSourceAsyncT2">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetCacheItemFromDataSourceT2">
            <summary>Sets the stub of EntityCache`3.GetCacheItemFromDataSource(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetEntityFromDataSource(`2)">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSource(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetEntityFromDataSourceAsync(`2)">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetEntityFromDataSourceAsyncT2">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSourceAsync(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetEntityFromDataSourceT2">
            <summary>Sets the stub of EntityCache`3.GetEntityFromDataSource(!2 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.GetT2">
            <summary>Sets the stub of EntityCache`3.Get(!2 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.HandleEvent(Abp.Events.Bus.Entities.EntityChangedEventData{`0})">
            <summary>Sets the stub of EntityCache`3.HandleEvent(EntityChangedEventData`1&lt;!0&gt; eventData)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.HandleEventEntityChangedEventDataOfT0">
            <summary>Sets the stub of EntityCache`3.HandleEvent(EntityChangedEventData`1&lt;!0&gt; eventData)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.InitializeStub">
            <summary>Initializes a new instance of type StubEntityCache</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.MapToCacheItem(`0)">
            <summary>Sets the stub of EntityCache`3.MapToCacheItem(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.MapToCacheItemT0">
            <summary>Sets the stub of EntityCache`3.MapToCacheItem(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.ToString">
            <summary>Sets the stub of EntityCache`3.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubEntityCache`3.ToString01">
            <summary>Sets the stub of EntityCache`3.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1">
            <summary>Stub type of Abp.Domain.Entities.Caching.IEntityCache`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.#ctor">
            <summary>Initializes a new instance of type StubIEntityCache</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,System#Int32}#Get(System.Int32)">
            <summary>Sets the stub of IEntityCache`2.Get(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,System#Int32}#GetAsync(System.Int32)">
            <summary>Sets the stub of IEntityCache`2.GetAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,System#Int32}#CacheName">
            <summary>Sets the stub of IEntityCache`2.get_CacheName()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.CacheNameGet">
            <summary>Sets the stub of IEntityCache`2.get_CacheName()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.GetAsyncInt32">
            <summary>Sets the stub of IEntityCache`2.GetAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.GetInt32">
            <summary>Sets the stub of IEntityCache`2.Get(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,System#Int32}#InternalCache">
            <summary>Sets the stub of IEntityCache`2.get_InternalCache()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.InternalCacheGet">
            <summary>Sets the stub of IEntityCache`2.get_InternalCache()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,System#Int32}#Item(System.Int32)">
            <summary>Sets the stub of IEntityCache`2.get_Item(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`1.ItemGetInt32">
            <summary>Sets the stub of IEntityCache`2.get_Item(!1 id)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2">
            <summary>Stub type of Abp.Domain.Entities.Caching.IEntityCache`2</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.#ctor">
            <summary>Initializes a new instance of type StubIEntityCache</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,TPrimaryKey}#Get(`1)">
            <summary>Sets the stub of IEntityCache`2.Get(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,TPrimaryKey}#GetAsync(`1)">
            <summary>Sets the stub of IEntityCache`2.GetAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,TPrimaryKey}#CacheName">
            <summary>Sets the stub of IEntityCache`2.get_CacheName()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.CacheNameGet">
            <summary>Sets the stub of IEntityCache`2.get_CacheName()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.GetAsyncT1">
            <summary>Sets the stub of IEntityCache`2.GetAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.GetT1">
            <summary>Sets the stub of IEntityCache`2.Get(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,TPrimaryKey}#InternalCache">
            <summary>Sets the stub of IEntityCache`2.get_InternalCache()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.InternalCacheGet">
            <summary>Sets the stub of IEntityCache`2.get_InternalCache()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.Abp#Domain#Entities#Caching#IEntityCache{TCacheItem,TPrimaryKey}#Item(`1)">
            <summary>Sets the stub of IEntityCache`2.get_Item(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Caching.Fakes.StubIEntityCache`2.ItemGetT1">
            <summary>Sets the stub of IEntityCache`2.get_Item(!1 id)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimAggregateRoot">
            <summary>Shim type of Abp.Domain.Entities.AggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.#ctor(Abp.Domain.Entities.AggregateRoot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimAggregateRoot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimAggregateRoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.Bind(Abp.Domain.Entities.IAggregateRoot)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.Bind(Abp.Domain.Entities.IEntity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.Bind(Abp.Domain.Entities.IAggregateRoot{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimAggregateRoot.Constructor">
            <summary>Sets the shim of AggregateRoot.AggregateRoot()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1">
            <summary>Shim type of Abp.Domain.Entities.AggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.#ctor(Abp.Domain.Entities.AggregateRoot{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.AllInstances.DomainEventsGet">
            <summary>Sets the shim of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.Bind(Abp.Domain.Entities.IGeneratesDomainEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.Bind(Abp.Domain.Entities.IAggregateRoot{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.Constructor">
            <summary>Sets the shim of AggregateRoot`1.AggregateRoot`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimAggregateRoot`1.DomainEventsGet">
            <summary>Sets the shim of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntity">
            <summary>Shim type of Abp.Domain.Entities.Entity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity.#ctor(Abp.Domain.Entities.Entity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity.Bind(Abp.Domain.Entities.IEntity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity.Bind(Abp.Domain.Entities.IEntity{System.Int32})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity.Constructor">
            <summary>Sets the shim of Entity.Entity()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntity`1">
            <summary>Shim type of Abp.Domain.Entities.Entity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity`1.#ctor(Abp.Domain.Entities.Entity{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntity`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.AllInstances.EqualsObject">
            <summary>Sets the shim of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.AllInstances.IdGet">
            <summary>Sets the shim of Entity`1.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.AllInstances.IdSetT0">
            <summary>Sets the shim of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.AllInstances.IsTransient">
            <summary>Sets the shim of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.AllInstances.ToString01">
            <summary>Sets the shim of Entity`1.ToString()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntity`1.Bind(Abp.Domain.Entities.IEntity{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.Constructor">
            <summary>Sets the shim of Entity`1.Entity`1()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.EqualityOpEntityOfT0EntityOfT0">
            <summary>Sets the shim of Entity`1.op_Equality(Entity`1&lt;!0&gt; left, Entity`1&lt;!0&gt; right)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.EqualsObject">
            <summary>Sets the shim of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.GetHashCode">
            <summary>Sets the shim of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.IdGet">
            <summary>Sets the shim of Entity`1.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.IdSetT0">
            <summary>Sets the shim of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.InequalityOpEntityOfT0EntityOfT0">
            <summary>Sets the shim of Entity`1.op_Inequality(Entity`1&lt;!0&gt; left, Entity`1&lt;!0&gt; right)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.IsTransient">
            <summary>Sets the shim of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntity`1.ToString">
            <summary>Sets the shim of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityExtensions">
            <summary>Shim type of Abp.Domain.Entities.EntityExtensions</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityExtensions.IsNullOrDeletedISoftDelete">
            <summary>Sets the shim of EntityExtensions.IsNullOrDeleted(ISoftDelete entity)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityExtensions.UnDeleteISoftDelete">
            <summary>Sets the shim of EntityExtensions.UnDelete(ISoftDelete entity)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityHelper">
            <summary>Shim type of Abp.Domain.Entities.EntityHelper</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityHelper.GetPrimaryKeyTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type})">
            <summary>Sets the shim of EntityHelper.GetPrimaryKeyType()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityHelper.GetPrimaryKeyTypeType">
            <summary>Sets the shim of EntityHelper.GetPrimaryKeyType(Type entityType)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityHelper.IsEntityType">
            <summary>Sets the shim of EntityHelper.IsEntity(Type type)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityIdentifier">
            <summary>Shim type of Abp.Domain.Entities.EntityIdentifier</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.#ctor(Abp.Domain.Entities.EntityIdentifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.AllInstances.IdGet">
            <summary>Sets the shim of EntityIdentifier.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.AllInstances.IdSetObject">
            <summary>Sets the shim of EntityIdentifier.set_Id(Object value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.AllInstances.TypeGet">
            <summary>Sets the shim of EntityIdentifier.get_Type()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.AllInstances.TypeSetType">
            <summary>Sets the shim of EntityIdentifier.set_Type(Type value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.Constructor">
            <summary>Sets the shim of EntityIdentifier.EntityIdentifier()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.ConstructorTypeObject">
            <summary>Sets the shim of EntityIdentifier.EntityIdentifier(Type type, Object id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.IdGet">
            <summary>Sets the shim of EntityIdentifier.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.IdSetObject">
            <summary>Sets the shim of EntityIdentifier.set_Id(Object value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.TypeGet">
            <summary>Sets the shim of EntityIdentifier.get_Type()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityIdentifier.TypeSetType">
            <summary>Sets the shim of EntityIdentifier.set_Type(Type value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException">
            <summary>Shim type of Abp.Domain.Entities.EntityNotFoundException</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.#ctor(Abp.Domain.Entities.EntityNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.AllInstances.EntityTypeGet">
            <summary>Sets the shim of EntityNotFoundException.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.AllInstances.EntityTypeSetType">
            <summary>Sets the shim of EntityNotFoundException.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.AllInstances.IdGet">
            <summary>Sets the shim of EntityNotFoundException.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.AllInstances.IdSetObject">
            <summary>Sets the shim of EntityNotFoundException.set_Id(Object value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.Constructor">
            <summary>Sets the shim of EntityNotFoundException.EntityNotFoundException()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EntityNotFoundException.EntityNotFoundException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.ConstructorString">
            <summary>Sets the shim of EntityNotFoundException.EntityNotFoundException(String message)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.ConstructorStringException">
            <summary>Sets the shim of EntityNotFoundException.EntityNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.ConstructorTypeObject">
            <summary>Sets the shim of EntityNotFoundException.EntityNotFoundException(Type entityType, Object id)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.ConstructorTypeObjectException">
            <summary>Sets the shim of EntityNotFoundException.EntityNotFoundException(Type entityType, Object id, Exception innerException)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.EntityTypeGet">
            <summary>Sets the shim of EntityNotFoundException.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.EntityTypeSetType">
            <summary>Sets the shim of EntityNotFoundException.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.IdGet">
            <summary>Sets the shim of EntityNotFoundException.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityNotFoundException.IdSetObject">
            <summary>Sets the shim of EntityNotFoundException.set_Id(Object value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo">
            <summary>Shim type of Abp.Domain.Entities.EntityTypeInfo</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.#ctor(Abp.Domain.Entities.EntityTypeInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.AllInstances.DeclaringTypeGet">
            <summary>Sets the shim of EntityTypeInfo.get_DeclaringType()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.AllInstances.DeclaringTypeSetType">
            <summary>Sets the shim of EntityTypeInfo.set_DeclaringType(Type value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.AllInstances.EntityTypeGet">
            <summary>Sets the shim of EntityTypeInfo.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.AllInstances.EntityTypeSetType">
            <summary>Sets the shim of EntityTypeInfo.set_EntityType(Type value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.ConstructorTypeType">
            <summary>Sets the shim of EntityTypeInfo.EntityTypeInfo(Type entityType, Type declaringType)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.DeclaringTypeGet">
            <summary>Sets the shim of EntityTypeInfo.get_DeclaringType()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.DeclaringTypeSetType">
            <summary>Sets the shim of EntityTypeInfo.set_DeclaringType(Type value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.EntityTypeGet">
            <summary>Sets the shim of EntityTypeInfo.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimEntityTypeInfo.EntityTypeSetType">
            <summary>Sets the shim of EntityTypeInfo.set_EntityType(Type value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions">
            <summary>Shim type of Abp.Domain.Entities.ExtendableObjectExtensions</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.GetDataOf1IExtendableObjectStringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Domain.Entities.IExtendableObject,System.String,System.Boolean,``0})">
            <summary>Sets the shim of ExtendableObjectExtensions.GetData(IExtendableObject extendableObject, String name, Boolean handleType)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.GetDataOf1IExtendableObjectStringJsonSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Domain.Entities.IExtendableObject,System.String,Newtonsoft.Json.JsonSerializer,``0})">
            <summary>Sets the shim of ExtendableObjectExtensions.GetData(IExtendableObject extendableObject, String name, JsonSerializer jsonSerializer)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.RemoveDataIExtendableObjectString">
            <summary>Sets the shim of ExtendableObjectExtensions.RemoveData(IExtendableObject extendableObject, String name)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.SetDataOf1IExtendableObjectStringM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Domain.Entities.IExtendableObject,System.String,``0,System.Boolean})">
            <summary>Sets the shim of ExtendableObjectExtensions.SetData(IExtendableObject extendableObject, String name, !!0 value, Boolean handleType)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.ShimExtendableObjectExtensions.SetDataOf1IExtendableObjectStringM0JsonSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Domain.Entities.IExtendableObject,System.String,``0,Newtonsoft.Json.JsonSerializer})">
            <summary>Sets the shim of ExtendableObjectExtensions.SetData(IExtendableObject extendableObject, String name, !!0 value, JsonSerializer jsonSerializer)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubAggregateRoot">
            <summary>Stub type of Abp.Domain.Entities.AggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot.InitializeStub">
            <summary>Initializes a new instance of type StubAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubAggregateRoot`1">
            <summary>Stub type of Abp.Domain.Entities.AggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.DomainEvents">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.DomainEventsGet">
            <summary>Sets the stub of AggregateRoot`1.get_DomainEvents()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.InitializeStub">
            <summary>Initializes a new instance of type StubAggregateRoot</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubAggregateRoot`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubEntity">
            <summary>Stub type of Abp.Domain.Entities.Entity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity.IdSetInt32">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity.InitializeStub">
            <summary>Initializes a new instance of type StubEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubEntity`1">
            <summary>Stub type of Abp.Domain.Entities.Entity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity`1.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity`1.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity`1.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity`1.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity`1.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity`1.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity`1.IdSetT0">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntity</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntity`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity`1.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity`1.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntity`1.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntity`1.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubEntityIdentifier">
            <summary>Stub type of Abp.Domain.Entities.EntityIdentifier</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityIdentifier.#ctor(System.Type,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityIdentifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityIdentifier.InitializeStub">
            <summary>Initializes a new instance of type StubEntityIdentifier</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityIdentifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityIdentifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubEntityNotFoundException">
            <summary>Stub type of Abp.Domain.Entities.EntityNotFoundException</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.#ctor(System.Type,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.#ctor(System.Type,System.Object,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEntityNotFoundException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEntityNotFoundException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type StubEntityNotFoundException</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubEntityNotFoundException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubEntityTypeInfo">
            <summary>Stub type of Abp.Domain.Entities.EntityTypeInfo</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityTypeInfo.#ctor(System.Type,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityTypeInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubEntityTypeInfo.InitializeStub">
            <summary>Initializes a new instance of type StubEntityTypeInfo</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityTypeInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubEntityTypeInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIAggregateRoot">
            <summary>Stub type of Abp.Domain.Entities.IAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIAggregateRoot.#ctor">
            <summary>Initializes a new instance of type StubIAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIAggregateRoot.Abp#Domain#Entities#IEntity{System#Int32}#IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIAggregateRoot.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIAggregateRoot.Abp#Domain#Entities#IGeneratesDomainEvents#DomainEvents">
            <summary>Sets the stub of IGeneratesDomainEvents.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot.DomainEventsGet">
            <summary>Sets the stub of IGeneratesDomainEvents.get_DomainEvents()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIAggregateRoot.Abp#Domain#Entities#IEntity{System#Int32}#Id">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot.IdGet">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot.IdSetInt32">
            <summary>Sets the stub of IEntity`1.set_Id(!0 value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot.IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1">
            <summary>Stub type of Abp.Domain.Entities.IAggregateRoot`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.#ctor">
            <summary>Initializes a new instance of type StubIAggregateRoot</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.Abp#Domain#Entities#IEntity{TPrimaryKey}#IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIAggregateRoot.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.Abp#Domain#Entities#IGeneratesDomainEvents#DomainEvents">
            <summary>Sets the stub of IGeneratesDomainEvents.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.DomainEventsGet">
            <summary>Sets the stub of IGeneratesDomainEvents.get_DomainEvents()</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.Abp#Domain#Entities#IEntity{TPrimaryKey}#Id">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.IdGet">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.IdSetT0">
            <summary>Sets the stub of IEntity`1.set_Id(!0 value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIAggregateRoot`1.IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIEntity">
            <summary>Stub type of Abp.Domain.Entities.IEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIEntity.#ctor">
            <summary>Initializes a new instance of type StubIEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIEntity.Abp#Domain#Entities#IEntity{System#Int32}#IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIEntity.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIEntity.Abp#Domain#Entities#IEntity{System#Int32}#Id">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIEntity.IdGet">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIEntity.IdSetInt32">
            <summary>Sets the stub of IEntity`1.set_Id(!0 value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIEntity.IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIEntity`1">
            <summary>Stub type of Abp.Domain.Entities.IEntity`1</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIEntity`1.#ctor">
            <summary>Initializes a new instance of type StubIEntity</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIEntity`1.Abp#Domain#Entities#IEntity{TPrimaryKey}#IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIEntity`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIEntity.Id as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIEntity`1.Abp#Domain#Entities#IEntity{TPrimaryKey}#Id">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIEntity`1.IdGet">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIEntity`1.IdSetT0">
            <summary>Sets the stub of IEntity`1.set_Id(!0 value)</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIEntity`1.IsTransient">
            <summary>Sets the stub of IEntity`1.IsTransient()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIExtendableObject">
            <summary>Stub type of Abp.Domain.Entities.IExtendableObject</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIExtendableObject.#ctor">
            <summary>Initializes a new instance of type StubIExtendableObject</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIExtendableObject.AttachBackingFieldToExtensionData">
            <summary>Attaches delegates to emulate StubIExtendableObject.ExtensionData as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIExtendableObject.Abp#Domain#Entities#IExtendableObject#ExtensionData">
            <summary>Sets the stub of IExtendableObject.get_ExtensionData()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIExtendableObject.ExtensionDataGet">
            <summary>Sets the stub of IExtendableObject.get_ExtensionData()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIExtendableObject.ExtensionDataSetString">
            <summary>Sets the stub of IExtendableObject.set_ExtensionData(String value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIGeneratesDomainEvents">
            <summary>Stub type of Abp.Domain.Entities.IGeneratesDomainEvents</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIGeneratesDomainEvents.#ctor">
            <summary>Initializes a new instance of type StubIGeneratesDomainEvents</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIGeneratesDomainEvents.Abp#Domain#Entities#IGeneratesDomainEvents#DomainEvents">
            <summary>Sets the stub of IGeneratesDomainEvents.get_DomainEvents()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIGeneratesDomainEvents.DomainEventsGet">
            <summary>Sets the stub of IGeneratesDomainEvents.get_DomainEvents()</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIMayHaveTenant">
            <summary>Stub type of Abp.Domain.Entities.IMayHaveTenant</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIMayHaveTenant.#ctor">
            <summary>Initializes a new instance of type StubIMayHaveTenant</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIMayHaveTenant.AttachBackingFieldToTenantId">
            <summary>Attaches delegates to emulate StubIMayHaveTenant.TenantId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIMayHaveTenant.Abp#Domain#Entities#IMayHaveTenant#TenantId">
            <summary>Sets the stub of IMayHaveTenant.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIMayHaveTenant.TenantIdGet">
            <summary>Sets the stub of IMayHaveTenant.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIMayHaveTenant.TenantIdSetNullableOfInt32">
            <summary>Sets the stub of IMayHaveTenant.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIMustHaveTenant">
            <summary>Stub type of Abp.Domain.Entities.IMustHaveTenant</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIMustHaveTenant.#ctor">
            <summary>Initializes a new instance of type StubIMustHaveTenant</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIMustHaveTenant.AttachBackingFieldToTenantId">
            <summary>Attaches delegates to emulate StubIMustHaveTenant.TenantId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIMustHaveTenant.Abp#Domain#Entities#IMustHaveTenant#TenantId">
            <summary>Sets the stub of IMustHaveTenant.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIMustHaveTenant.TenantIdGet">
            <summary>Sets the stub of IMustHaveTenant.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIMustHaveTenant.TenantIdSetInt32">
            <summary>Sets the stub of IMustHaveTenant.set_TenantId(Int32 value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubIPassivable">
            <summary>Stub type of Abp.Domain.Entities.IPassivable</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIPassivable.#ctor">
            <summary>Initializes a new instance of type StubIPassivable</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubIPassivable.AttachBackingFieldToIsActive">
            <summary>Attaches delegates to emulate StubIPassivable.IsActive as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubIPassivable.Abp#Domain#Entities#IPassivable#IsActive">
            <summary>Sets the stub of IPassivable.get_IsActive()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIPassivable.IsActiveGet">
            <summary>Sets the stub of IPassivable.get_IsActive()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubIPassivable.IsActiveSetBoolean">
            <summary>Sets the stub of IPassivable.set_IsActive(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Entities.Fakes.StubISoftDelete">
            <summary>Stub type of Abp.Domain.Entities.ISoftDelete</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubISoftDelete.#ctor">
            <summary>Initializes a new instance of type StubISoftDelete</summary>
        </member>
        <member name="M:Abp.Domain.Entities.Fakes.StubISoftDelete.AttachBackingFieldToIsDeleted">
            <summary>Attaches delegates to emulate StubISoftDelete.IsDeleted as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Entities.Fakes.StubISoftDelete.Abp#Domain#Entities#ISoftDelete#IsDeleted">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubISoftDelete.IsDeletedGet">
            <summary>Sets the stub of ISoftDelete.get_IsDeleted()</summary>
        </member>
        <member name="F:Abp.Domain.Entities.Fakes.StubISoftDelete.IsDeletedSetBoolean">
            <summary>Sets the stub of ISoftDelete.set_IsDeleted(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Policies.Fakes.StubIPolicy">
            <summary>Stub type of Abp.Domain.Policies.IPolicy</summary>
        </member>
        <member name="M:Abp.Domain.Policies.Fakes.StubIPolicy.#ctor">
            <summary>Initializes a new instance of type StubIPolicy</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2">
            <summary>Shim type of Abp.Domain.Repositories.AbpRepositoryBase`2</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.#ctor(Abp.Domain.Repositories.AbpRepositoryBase{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.Count">
            <summary>Sets the shim of AbpRepositoryBase`2.Count()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.CountAsync">
            <summary>Sets the shim of AbpRepositoryBase`2.CountAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.CountExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.DeleteAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.DeleteAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.DeleteAsyncT1">
            <summary>Sets the shim of AbpRepositoryBase`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.DeleteExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.FirstOrDefaultAsyncT1">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.FirstOrDefaultT1">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.GetAllIncludingExpressionOfFuncOfT0ObjectArray">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.GetAllList">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllList()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.GetAllListAsync">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllListAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.GetAllListAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.GetAllListExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.GetAsyncT1">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.GetT1">
            <summary>Sets the shim of AbpRepositoryBase`2.Get(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.InsertAndGetIdAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.InsertAndGetIdT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.InsertAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.InsertOrUpdateAndGetIdAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.InsertOrUpdateAndGetIdT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.InsertOrUpdateAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.InsertOrUpdateT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.IocResolverGet">
            <summary>Sets the shim of AbpRepositoryBase`2.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.IocResolverSetIIocResolver">
            <summary>Sets the shim of AbpRepositoryBase`2.set_IocResolver(IIocResolver value)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.LoadT1">
            <summary>Sets the shim of AbpRepositoryBase`2.Load(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.LongCount">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCount()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.LongCountAsync">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCountAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.LongCountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.LongCountExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.QueryOf1FuncOfIQueryableOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Domain.Repositories.AbpRepositoryBase{`0,`1},System.Func{System.Linq.IQueryable{`0},``0},``0})">
            <summary>Sets the shim of AbpRepositoryBase`2.Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.SingleExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.UnitOfWorkManagerGet">
            <summary>Sets the shim of AbpRepositoryBase`2.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of AbpRepositoryBase`2.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.UpdateAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.UpdateAsyncT1FuncOfT0Task">
            <summary>Sets the shim of AbpRepositoryBase`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.AllInstances.UpdateT1ActionOfT0">
            <summary>Sets the shim of AbpRepositoryBase`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.Bind(Abp.Domain.Repositories.IRepository)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.Bind(Abp.Domain.Repositories.IRepository{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.Constructor">
            <summary>Sets the shim of AbpRepositoryBase`2.AbpRepositoryBase`2()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.Count">
            <summary>Sets the shim of AbpRepositoryBase`2.Count()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.CountAsync">
            <summary>Sets the shim of AbpRepositoryBase`2.CountAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.CountExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.CreateEqualityExpressionForIdT1">
            <summary>Sets the shim of AbpRepositoryBase`2.CreateEqualityExpressionForId(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.DeleteAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.DeleteAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.DeleteAsyncT1">
            <summary>Sets the shim of AbpRepositoryBase`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.DeleteExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.FirstOrDefaultAsyncT1">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.FirstOrDefaultT1">
            <summary>Sets the shim of AbpRepositoryBase`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.GetAllIncludingExpressionOfFuncOfT0ObjectArray">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.GetAllList">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllList()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.GetAllListAsync">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllListAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.GetAllListAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.GetAllListExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.GetAsyncT1">
            <summary>Sets the shim of AbpRepositoryBase`2.GetAsync(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.GetT1">
            <summary>Sets the shim of AbpRepositoryBase`2.Get(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.InsertAndGetIdAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.InsertAndGetIdT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.InsertAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.InsertOrUpdateAndGetIdAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.InsertOrUpdateAndGetIdT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.InsertOrUpdateAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.InsertOrUpdateT0">
            <summary>Sets the shim of AbpRepositoryBase`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.IocResolverGet">
            <summary>Sets the shim of AbpRepositoryBase`2.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.IocResolverSetIIocResolver">
            <summary>Sets the shim of AbpRepositoryBase`2.set_IocResolver(IIocResolver value)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.LoadT1">
            <summary>Sets the shim of AbpRepositoryBase`2.Load(!1 id)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.LongCount">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCount()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.LongCountAsync">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCountAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.LongCountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.LongCountExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.MultiTenancySideGet">
            <summary>Sets the shim of AbpRepositoryBase`2.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.MultiTenancySideSetNullableOfMultiTenancySides">
            <summary>Sets the shim of AbpRepositoryBase`2.set_MultiTenancySide(Nullable`1&lt;MultiTenancySides&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.QueryOf1FuncOfIQueryableOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Linq.IQueryable{`0},``0},``0})">
            <summary>Sets the shim of AbpRepositoryBase`2.Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.SingleExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of AbpRepositoryBase`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.StaticConstructor">
            <summary>Sets the shim of AbpRepositoryBase`2.AbpRepositoryBase`2()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.UnitOfWorkManagerGet">
            <summary>Sets the shim of AbpRepositoryBase`2.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of AbpRepositoryBase`2.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.UpdateAsyncT0">
            <summary>Sets the shim of AbpRepositoryBase`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.UpdateAsyncT1FuncOfT0Task">
            <summary>Sets the shim of AbpRepositoryBase`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAbpRepositoryBase`2.UpdateT1ActionOfT0">
            <summary>Sets the shim of AbpRepositoryBase`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute">
            <summary>Shim type of Abp.Domain.Repositories.AutoRepositoryTypesAttribute</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.#ctor(Abp.Domain.Repositories.AutoRepositoryTypesAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.AllInstances.RepositoryImplementationGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryImplementation()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.AllInstances.RepositoryImplementationWithPrimaryKeyGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryImplementationWithPrimaryKey()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.AllInstances.RepositoryInterfaceGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryInterface()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.AllInstances.RepositoryInterfaceWithPrimaryKeyGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryInterfaceWithPrimaryKey()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.AllInstances.WithDefaultRepositoryInterfacesGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_WithDefaultRepositoryInterfaces()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.AllInstances.WithDefaultRepositoryInterfacesSetBoolean">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.set_WithDefaultRepositoryInterfaces(Boolean value)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.ConstructorTypeTypeTypeType">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.AutoRepositoryTypesAttribute(Type repositoryInterface, Type repositoryInterfaceWithPrimaryKey, Type repositoryImplementation, Type repositoryImplementationWithPrimaryKey)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.RepositoryImplementationGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryImplementation()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.RepositoryImplementationWithPrimaryKeyGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryImplementationWithPrimaryKey()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.RepositoryInterfaceGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryInterface()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.RepositoryInterfaceWithPrimaryKeyGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_RepositoryInterfaceWithPrimaryKey()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.WithDefaultRepositoryInterfacesGet">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.get_WithDefaultRepositoryInterfaces()</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimAutoRepositoryTypesAttribute.WithDefaultRepositoryInterfacesSetBoolean">
            <summary>Sets the shim of AutoRepositoryTypesAttribute.set_WithDefaultRepositoryInterfaces(Boolean value)</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions">
            <summary>Shim type of Abp.Domain.Repositories.RepositoryExtensions</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.EnsureCollectionLoadedAsyncOf3IRepositoryOfM0M1M0ExpressionOfFuncOfM0IEnumerableOfM2CancellationToken``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Domain.Repositories.IRepository{``0,``1},``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``2}}},System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>Sets the shim of RepositoryExtensions.EnsureCollectionLoadedAsync(IRepository`2&lt;!!0,!!1&gt; repository, !!0 entity, Expression`1&lt;Func`2&lt;!!0,IEnumerable`1&lt;!!2&gt;&gt;&gt; propertyExpression, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.EnsureCollectionLoadedOf3IRepositoryOfM0M1M0ExpressionOfFuncOfM0IEnumerableOfM2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Domain.Repositories.IRepository{``0,``1},``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``2}}}})">
            <summary>Sets the shim of RepositoryExtensions.EnsureCollectionLoaded(IRepository`2&lt;!!0,!!1&gt; repository, !!0 entity, Expression`1&lt;Func`2&lt;!!0,IEnumerable`1&lt;!!2&gt;&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.EnsurePropertyLoadedAsyncOf3IRepositoryOfM0M1M0ExpressionOfFuncOfM0M2CancellationToken``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Domain.Repositories.IRepository{``0,``1},``0,System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>Sets the shim of RepositoryExtensions.EnsurePropertyLoadedAsync(IRepository`2&lt;!!0,!!1&gt; repository, !!0 entity, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; propertyExpression, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.EnsurePropertyLoadedOf3IRepositoryOfM0M1M0ExpressionOfFuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Domain.Repositories.IRepository{``0,``1},``0,System.Linq.Expressions.Expression{System.Func{``0,``2}}})">
            <summary>Sets the shim of RepositoryExtensions.EnsurePropertyLoaded(IRepository`2&lt;!!0,!!1&gt; repository, !!0 entity, Expression`1&lt;Func`2&lt;!!0,!!2&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.ShimRepositoryExtensions.GetIocResolverOf2IRepositoryOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Domain.Repositories.IRepository{``0,``1},Abp.Dependency.IIocResolver})">
            <summary>Sets the shim of RepositoryExtensions.GetIocResolver(IRepository`2&lt;!!0,!!1&gt; repository)</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2">
            <summary>Stub type of Abp.Domain.Repositories.AbpRepositoryBase`2</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Count">
            <summary>Sets the stub of AbpRepositoryBase`2.Count()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Count01">
            <summary>Sets the stub of AbpRepositoryBase`2.Count()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.CountAsync">
            <summary>Sets the stub of AbpRepositoryBase`2.CountAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.CountAsync01">
            <summary>Sets the stub of AbpRepositoryBase`2.CountAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.CountExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Delete(`1)">
            <summary>Sets the stub of AbpRepositoryBase`2.Delete(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Delete(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteAsync(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteAsync(`1)">
            <summary>Sets the stub of AbpRepositoryBase`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteAsyncT0">
            <summary>Sets the stub of AbpRepositoryBase`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteAsyncT1">
            <summary>Sets the stub of AbpRepositoryBase`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteT0">
            <summary>Sets the stub of AbpRepositoryBase`2.Delete(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.DeleteT1">
            <summary>Sets the stub of AbpRepositoryBase`2.Delete(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefault(`1)">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefaultAsync(`1)">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefaultAsyncT1">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.FirstOrDefaultT1">
            <summary>Sets the stub of AbpRepositoryBase`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Get(`1)">
            <summary>Sets the stub of AbpRepositoryBase`2.Get(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAll">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAll()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAll01">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAll()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllIncludingExpressionOfFuncOfT0ObjectArray">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllList">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllList()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllList01">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllList()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllListAsync">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllListAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllListAsync01">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllListAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllListAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAllListExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAsync(`1)">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetAsyncT1">
            <summary>Sets the stub of AbpRepositoryBase`2.GetAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.GetT1">
            <summary>Sets the stub of AbpRepositoryBase`2.Get(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InitializeStub">
            <summary>Initializes a new instance of type StubAbpRepositoryBase</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Insert(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.Insert(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertAndGetId(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertAndGetIdAsync(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertAndGetIdAsyncT0">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertAndGetIdT0">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertAsync(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertAsyncT0">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdate(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdateAndGetId(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdateAndGetIdAsync(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdateAndGetIdAsyncT0">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdateAndGetIdT0">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdateAsync(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdateAsyncT0">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertOrUpdateT0">
            <summary>Sets the stub of AbpRepositoryBase`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InsertT0">
            <summary>Sets the stub of AbpRepositoryBase`2.Insert(!0 entity)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Load(`1)">
            <summary>Sets the stub of AbpRepositoryBase`2.Load(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LoadT1">
            <summary>Sets the stub of AbpRepositoryBase`2.Load(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCount">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCount()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCount01">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCount()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCountAsync">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCountAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCountAsync01">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCountAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.LongCountExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Query``1(System.Func{System.Linq.IQueryable{`0},``0})">
            <summary>Sets the stub of AbpRepositoryBase`2.Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.QueryOf1FuncOfIQueryableOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Linq.IQueryable{`0},``0},``0})">
            <summary>Sets stubs of Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of AbpRepositoryBase`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.SingleExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of AbpRepositoryBase`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Update(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.Update(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.Update(`1,System.Action{`0})">
            <summary>Sets the stub of AbpRepositoryBase`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.UpdateAsync(`0)">
            <summary>Sets the stub of AbpRepositoryBase`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.UpdateAsync(`1,System.Func{`0,System.Threading.Tasks.Task})">
            <summary>Sets the stub of AbpRepositoryBase`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.UpdateAsyncT0">
            <summary>Sets the stub of AbpRepositoryBase`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.UpdateAsyncT1FuncOfT0Task">
            <summary>Sets the stub of AbpRepositoryBase`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.UpdateT0">
            <summary>Sets the stub of AbpRepositoryBase`2.Update(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAbpRepositoryBase`2.UpdateT1ActionOfT0">
            <summary>Sets the stub of AbpRepositoryBase`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute">
            <summary>Stub type of Abp.Domain.Repositories.AutoRepositoryTypesAttribute</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAutoRepositoryTypesAttribute</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubAutoRepositoryTypesAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.StubIRepository">
            <summary>Stub type of Abp.Domain.Repositories.IRepository</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository.#ctor">
            <summary>Initializes a new instance of type StubIRepository</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.StubIRepository`1">
            <summary>Stub type of Abp.Domain.Repositories.IRepository`1</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.#ctor">
            <summary>Initializes a new instance of type StubIRepository</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Count">
            <summary>Sets the stub of IRepository`2.Count()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#CountAsync">
            <summary>Sets the stub of IRepository`2.CountAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Delete(System.Int32)">
            <summary>Sets the stub of IRepository`2.Delete(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Delete(`0)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#DeleteAsync(`0)">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#DeleteAsync(System.Int32)">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#FirstOrDefault(System.Int32)">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#FirstOrDefaultAsync(System.Int32)">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Get(System.Int32)">
            <summary>Sets the stub of IRepository`2.Get(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>Sets the stub of IRepository`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#GetAllList">
            <summary>Sets the stub of IRepository`2.GetAllList()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#GetAllList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#GetAllListAsync">
            <summary>Sets the stub of IRepository`2.GetAllListAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#GetAllListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#GetAsync(System.Int32)">
            <summary>Sets the stub of IRepository`2.GetAsync(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Insert(`0)">
            <summary>Sets the stub of IRepository`2.Insert(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#InsertAndGetId(`0)">
            <summary>Sets the stub of IRepository`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#InsertAndGetIdAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#InsertAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#InsertOrUpdate(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#InsertOrUpdateAndGetId(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#InsertOrUpdateAndGetIdAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#InsertOrUpdateAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Load(System.Int32)">
            <summary>Sets the stub of IRepository`2.Load(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#LongCount">
            <summary>Sets the stub of IRepository`2.LongCount()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#LongCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#LongCountAsync">
            <summary>Sets the stub of IRepository`2.LongCountAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#LongCountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Query``1(System.Func{System.Linq.IQueryable{`0},``0})">
            <summary>Sets the stub of IRepository`2.Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Update(`0)">
            <summary>Sets the stub of IRepository`2.Update(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#Update(System.Int32,System.Action{`0})">
            <summary>Sets the stub of IRepository`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#UpdateAsync(`0)">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.Abp#Domain#Repositories#IRepository{TEntity,System#Int32}#UpdateAsync(System.Int32,System.Func{`0,System.Threading.Tasks.Task})">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.Count">
            <summary>Sets the stub of IRepository`2.Count()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.CountAsync">
            <summary>Sets the stub of IRepository`2.CountAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.DeleteAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.DeleteAsyncInt32">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.DeleteAsyncT0">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.DeleteExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.DeleteInt32">
            <summary>Sets the stub of IRepository`2.Delete(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.DeleteT0">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.FirstOrDefaultAsyncInt32">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.FirstOrDefaultInt32">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetAllIncludingExpressionOfFuncOfT0ObjectArray">
            <summary>Sets the stub of IRepository`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetAllList">
            <summary>Sets the stub of IRepository`2.GetAllList()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetAllListAsync">
            <summary>Sets the stub of IRepository`2.GetAllListAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetAllListAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetAllListExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetAsyncInt32">
            <summary>Sets the stub of IRepository`2.GetAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.GetInt32">
            <summary>Sets the stub of IRepository`2.Get(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertAndGetIdAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertAndGetIdT0">
            <summary>Sets the stub of IRepository`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertOrUpdateAndGetIdAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertOrUpdateAndGetIdT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertOrUpdateAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertOrUpdateT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.InsertT0">
            <summary>Sets the stub of IRepository`2.Insert(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.LoadInt32">
            <summary>Sets the stub of IRepository`2.Load(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.LongCount">
            <summary>Sets the stub of IRepository`2.LongCount()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.LongCountAsync">
            <summary>Sets the stub of IRepository`2.LongCountAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.LongCountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.LongCountExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`1.QueryOf1FuncOfIQueryableOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Linq.IQueryable{`0},``0},``0})">
            <summary>Sets stubs of Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.UpdateAsyncInt32FuncOfT0Task">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.UpdateAsyncT0">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.UpdateInt32ActionOfT0">
            <summary>Sets the stub of IRepository`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`1.UpdateT0">
            <summary>Sets the stub of IRepository`2.Update(!0 entity)</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.StubIRepository`2">
            <summary>Stub type of Abp.Domain.Repositories.IRepository`2</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.#ctor">
            <summary>Initializes a new instance of type StubIRepository</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Count">
            <summary>Sets the stub of IRepository`2.Count()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#CountAsync">
            <summary>Sets the stub of IRepository`2.CountAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Delete(`0)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Delete(`1)">
            <summary>Sets the stub of IRepository`2.Delete(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#DeleteAsync(`1)">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#FirstOrDefault(`1)">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#FirstOrDefaultAsync(`1)">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Get(`1)">
            <summary>Sets the stub of IRepository`2.Get(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>Sets the stub of IRepository`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#GetAllList">
            <summary>Sets the stub of IRepository`2.GetAllList()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#GetAllList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#GetAllListAsync">
            <summary>Sets the stub of IRepository`2.GetAllListAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#GetAllListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#GetAsync(`1)">
            <summary>Sets the stub of IRepository`2.GetAsync(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Insert(`0)">
            <summary>Sets the stub of IRepository`2.Insert(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#InsertAndGetId(`0)">
            <summary>Sets the stub of IRepository`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#InsertAndGetIdAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#InsertAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#InsertOrUpdate(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#InsertOrUpdateAndGetId(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#InsertOrUpdateAndGetIdAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#InsertOrUpdateAsync(`0)">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Load(`1)">
            <summary>Sets the stub of IRepository`2.Load(!1 id)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#LongCount">
            <summary>Sets the stub of IRepository`2.LongCount()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#LongCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#LongCountAsync">
            <summary>Sets the stub of IRepository`2.LongCountAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#LongCountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Query``1(System.Func{System.Linq.IQueryable{`0},``0})">
            <summary>Sets the stub of IRepository`2.Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of IRepository`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Update(`0)">
            <summary>Sets the stub of IRepository`2.Update(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#Update(`1,System.Action{`0})">
            <summary>Sets the stub of IRepository`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.Abp#Domain#Repositories#IRepository{TEntity,TPrimaryKey}#UpdateAsync(`1,System.Func{`0,System.Threading.Tasks.Task})">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.Count">
            <summary>Sets the stub of IRepository`2.Count()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.CountAsync">
            <summary>Sets the stub of IRepository`2.CountAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.CountExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.DeleteAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.DeleteAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.DeleteAsyncT0">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.DeleteAsyncT1">
            <summary>Sets the stub of IRepository`2.DeleteAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.DeleteExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.Delete(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.DeleteT0">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.DeleteT1">
            <summary>Sets the stub of IRepository`2.Delete(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.FirstOrDefaultAsyncT1">
            <summary>Sets the stub of IRepository`2.FirstOrDefaultAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.FirstOrDefaultT1">
            <summary>Sets the stub of IRepository`2.FirstOrDefault(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetAllIncludingExpressionOfFuncOfT0ObjectArray">
            <summary>Sets the stub of IRepository`2.GetAllIncluding(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] propertySelectors)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetAllList">
            <summary>Sets the stub of IRepository`2.GetAllList()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetAllListAsync">
            <summary>Sets the stub of IRepository`2.GetAllListAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetAllListAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.GetAllListAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetAllListExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.GetAllList(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetAsyncT1">
            <summary>Sets the stub of IRepository`2.GetAsync(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.GetT1">
            <summary>Sets the stub of IRepository`2.Get(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertAndGetIdAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertAndGetIdT0">
            <summary>Sets the stub of IRepository`2.InsertAndGetId(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertOrUpdateAndGetIdAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetIdAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertOrUpdateAndGetIdT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAndGetId(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertOrUpdateAsyncT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdateAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertOrUpdateT0">
            <summary>Sets the stub of IRepository`2.InsertOrUpdate(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.InsertT0">
            <summary>Sets the stub of IRepository`2.Insert(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.LoadT1">
            <summary>Sets the stub of IRepository`2.Load(!1 id)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.LongCount">
            <summary>Sets the stub of IRepository`2.LongCount()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.LongCountAsync">
            <summary>Sets the stub of IRepository`2.LongCountAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.LongCountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.LongCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.LongCountExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.LongCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubIRepository`2.QueryOf1FuncOfIQueryableOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Linq.IQueryable{`0},``0},``0})">
            <summary>Sets stubs of Query(Func`2&lt;IQueryable`1&lt;!0&gt;,!!0&gt; queryMethod)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.SingleExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.UpdateAsyncT0">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.UpdateAsyncT1FuncOfT0Task">
            <summary>Sets the stub of IRepository`2.UpdateAsync(!1 id, Func`2&lt;!0,Task&gt; updateAction)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.UpdateT0">
            <summary>Sets the stub of IRepository`2.Update(!0 entity)</summary>
        </member>
        <member name="F:Abp.Domain.Repositories.Fakes.StubIRepository`2.UpdateT1ActionOfT0">
            <summary>Sets the stub of IRepository`2.Update(!1 id, Action`1&lt;!0&gt; updateAction)</summary>
        </member>
        <member name="T:Abp.Domain.Repositories.Fakes.StubISupportsExplicitLoading`2">
            <summary>Stub type of Abp.Domain.Repositories.ISupportsExplicitLoading`2</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubISupportsExplicitLoading`2.#ctor">
            <summary>Initializes a new instance of type StubISupportsExplicitLoading</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubISupportsExplicitLoading`2.Abp#Domain#Repositories#ISupportsExplicitLoading{TEntity,TPrimaryKey}#EnsureCollectionLoadedAsync``1(`0,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Threading.CancellationToken)">
            <summary>Sets the stub of ISupportsExplicitLoading`2.EnsureCollectionLoadedAsync(!0 entity, Expression`1&lt;Func`2&lt;!0,IEnumerable`1&lt;!!0&gt;&gt;&gt; propertyExpression, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubISupportsExplicitLoading`2.Abp#Domain#Repositories#ISupportsExplicitLoading{TEntity,TPrimaryKey}#EnsurePropertyLoadedAsync``1(`0,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.CancellationToken)">
            <summary>Sets the stub of ISupportsExplicitLoading`2.EnsurePropertyLoadedAsync(!0 entity, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubISupportsExplicitLoading`2.EnsureCollectionLoadedAsyncOf1T0ExpressionOfFuncOfT0IEnumerableOfM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{`0,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>Sets stubs of EnsureCollectionLoadedAsync(!0 entity, Expression`1&lt;Func`2&lt;!0,IEnumerable`1&lt;!!0&gt;&gt;&gt; propertyExpression, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Abp.Domain.Repositories.Fakes.StubISupportsExplicitLoading`2.EnsurePropertyLoadedAsyncOf1T0ExpressionOfFuncOfT0M0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{`0,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>Sets stubs of EnsurePropertyLoadedAsync(!0 entity, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertyExpression, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Abp.Domain.Services.Fakes.ShimDomainService">
            <summary>Shim type of Abp.Domain.Services.DomainService</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.ShimDomainService.#ctor(Abp.Domain.Services.DomainService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Services.Fakes.ShimDomainService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.ShimDomainService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.ShimDomainService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Services.Fakes.ShimDomainService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.ShimDomainService.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.ShimDomainService.Bind(Abp.Domain.Services.IDomainService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Services.Fakes.ShimDomainService.Constructor">
            <summary>Sets the shim of DomainService.DomainService()</summary>
        </member>
        <member name="T:Abp.Domain.Services.Fakes.StubDomainService">
            <summary>Stub type of Abp.Domain.Services.DomainService</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.StubDomainService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Services.Fakes.StubDomainService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.StubDomainService.InitializeStub">
            <summary>Initializes a new instance of type StubDomainService</summary>
        </member>
        <member name="P:Abp.Domain.Services.Fakes.StubDomainService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Services.Fakes.StubDomainService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.StubDomainService.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.StubDomainService.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Domain.Services.Fakes.StubDomainService.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Domain.Services.Fakes.StubDomainService.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Domain.Services.Fakes.StubIDomainService">
            <summary>Stub type of Abp.Domain.Services.IDomainService</summary>
        </member>
        <member name="M:Abp.Domain.Services.Fakes.StubIDomainService.#ctor">
            <summary>Initializes a new instance of type StubIDomainService</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimAbpDataFilters">
            <summary>Shim type of Abp.Domain.Uow.AbpDataFilters</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.ShimParameters">
            <summary>Shim type of Abp.Domain.Uow.AbpDataFilters+Parameters</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.ShimParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.ShimParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.ShimParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAbpDataFilters.ShimParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException">
            <summary>Shim type of Abp.Domain.Uow.AbpDbConcurrencyException</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.#ctor(Abp.Domain.Uow.AbpDbConcurrencyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.Constructor">
            <summary>Sets the shim of AbpDbConcurrencyException.AbpDbConcurrencyException()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AbpDbConcurrencyException.AbpDbConcurrencyException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.ConstructorString">
            <summary>Sets the shim of AbpDbConcurrencyException.AbpDbConcurrencyException(String message)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAbpDbConcurrencyException.ConstructorStringException">
            <summary>Sets the shim of AbpDbConcurrencyException.AbpDbConcurrencyException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider">
            <summary>Shim type of Abp.Domain.Uow.AsyncLocalCurrentUnitOfWorkProvider</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.#ctor(Abp.Domain.Uow.AsyncLocalCurrentUnitOfWorkProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.AllInstances.CurrentGet">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.get_Current()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.AllInstances.CurrentSetIUnitOfWork">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.set_Current(IUnitOfWork value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.AllInstances.LoggerGet">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.get_Logger()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.set_Logger(ILogger value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.Bind(Abp.Domain.Uow.ICurrentUnitOfWorkProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.Constructor">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.AsyncLocalCurrentUnitOfWorkProvider()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.CurrentGet">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.get_Current()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.CurrentSetIUnitOfWork">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.set_Current(IUnitOfWork value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.GetCurrentUow">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.GetCurrentUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.LoggerGet">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.get_Logger()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.LoggerSetILogger">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.SetCurrentUowIUnitOfWork">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.SetCurrentUow(IUnitOfWork value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimAsyncLocalCurrentUnitOfWorkProvider.StaticConstructor">
            <summary>Sets the shim of AsyncLocalCurrentUnitOfWorkProvider.AsyncLocalCurrentUnitOfWorkProvider()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs">
            <summary>Shim type of Abp.Domain.Uow.ConnectionStringResolveArgs</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.#ctor(Abp.Domain.Uow.ConnectionStringResolveArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.AllInstances.MultiTenancySideGet">
            <summary>Sets the shim of ConnectionStringResolveArgs.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.AllInstances.MultiTenancySideSetNullableOfMultiTenancySides">
            <summary>Sets the shim of ConnectionStringResolveArgs.set_MultiTenancySide(Nullable`1&lt;MultiTenancySides&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.ConstructorNullableOfMultiTenancySides">
            <summary>Sets the shim of ConnectionStringResolveArgs.ConnectionStringResolveArgs(Nullable`1&lt;MultiTenancySides&gt; multiTenancySide)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.MultiTenancySideGet">
            <summary>Sets the shim of ConnectionStringResolveArgs.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimConnectionStringResolveArgs.MultiTenancySideSetNullableOfMultiTenancySides">
            <summary>Sets the shim of ConnectionStringResolveArgs.set_MultiTenancySide(Nullable`1&lt;MultiTenancySides&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration">
            <summary>Shim type of Abp.Domain.Uow.DataFilterConfiguration</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.#ctor(Abp.Domain.Uow.DataFilterConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.AllInstances.FilterNameGet">
            <summary>Sets the shim of DataFilterConfiguration.get_FilterName()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.AllInstances.FilterParametersGet">
            <summary>Sets the shim of DataFilterConfiguration.get_FilterParameters()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.AllInstances.IsEnabledGet">
            <summary>Sets the shim of DataFilterConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.ConstructorDataFilterConfigurationNullableOfBoolean">
            <summary>Sets the shim of DataFilterConfiguration.DataFilterConfiguration(DataFilterConfiguration filterToClone, Nullable`1&lt;Boolean&gt; isEnabled)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.ConstructorStringBoolean">
            <summary>Sets the shim of DataFilterConfiguration.DataFilterConfiguration(String filterName, Boolean isEnabled)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.FilterNameGet">
            <summary>Sets the shim of DataFilterConfiguration.get_FilterName()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.FilterParametersGet">
            <summary>Sets the shim of DataFilterConfiguration.get_FilterParameters()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDataFilterConfiguration.IsEnabledGet">
            <summary>Sets the shim of DataFilterConfiguration.get_IsEnabled()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver">
            <summary>Shim type of Abp.Domain.Uow.DefaultConnectionStringResolver</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.#ctor(Abp.Domain.Uow.DefaultConnectionStringResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.AllInstances.GetNameOrConnectionStringConnectionStringResolveArgs">
            <summary>Sets the shim of DefaultConnectionStringResolver.GetNameOrConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.Bind(Abp.Domain.Uow.IConnectionStringResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.ConstructorIAbpStartupConfiguration">
            <summary>Sets the shim of DefaultConnectionStringResolver.DefaultConnectionStringResolver(IAbpStartupConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimDefaultConnectionStringResolver.GetNameOrConnectionStringConnectionStringResolveArgs">
            <summary>Sets the shim of DefaultConnectionStringResolver.GetNameOrConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork">
            <summary>Shim type of Abp.Domain.Uow.NullUnitOfWork</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.#ctor(Abp.Domain.Uow.NullUnitOfWork)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.AllInstances.BeginUow">
            <summary>Sets the shim of NullUnitOfWork.BeginUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.AllInstances.CompleteUow">
            <summary>Sets the shim of NullUnitOfWork.CompleteUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.AllInstances.CompleteUowAsync">
            <summary>Sets the shim of NullUnitOfWork.CompleteUowAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.AllInstances.DisposeUow">
            <summary>Sets the shim of NullUnitOfWork.DisposeUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.AllInstances.SaveChanges">
            <summary>Sets the shim of NullUnitOfWork.SaveChanges()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.AllInstances.SaveChangesAsync">
            <summary>Sets the shim of NullUnitOfWork.SaveChangesAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.BeginUow">
            <summary>Sets the shim of NullUnitOfWork.BeginUow()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.Bind(Abp.Domain.Uow.IActiveUnitOfWork)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.Bind(Abp.Domain.Uow.IUnitOfWork)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.Bind(Abp.Domain.Uow.IUnitOfWorkCompleteHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.CompleteUow">
            <summary>Sets the shim of NullUnitOfWork.CompleteUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.CompleteUowAsync">
            <summary>Sets the shim of NullUnitOfWork.CompleteUowAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.ConstructorIConnectionStringResolverIUnitOfWorkDefaultOptionsIUnitOfWorkFilterExecuter">
            <summary>Sets the shim of NullUnitOfWork.NullUnitOfWork(IConnectionStringResolver connectionStringResolver, IUnitOfWorkDefaultOptions defaultOptions, IUnitOfWorkFilterExecuter filterExecuter)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.DisposeUow">
            <summary>Sets the shim of NullUnitOfWork.DisposeUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.SaveChanges">
            <summary>Sets the shim of NullUnitOfWork.SaveChanges()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWork.SaveChangesAsync">
            <summary>Sets the shim of NullUnitOfWork.SaveChangesAsync()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter">
            <summary>Shim type of Abp.Domain.Uow.NullUnitOfWorkFilterExecuter</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.#ctor(Abp.Domain.Uow.NullUnitOfWorkFilterExecuter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.AllInstances.ApplyDisableFilterIUnitOfWorkString">
            <summary>Sets the shim of NullUnitOfWorkFilterExecuter.ApplyDisableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.AllInstances.ApplyEnableFilterIUnitOfWorkString">
            <summary>Sets the shim of NullUnitOfWorkFilterExecuter.ApplyEnableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.AllInstances.ApplyFilterParameterValueIUnitOfWorkStringStringObject">
            <summary>Sets the shim of NullUnitOfWorkFilterExecuter.ApplyFilterParameterValue(IUnitOfWork unitOfWork, String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.ApplyDisableFilterIUnitOfWorkString">
            <summary>Sets the shim of NullUnitOfWorkFilterExecuter.ApplyDisableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.ApplyEnableFilterIUnitOfWorkString">
            <summary>Sets the shim of NullUnitOfWorkFilterExecuter.ApplyEnableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.ApplyFilterParameterValueIUnitOfWorkStringStringObject">
            <summary>Sets the shim of NullUnitOfWorkFilterExecuter.ApplyFilterParameterValue(IUnitOfWork unitOfWork, String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.Bind(Abp.Domain.Uow.IUnitOfWorkFilterExecuter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimNullUnitOfWorkFilterExecuter.Constructor">
            <summary>Sets the shim of NullUnitOfWorkFilterExecuter.NullUnitOfWorkFilterExecuter()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute">
            <summary>Shim type of Abp.Domain.Uow.UnitOfWorkAttribute</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.#ctor(Abp.Domain.Uow.UnitOfWorkAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.CreateOptions">
            <summary>Sets the shim of UnitOfWorkAttribute.CreateOptions()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.IsDisabledGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_IsDisabled()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.IsDisabledSetBoolean">
            <summary>Sets the shim of UnitOfWorkAttribute.set_IsDisabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.IsTransactionalGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_IsTransactional()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.IsTransactionalSetNullableOfBoolean">
            <summary>Sets the shim of UnitOfWorkAttribute.set_IsTransactional(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.IsolationLevelGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_IsolationLevel()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.IsolationLevelSetNullableOfIsolationLevel">
            <summary>Sets the shim of UnitOfWorkAttribute.set_IsolationLevel(Nullable`1&lt;IsolationLevel&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.ScopeGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_Scope()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.ScopeSetNullableOfTransactionScopeOption">
            <summary>Sets the shim of UnitOfWorkAttribute.set_Scope(Nullable`1&lt;TransactionScopeOption&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.TimeoutGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_Timeout()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.AllInstances.TimeoutSetNullableOfTimeSpan">
            <summary>Sets the shim of UnitOfWorkAttribute.set_Timeout(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.Constructor">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorBoolean">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(Boolean isTransactional)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorBooleanInt32">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(Boolean isTransactional, Int32 timeout)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorInt32">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(Int32 timeout)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorIsolationLevel">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorIsolationLevelInt32">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(IsolationLevel isolationLevel, Int32 timeout)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorTransactionScopeOption">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(TransactionScopeOption scope)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorTransactionScopeOptionBoolean">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(TransactionScopeOption scope, Boolean isTransactional)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ConstructorTransactionScopeOptionInt32">
            <summary>Sets the shim of UnitOfWorkAttribute.UnitOfWorkAttribute(TransactionScopeOption scope, Int32 timeout)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.CreateOptions">
            <summary>Sets the shim of UnitOfWorkAttribute.CreateOptions()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.IsDisabledGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_IsDisabled()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.IsDisabledSetBoolean">
            <summary>Sets the shim of UnitOfWorkAttribute.set_IsDisabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.IsTransactionalGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_IsTransactional()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.IsTransactionalSetNullableOfBoolean">
            <summary>Sets the shim of UnitOfWorkAttribute.set_IsTransactional(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.IsolationLevelGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_IsolationLevel()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.IsolationLevelSetNullableOfIsolationLevel">
            <summary>Sets the shim of UnitOfWorkAttribute.set_IsolationLevel(Nullable`1&lt;IsolationLevel&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ScopeGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_Scope()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.ScopeSetNullableOfTransactionScopeOption">
            <summary>Sets the shim of UnitOfWorkAttribute.set_Scope(Nullable`1&lt;TransactionScopeOption&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.TimeoutGet">
            <summary>Sets the shim of UnitOfWorkAttribute.get_Timeout()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkAttribute.TimeoutSetNullableOfTimeSpan">
            <summary>Sets the shim of UnitOfWorkAttribute.set_Timeout(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase">
            <summary>Shim type of Abp.Domain.Uow.UnitOfWorkBase</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.#ctor(Abp.Domain.Uow.UnitOfWorkBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AbpSessionGet">
            <summary>Sets the shim of UnitOfWorkBase.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AbpSessionSetIAbpSession">
            <summary>Sets the shim of UnitOfWorkBase.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.AbpSessionGet">
            <summary>Sets the shim of UnitOfWorkBase.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.AbpSessionSetIAbpSession">
            <summary>Sets the shim of UnitOfWorkBase.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.ApplyDisableFilterString">
            <summary>Sets the shim of UnitOfWorkBase.ApplyDisableFilter(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.ApplyEnableFilterString">
            <summary>Sets the shim of UnitOfWorkBase.ApplyEnableFilter(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.ApplyFilterParameterValueStringStringObject">
            <summary>Sets the shim of UnitOfWorkBase.ApplyFilterParameterValue(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.BeginUnitOfWorkOptions">
            <summary>Sets the shim of UnitOfWorkBase.Begin(UnitOfWorkOptions options)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.BeginUow">
            <summary>Sets the shim of UnitOfWorkBase.BeginUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.ChangeFilterIsEnabledIfNotOverridedListOfDataFilterConfigurationStringBoolean">
            <summary>Sets the shim of UnitOfWorkBase.ChangeFilterIsEnabledIfNotOverrided(List`1&lt;DataFilterConfiguration&gt; filterOverrides, String filterName, Boolean isEnabled)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.Complete">
            <summary>Sets the shim of UnitOfWorkBase.Complete()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.CompleteAsync">
            <summary>Sets the shim of UnitOfWorkBase.CompleteAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.CompletedAddEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.add_Completed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.CompletedRemoveEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.remove_Completed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.ConnectionStringResolverGet">
            <summary>Sets the shim of UnitOfWorkBase.get_ConnectionStringResolver()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.DefaultOptionsGet">
            <summary>Sets the shim of UnitOfWorkBase.get_DefaultOptions()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.DisableFilterStringArray">
            <summary>Sets the shim of UnitOfWorkBase.DisableFilter(String[] filterNames)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.Dispose">
            <summary>Sets the shim of UnitOfWorkBase.Dispose()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.DisposedAddEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.add_Disposed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.DisposedRemoveEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.remove_Disposed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.EnableFilterStringArray">
            <summary>Sets the shim of UnitOfWorkBase.EnableFilter(String[] filterNames)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.FailedAddEventHandlerOfUnitOfWorkFailedEventArgs">
            <summary>Sets the shim of UnitOfWorkBase.add_Failed(EventHandler`1&lt;UnitOfWorkFailedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.FailedRemoveEventHandlerOfUnitOfWorkFailedEventArgs">
            <summary>Sets the shim of UnitOfWorkBase.remove_Failed(EventHandler`1&lt;UnitOfWorkFailedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.FilterExecuterGet">
            <summary>Sets the shim of UnitOfWorkBase.get_FilterExecuter()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.FiltersGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Filters()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.GetFilterIndexString">
            <summary>Sets the shim of UnitOfWorkBase.GetFilterIndex(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.GetFilterString">
            <summary>Sets the shim of UnitOfWorkBase.GetFilter(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.GetTenantId">
            <summary>Sets the shim of UnitOfWorkBase.GetTenantId()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.IdGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.IsDisposedGet">
            <summary>Sets the shim of UnitOfWorkBase.get_IsDisposed()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.IsDisposedSetBoolean">
            <summary>Sets the shim of UnitOfWorkBase.set_IsDisposed(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.IsFilterEnabledString">
            <summary>Sets the shim of UnitOfWorkBase.IsFilterEnabled(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.OnCompleted">
            <summary>Sets the shim of UnitOfWorkBase.OnCompleted()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.OnDisposed">
            <summary>Sets the shim of UnitOfWorkBase.OnDisposed()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.OnFailedException">
            <summary>Sets the shim of UnitOfWorkBase.OnFailed(Exception exception)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.OptionsGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Options()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.OptionsSetUnitOfWorkOptions">
            <summary>Sets the shim of UnitOfWorkBase.set_Options(UnitOfWorkOptions value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.OuterGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Outer()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.OuterSetIUnitOfWork">
            <summary>Sets the shim of UnitOfWorkBase.set_Outer(IUnitOfWork value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.PreventMultipleBegin">
            <summary>Sets the shim of UnitOfWorkBase.PreventMultipleBegin()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.PreventMultipleComplete">
            <summary>Sets the shim of UnitOfWorkBase.PreventMultipleComplete()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.ResolveConnectionStringConnectionStringResolveArgs">
            <summary>Sets the shim of UnitOfWorkBase.ResolveConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.SetFilterParameterStringStringObject">
            <summary>Sets the shim of UnitOfWorkBase.SetFilterParameter(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.SetFiltersListOfDataFilterConfiguration">
            <summary>Sets the shim of UnitOfWorkBase.SetFilters(List`1&lt;DataFilterConfiguration&gt; filterOverrides)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.SetTenantIdNullableOfInt32">
            <summary>Sets the shim of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.SetTenantIdNullableOfInt32Boolean">
            <summary>Sets the shim of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.AllInstances.ToString01">
            <summary>Sets the shim of UnitOfWorkBase.ToString()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ApplyDisableFilterString">
            <summary>Sets the shim of UnitOfWorkBase.ApplyDisableFilter(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ApplyEnableFilterString">
            <summary>Sets the shim of UnitOfWorkBase.ApplyEnableFilter(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ApplyFilterParameterValueStringStringObject">
            <summary>Sets the shim of UnitOfWorkBase.ApplyFilterParameterValue(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.BeginUnitOfWorkOptions">
            <summary>Sets the shim of UnitOfWorkBase.Begin(UnitOfWorkOptions options)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.BeginUow">
            <summary>Sets the shim of UnitOfWorkBase.BeginUow()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.Bind(Abp.Domain.Uow.IActiveUnitOfWork)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.Bind(Abp.Domain.Uow.IUnitOfWork)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.Bind(Abp.Domain.Uow.IUnitOfWorkCompleteHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ChangeFilterIsEnabledIfNotOverridedListOfDataFilterConfigurationStringBoolean">
            <summary>Sets the shim of UnitOfWorkBase.ChangeFilterIsEnabledIfNotOverrided(List`1&lt;DataFilterConfiguration&gt; filterOverrides, String filterName, Boolean isEnabled)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.Complete">
            <summary>Sets the shim of UnitOfWorkBase.Complete()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.CompleteAsync">
            <summary>Sets the shim of UnitOfWorkBase.CompleteAsync()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.CompletedAddEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.add_Completed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.CompletedRemoveEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.remove_Completed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ConnectionStringResolverGet">
            <summary>Sets the shim of UnitOfWorkBase.get_ConnectionStringResolver()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ConstructorIConnectionStringResolverIUnitOfWorkDefaultOptionsIUnitOfWorkFilterExecuter">
            <summary>Sets the shim of UnitOfWorkBase.UnitOfWorkBase(IConnectionStringResolver connectionStringResolver, IUnitOfWorkDefaultOptions defaultOptions, IUnitOfWorkFilterExecuter filterExecuter)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.DefaultOptionsGet">
            <summary>Sets the shim of UnitOfWorkBase.get_DefaultOptions()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.DisableFilterStringArray">
            <summary>Sets the shim of UnitOfWorkBase.DisableFilter(String[] filterNames)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.Dispose">
            <summary>Sets the shim of UnitOfWorkBase.Dispose()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.DisposedAddEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.add_Disposed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.DisposedRemoveEventHandler">
            <summary>Sets the shim of UnitOfWorkBase.remove_Disposed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.EnableFilterStringArray">
            <summary>Sets the shim of UnitOfWorkBase.EnableFilter(String[] filterNames)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.FailedAddEventHandlerOfUnitOfWorkFailedEventArgs">
            <summary>Sets the shim of UnitOfWorkBase.add_Failed(EventHandler`1&lt;UnitOfWorkFailedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.FailedRemoveEventHandlerOfUnitOfWorkFailedEventArgs">
            <summary>Sets the shim of UnitOfWorkBase.remove_Failed(EventHandler`1&lt;UnitOfWorkFailedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.FilterExecuterGet">
            <summary>Sets the shim of UnitOfWorkBase.get_FilterExecuter()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.FiltersGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Filters()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.GetFilterIndexString">
            <summary>Sets the shim of UnitOfWorkBase.GetFilterIndex(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.GetFilterString">
            <summary>Sets the shim of UnitOfWorkBase.GetFilter(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.GetTenantId">
            <summary>Sets the shim of UnitOfWorkBase.GetTenantId()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.IdGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.IsDisposedGet">
            <summary>Sets the shim of UnitOfWorkBase.get_IsDisposed()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.IsDisposedSetBoolean">
            <summary>Sets the shim of UnitOfWorkBase.set_IsDisposed(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.IsFilterEnabledString">
            <summary>Sets the shim of UnitOfWorkBase.IsFilterEnabled(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.OnCompleted">
            <summary>Sets the shim of UnitOfWorkBase.OnCompleted()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.OnDisposed">
            <summary>Sets the shim of UnitOfWorkBase.OnDisposed()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.OnFailedException">
            <summary>Sets the shim of UnitOfWorkBase.OnFailed(Exception exception)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.OptionsGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Options()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.OptionsSetUnitOfWorkOptions">
            <summary>Sets the shim of UnitOfWorkBase.set_Options(UnitOfWorkOptions value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.OuterGet">
            <summary>Sets the shim of UnitOfWorkBase.get_Outer()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.OuterSetIUnitOfWork">
            <summary>Sets the shim of UnitOfWorkBase.set_Outer(IUnitOfWork value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.PreventMultipleBegin">
            <summary>Sets the shim of UnitOfWorkBase.PreventMultipleBegin()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.PreventMultipleComplete">
            <summary>Sets the shim of UnitOfWorkBase.PreventMultipleComplete()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ResolveConnectionStringConnectionStringResolveArgs">
            <summary>Sets the shim of UnitOfWorkBase.ResolveConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.SetFilterParameterStringStringObject">
            <summary>Sets the shim of UnitOfWorkBase.SetFilterParameter(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.SetFiltersListOfDataFilterConfiguration">
            <summary>Sets the shim of UnitOfWorkBase.SetFilters(List`1&lt;DataFilterConfiguration&gt; filterOverrides)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.SetTenantIdNullableOfInt32">
            <summary>Sets the shim of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.SetTenantIdNullableOfInt32Boolean">
            <summary>Sets the shim of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkBase.ToString">
            <summary>Sets the shim of UnitOfWorkBase.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs">
            <summary>Shim type of Abp.Domain.Uow.UnitOfWorkFailedEventArgs</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.#ctor(Abp.Domain.Uow.UnitOfWorkFailedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of UnitOfWorkFailedEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of UnitOfWorkFailedEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.ConstructorException">
            <summary>Sets the shim of UnitOfWorkFailedEventArgs.UnitOfWorkFailedEventArgs(Exception exception)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.ExceptionGet">
            <summary>Sets the shim of UnitOfWorkFailedEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkFailedEventArgs.ExceptionSetException">
            <summary>Sets the shim of UnitOfWorkFailedEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions">
            <summary>Shim type of Abp.Domain.Uow.UnitOfWorkOptions</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.#ctor(Abp.Domain.Uow.UnitOfWorkOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.AsyncFlowOptionGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_AsyncFlowOption()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.AsyncFlowOptionSetNullableOfTransactionScopeAsyncFlowOption">
            <summary>Sets the shim of UnitOfWorkOptions.set_AsyncFlowOption(Nullable`1&lt;TransactionScopeAsyncFlowOption&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.FillDefaultsForNonProvidedOptionsIUnitOfWorkDefaultOptions">
            <summary>Sets the shim of UnitOfWorkOptions.FillDefaultsForNonProvidedOptions(IUnitOfWorkDefaultOptions defaultOptions)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.FillOuterUowFiltersForNonProvidedOptionsListOfDataFilterConfiguration">
            <summary>Sets the shim of UnitOfWorkOptions.FillOuterUowFiltersForNonProvidedOptions(List`1&lt;DataFilterConfiguration&gt; filterOverrides)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.FilterOverridesGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_FilterOverrides()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.IsTransactionalGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_IsTransactional()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.IsTransactionalSetNullableOfBoolean">
            <summary>Sets the shim of UnitOfWorkOptions.set_IsTransactional(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.IsolationLevelGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_IsolationLevel()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.IsolationLevelSetNullableOfIsolationLevel">
            <summary>Sets the shim of UnitOfWorkOptions.set_IsolationLevel(Nullable`1&lt;IsolationLevel&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.ScopeGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_Scope()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.ScopeSetNullableOfTransactionScopeOption">
            <summary>Sets the shim of UnitOfWorkOptions.set_Scope(Nullable`1&lt;TransactionScopeOption&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.TimeoutGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_Timeout()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AllInstances.TimeoutSetNullableOfTimeSpan">
            <summary>Sets the shim of UnitOfWorkOptions.set_Timeout(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AsyncFlowOptionGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_AsyncFlowOption()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.AsyncFlowOptionSetNullableOfTransactionScopeAsyncFlowOption">
            <summary>Sets the shim of UnitOfWorkOptions.set_AsyncFlowOption(Nullable`1&lt;TransactionScopeAsyncFlowOption&gt; value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.Constructor">
            <summary>Sets the shim of UnitOfWorkOptions.UnitOfWorkOptions()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.FillDefaultsForNonProvidedOptionsIUnitOfWorkDefaultOptions">
            <summary>Sets the shim of UnitOfWorkOptions.FillDefaultsForNonProvidedOptions(IUnitOfWorkDefaultOptions defaultOptions)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.FillOuterUowFiltersForNonProvidedOptionsListOfDataFilterConfiguration">
            <summary>Sets the shim of UnitOfWorkOptions.FillOuterUowFiltersForNonProvidedOptions(List`1&lt;DataFilterConfiguration&gt; filterOverrides)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.FilterOverridesGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_FilterOverrides()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.IsTransactionalGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_IsTransactional()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.IsTransactionalSetNullableOfBoolean">
            <summary>Sets the shim of UnitOfWorkOptions.set_IsTransactional(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.IsolationLevelGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_IsolationLevel()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.IsolationLevelSetNullableOfIsolationLevel">
            <summary>Sets the shim of UnitOfWorkOptions.set_IsolationLevel(Nullable`1&lt;IsolationLevel&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.ScopeGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_Scope()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.ScopeSetNullableOfTransactionScopeOption">
            <summary>Sets the shim of UnitOfWorkOptions.set_Scope(Nullable`1&lt;TransactionScopeOption&gt; value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.TimeoutGet">
            <summary>Sets the shim of UnitOfWorkOptions.get_Timeout()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.ShimUnitOfWorkOptions.TimeoutSetNullableOfTimeSpan">
            <summary>Sets the shim of UnitOfWorkOptions.set_Timeout(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException">
            <summary>Stub type of Abp.Domain.Uow.AbpDbConcurrencyException</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAbpDbConcurrencyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAbpDbConcurrencyException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.InitializeStub">
            <summary>Initializes a new instance of type StubAbpDbConcurrencyException</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubAbpDbConcurrencyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubAsyncLocalCurrentUnitOfWorkProvider">
            <summary>Stub type of Abp.Domain.Uow.AsyncLocalCurrentUnitOfWorkProvider</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAsyncLocalCurrentUnitOfWorkProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAsyncLocalCurrentUnitOfWorkProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubAsyncLocalCurrentUnitOfWorkProvider.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncLocalCurrentUnitOfWorkProvider</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAsyncLocalCurrentUnitOfWorkProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubAsyncLocalCurrentUnitOfWorkProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs">
            <summary>Stub type of Abp.Domain.Uow.ConnectionStringResolveArgs</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.#ctor(System.Nullable{Abp.MultiTenancy.MultiTenancySides})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionStringResolveArgs</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubConnectionStringResolveArgs.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubDataFilterConfiguration">
            <summary>Stub type of Abp.Domain.Uow.DataFilterConfiguration</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubDataFilterConfiguration.#ctor(System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubDataFilterConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubDataFilterConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubDataFilterConfiguration</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubDataFilterConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubDataFilterConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver">
            <summary>Stub type of Abp.Domain.Uow.DefaultConnectionStringResolver</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver.#ctor(Abp.Configuration.Startup.IAbpStartupConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver.GetNameOrConnectionString(Abp.Domain.Uow.ConnectionStringResolveArgs)">
            <summary>Sets the stub of DefaultConnectionStringResolver.GetNameOrConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver.GetNameOrConnectionStringConnectionStringResolveArgs">
            <summary>Sets the stub of DefaultConnectionStringResolver.GetNameOrConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultConnectionStringResolver</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubDefaultConnectionStringResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork">
            <summary>Stub type of Abp.Domain.Uow.IActiveUnitOfWork</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.#ctor">
            <summary>Initializes a new instance of type StubIActiveUnitOfWork</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#DisableFilter(System.String[])">
            <summary>Sets the stub of IActiveUnitOfWork.DisableFilter(String[] filterNames)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#EnableFilter(System.String[])">
            <summary>Sets the stub of IActiveUnitOfWork.EnableFilter(String[] filterNames)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#GetTenantId">
            <summary>Sets the stub of IActiveUnitOfWork.GetTenantId()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#IsFilterEnabled(System.String)">
            <summary>Sets the stub of IActiveUnitOfWork.IsFilterEnabled(String filterName)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SaveChanges">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChanges()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SaveChangesAsync">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChangesAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SetFilterParameter(System.String,System.String,System.Object)">
            <summary>Sets the stub of IActiveUnitOfWork.SetFilterParameter(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SetTenantId(System.Nullable{System.Int32})">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SetTenantId(System.Nullable{System.Int32},System.Boolean)">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.DisableFilterStringArray">
            <summary>Sets the stub of IActiveUnitOfWork.DisableFilter(String[] filterNames)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.EnableFilterStringArray">
            <summary>Sets the stub of IActiveUnitOfWork.EnableFilter(String[] filterNames)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#Filters">
            <summary>Sets the stub of IActiveUnitOfWork.get_Filters()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.FiltersGet">
            <summary>Sets the stub of IActiveUnitOfWork.get_Filters()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.GetTenantId">
            <summary>Sets the stub of IActiveUnitOfWork.GetTenantId()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#IsDisposed">
            <summary>Sets the stub of IActiveUnitOfWork.get_IsDisposed()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.IsDisposedGet">
            <summary>Sets the stub of IActiveUnitOfWork.get_IsDisposed()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.IsFilterEnabledString">
            <summary>Sets the stub of IActiveUnitOfWork.IsFilterEnabled(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#Options">
            <summary>Sets the stub of IActiveUnitOfWork.get_Options()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.OptionsGet">
            <summary>Sets the stub of IActiveUnitOfWork.get_Options()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.SaveChanges">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChanges()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.SaveChangesAsync">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChangesAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.SetFilterParameterStringStringObject">
            <summary>Sets the stub of IActiveUnitOfWork.SetFilterParameter(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.SetTenantIdNullableOfInt32">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIActiveUnitOfWork.SetTenantIdNullableOfInt32Boolean">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubIConnectionStringResolver">
            <summary>Stub type of Abp.Domain.Uow.IConnectionStringResolver</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIConnectionStringResolver.#ctor">
            <summary>Initializes a new instance of type StubIConnectionStringResolver</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIConnectionStringResolver.Abp#Domain#Uow#IConnectionStringResolver#GetNameOrConnectionString(Abp.Domain.Uow.ConnectionStringResolveArgs)">
            <summary>Sets the stub of IConnectionStringResolver.GetNameOrConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIConnectionStringResolver.GetNameOrConnectionStringConnectionStringResolveArgs">
            <summary>Sets the stub of IConnectionStringResolver.GetNameOrConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubICurrentUnitOfWorkProvider">
            <summary>Stub type of Abp.Domain.Uow.ICurrentUnitOfWorkProvider</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubICurrentUnitOfWorkProvider.#ctor">
            <summary>Initializes a new instance of type StubICurrentUnitOfWorkProvider</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubICurrentUnitOfWorkProvider.AttachBackingFieldToCurrent">
            <summary>Attaches delegates to emulate StubICurrentUnitOfWorkProvider.Current as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubICurrentUnitOfWorkProvider.Abp#Domain#Uow#ICurrentUnitOfWorkProvider#Current">
            <summary>Sets the stub of ICurrentUnitOfWorkProvider.get_Current()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubICurrentUnitOfWorkProvider.CurrentGet">
            <summary>Sets the stub of ICurrentUnitOfWorkProvider.get_Current()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubICurrentUnitOfWorkProvider.CurrentSetIUnitOfWork">
            <summary>Sets the stub of ICurrentUnitOfWorkProvider.set_Current(IUnitOfWork value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubIUnitOfWork">
            <summary>Stub type of Abp.Domain.Uow.IUnitOfWork</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWork</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#DisableFilter(System.String[])">
            <summary>Sets the stub of IActiveUnitOfWork.DisableFilter(String[] filterNames)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#EnableFilter(System.String[])">
            <summary>Sets the stub of IActiveUnitOfWork.EnableFilter(String[] filterNames)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#GetTenantId">
            <summary>Sets the stub of IActiveUnitOfWork.GetTenantId()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#IsFilterEnabled(System.String)">
            <summary>Sets the stub of IActiveUnitOfWork.IsFilterEnabled(String filterName)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SaveChanges">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChanges()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SaveChangesAsync">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChangesAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SetFilterParameter(System.String,System.String,System.Object)">
            <summary>Sets the stub of IActiveUnitOfWork.SetFilterParameter(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SetTenantId(System.Nullable{System.Int32})">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#SetTenantId(System.Nullable{System.Int32},System.Boolean)">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IUnitOfWork#Begin(Abp.Domain.Uow.UnitOfWorkOptions)">
            <summary>Sets the stub of IUnitOfWork.Begin(UnitOfWorkOptions options)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IUnitOfWorkCompleteHandle#Complete">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.Complete()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IUnitOfWorkCompleteHandle#CompleteAsync">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.CompleteAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.AttachBackingFieldToOuter">
            <summary>Attaches delegates to emulate StubIUnitOfWork.Outer as a property with a backing field.</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.BeginUnitOfWorkOptions">
            <summary>Sets the stub of IUnitOfWork.Begin(UnitOfWorkOptions options)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Complete">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.Complete()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.CompleteAsync">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.CompleteAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.DisableFilterStringArray">
            <summary>Sets the stub of IActiveUnitOfWork.DisableFilter(String[] filterNames)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.EnableFilterStringArray">
            <summary>Sets the stub of IActiveUnitOfWork.EnableFilter(String[] filterNames)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#Filters">
            <summary>Sets the stub of IActiveUnitOfWork.get_Filters()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.FiltersGet">
            <summary>Sets the stub of IActiveUnitOfWork.get_Filters()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.GetTenantId">
            <summary>Sets the stub of IActiveUnitOfWork.GetTenantId()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IUnitOfWork#Id">
            <summary>Sets the stub of IUnitOfWork.get_Id()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.IdGet">
            <summary>Sets the stub of IUnitOfWork.get_Id()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#IsDisposed">
            <summary>Sets the stub of IActiveUnitOfWork.get_IsDisposed()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.IsDisposedGet">
            <summary>Sets the stub of IActiveUnitOfWork.get_IsDisposed()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.IsFilterEnabledString">
            <summary>Sets the stub of IActiveUnitOfWork.IsFilterEnabled(String filterName)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IActiveUnitOfWork#Options">
            <summary>Sets the stub of IActiveUnitOfWork.get_Options()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.OptionsGet">
            <summary>Sets the stub of IActiveUnitOfWork.get_Options()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWork.Abp#Domain#Uow#IUnitOfWork#Outer">
            <summary>Sets the stub of IUnitOfWork.get_Outer()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.OuterGet">
            <summary>Sets the stub of IUnitOfWork.get_Outer()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.OuterSetIUnitOfWork">
            <summary>Sets the stub of IUnitOfWork.set_Outer(IUnitOfWork value)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.SaveChanges">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChanges()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.SaveChangesAsync">
            <summary>Sets the stub of IActiveUnitOfWork.SaveChangesAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.SetFilterParameterStringStringObject">
            <summary>Sets the stub of IActiveUnitOfWork.SetFilterParameter(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.SetTenantIdNullableOfInt32">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWork.SetTenantIdNullableOfInt32Boolean">
            <summary>Sets the stub of IActiveUnitOfWork.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWork.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle">
            <summary>Stub type of Abp.Domain.Uow.IUnitOfWorkCompleteHandle</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWorkCompleteHandle</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle.Abp#Domain#Uow#IUnitOfWorkCompleteHandle#Complete">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.Complete()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle.Abp#Domain#Uow#IUnitOfWorkCompleteHandle#CompleteAsync">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.CompleteAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle.Complete">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.Complete()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle.CompleteAsync">
            <summary>Sets the stub of IUnitOfWorkCompleteHandle.CompleteAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkCompleteHandle.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions">
            <summary>Stub type of Abp.Domain.Uow.IUnitOfWorkDefaultOptions</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWorkDefaultOptions</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#OverrideFilter(System.String,System.Boolean)">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.OverrideFilter(String filterName, Boolean isEnabledByDefault)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#RegisterFilter(System.String,System.Boolean)">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.RegisterFilter(String filterName, Boolean isEnabledByDefault)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.AttachBackingFieldToIsTransactionScopeAvailable">
            <summary>Attaches delegates to emulate StubIUnitOfWorkDefaultOptions.IsTransactionScopeAvailable as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.AttachBackingFieldToIsTransactional">
            <summary>Attaches delegates to emulate StubIUnitOfWorkDefaultOptions.IsTransactional as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.AttachBackingFieldToIsolationLevel">
            <summary>Attaches delegates to emulate StubIUnitOfWorkDefaultOptions.IsolationLevel as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.AttachBackingFieldToScope">
            <summary>Attaches delegates to emulate StubIUnitOfWorkDefaultOptions.Scope as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.AttachBackingFieldToTimeout">
            <summary>Attaches delegates to emulate StubIUnitOfWorkDefaultOptions.Timeout as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#ConventionalUowSelectors">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_ConventionalUowSelectors()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.ConventionalUowSelectorsGet">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_ConventionalUowSelectors()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#Filters">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_Filters()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.FiltersGet">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_Filters()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#IsTransactionScopeAvailable">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_IsTransactionScopeAvailable()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.IsTransactionScopeAvailableGet">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_IsTransactionScopeAvailable()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.IsTransactionScopeAvailableSetBoolean">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.set_IsTransactionScopeAvailable(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#IsTransactional">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_IsTransactional()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.IsTransactionalGet">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_IsTransactional()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.IsTransactionalSetBoolean">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.set_IsTransactional(Boolean value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#IsolationLevel">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_IsolationLevel()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.IsolationLevelGet">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_IsolationLevel()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.IsolationLevelSetNullableOfIsolationLevel">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.set_IsolationLevel(Nullable`1&lt;IsolationLevel&gt; value)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.OverrideFilterStringBoolean">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.OverrideFilter(String filterName, Boolean isEnabledByDefault)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.RegisterFilterStringBoolean">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.RegisterFilter(String filterName, Boolean isEnabledByDefault)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#Scope">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_Scope()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.ScopeGet">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_Scope()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.ScopeSetTransactionScopeOption">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.set_Scope(TransactionScopeOption value)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.Abp#Domain#Uow#IUnitOfWorkDefaultOptions#Timeout">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_Timeout()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.TimeoutGet">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.get_Timeout()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkDefaultOptions.TimeoutSetNullableOfTimeSpan">
            <summary>Sets the stub of IUnitOfWorkDefaultOptions.set_Timeout(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter">
            <summary>Stub type of Abp.Domain.Uow.IUnitOfWorkFilterExecuter</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWorkFilterExecuter</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter.Abp#Domain#Uow#IUnitOfWorkFilterExecuter#ApplyDisableFilter(Abp.Domain.Uow.IUnitOfWork,System.String)">
            <summary>Sets the stub of IUnitOfWorkFilterExecuter.ApplyDisableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter.Abp#Domain#Uow#IUnitOfWorkFilterExecuter#ApplyEnableFilter(Abp.Domain.Uow.IUnitOfWork,System.String)">
            <summary>Sets the stub of IUnitOfWorkFilterExecuter.ApplyEnableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter.Abp#Domain#Uow#IUnitOfWorkFilterExecuter#ApplyFilterParameterValue(Abp.Domain.Uow.IUnitOfWork,System.String,System.String,System.Object)">
            <summary>Sets the stub of IUnitOfWorkFilterExecuter.ApplyFilterParameterValue(IUnitOfWork unitOfWork, String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter.ApplyDisableFilterIUnitOfWorkString">
            <summary>Sets the stub of IUnitOfWorkFilterExecuter.ApplyDisableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter.ApplyEnableFilterIUnitOfWorkString">
            <summary>Sets the stub of IUnitOfWorkFilterExecuter.ApplyEnableFilter(IUnitOfWork unitOfWork, String filterName)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkFilterExecuter.ApplyFilterParameterValueIUnitOfWorkStringStringObject">
            <summary>Sets the stub of IUnitOfWorkFilterExecuter.ApplyFilterParameterValue(IUnitOfWork unitOfWork, String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager">
            <summary>Stub type of Abp.Domain.Uow.IUnitOfWorkManager</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWorkManager</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.Abp#Domain#Uow#IUnitOfWorkManager#Begin">
            <summary>Sets the stub of IUnitOfWorkManager.Begin()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.Abp#Domain#Uow#IUnitOfWorkManager#Begin(Abp.Domain.Uow.UnitOfWorkOptions)">
            <summary>Sets the stub of IUnitOfWorkManager.Begin(UnitOfWorkOptions options)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.Abp#Domain#Uow#IUnitOfWorkManager#Begin(System.Transactions.TransactionScopeOption)">
            <summary>Sets the stub of IUnitOfWorkManager.Begin(TransactionScopeOption scope)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.Begin">
            <summary>Sets the stub of IUnitOfWorkManager.Begin()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.BeginTransactionScopeOption">
            <summary>Sets the stub of IUnitOfWorkManager.Begin(TransactionScopeOption scope)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.BeginUnitOfWorkOptions">
            <summary>Sets the stub of IUnitOfWorkManager.Begin(UnitOfWorkOptions options)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.Abp#Domain#Uow#IUnitOfWorkManager#Current">
            <summary>Sets the stub of IUnitOfWorkManager.get_Current()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubIUnitOfWorkManager.CurrentGet">
            <summary>Sets the stub of IUnitOfWorkManager.get_Current()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubNullUnitOfWorkFilterExecuter">
            <summary>Stub type of Abp.Domain.Uow.NullUnitOfWorkFilterExecuter</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubNullUnitOfWorkFilterExecuter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubNullUnitOfWorkFilterExecuter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubNullUnitOfWorkFilterExecuter.InitializeStub">
            <summary>Initializes a new instance of type StubNullUnitOfWorkFilterExecuter</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubNullUnitOfWorkFilterExecuter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubNullUnitOfWorkFilterExecuter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute">
            <summary>Stub type of Abp.Domain.Uow.UnitOfWorkAttribute</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Transactions.IsolationLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Transactions.TransactionScopeOption)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Transactions.IsolationLevel,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Transactions.TransactionScopeOption,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Transactions.TransactionScopeOption,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.#ctor(System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubUnitOfWorkAttribute</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase">
            <summary>Stub type of Abp.Domain.Uow.UnitOfWorkBase</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.#ctor(Abp.Domain.Uow.IConnectionStringResolver,Abp.Domain.Uow.IUnitOfWorkDefaultOptions,Abp.Domain.Uow.IUnitOfWorkFilterExecuter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ApplyDisableFilter(System.String)">
            <summary>Sets the stub of UnitOfWorkBase.ApplyDisableFilter(String filterName)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ApplyDisableFilterString">
            <summary>Sets the stub of UnitOfWorkBase.ApplyDisableFilter(String filterName)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ApplyEnableFilter(System.String)">
            <summary>Sets the stub of UnitOfWorkBase.ApplyEnableFilter(String filterName)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ApplyEnableFilterString">
            <summary>Sets the stub of UnitOfWorkBase.ApplyEnableFilter(String filterName)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ApplyFilterParameterValue(System.String,System.String,System.Object)">
            <summary>Sets the stub of UnitOfWorkBase.ApplyFilterParameterValue(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ApplyFilterParameterValueStringStringObject">
            <summary>Sets the stub of UnitOfWorkBase.ApplyFilterParameterValue(String filterName, String parameterName, Object value)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.BeginUow">
            <summary>Sets the stub of UnitOfWorkBase.BeginUow()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.BeginUow01">
            <summary>Sets the stub of UnitOfWorkBase.BeginUow()</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.CompleteUow">
            <summary>Sets the stub of UnitOfWorkBase.CompleteUow()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.CompleteUow01">
            <summary>Sets the stub of UnitOfWorkBase.CompleteUow()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.CompleteUowAsync">
            <summary>Sets the stub of UnitOfWorkBase.CompleteUowAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.CompleteUowAsync01">
            <summary>Sets the stub of UnitOfWorkBase.CompleteUowAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.DisposeUow">
            <summary>Sets the stub of UnitOfWorkBase.DisposeUow()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.DisposeUow01">
            <summary>Sets the stub of UnitOfWorkBase.DisposeUow()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.InitializeStub">
            <summary>Initializes a new instance of type StubUnitOfWorkBase</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.OnCompleted">
            <summary>Sets the stub of UnitOfWorkBase.OnCompleted()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.OnCompleted01">
            <summary>Sets the stub of UnitOfWorkBase.OnCompleted()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.OnDisposed">
            <summary>Sets the stub of UnitOfWorkBase.OnDisposed()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.OnDisposed01">
            <summary>Sets the stub of UnitOfWorkBase.OnDisposed()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.OnFailed(System.Exception)">
            <summary>Sets the stub of UnitOfWorkBase.OnFailed(Exception exception)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.OnFailedException">
            <summary>Sets the stub of UnitOfWorkBase.OnFailed(Exception exception)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ResolveConnectionString(Abp.Domain.Uow.ConnectionStringResolveArgs)">
            <summary>Sets the stub of UnitOfWorkBase.ResolveConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ResolveConnectionStringConnectionStringResolveArgs">
            <summary>Sets the stub of UnitOfWorkBase.ResolveConnectionString(ConnectionStringResolveArgs args)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SaveChanges">
            <summary>Sets the stub of UnitOfWorkBase.SaveChanges()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SaveChanges01">
            <summary>Sets the stub of UnitOfWorkBase.SaveChanges()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SaveChangesAsync">
            <summary>Sets the stub of UnitOfWorkBase.SaveChangesAsync()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SaveChangesAsync01">
            <summary>Sets the stub of UnitOfWorkBase.SaveChangesAsync()</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SetTenantId(System.Nullable{System.Int32})">
            <summary>Sets the stub of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SetTenantId(System.Nullable{System.Int32},System.Boolean)">
            <summary>Sets the stub of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SetTenantIdNullableOfInt32">
            <summary>Sets the stub of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.SetTenantIdNullableOfInt32Boolean">
            <summary>Sets the stub of UnitOfWorkBase.SetTenantId(Nullable`1&lt;Int32&gt; tenantId, Boolean switchMustHaveTenantEnableDisable)</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ToString">
            <summary>Sets the stub of UnitOfWorkBase.ToString()</summary>
        </member>
        <member name="F:Abp.Domain.Uow.Fakes.StubUnitOfWorkBase.ToString01">
            <summary>Sets the stub of UnitOfWorkBase.ToString()</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubUnitOfWorkFailedEventArgs">
            <summary>Stub type of Abp.Domain.Uow.UnitOfWorkFailedEventArgs</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkFailedEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkFailedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkFailedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubUnitOfWorkFailedEventArgs</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkFailedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkFailedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Uow.Fakes.StubUnitOfWorkOptions">
            <summary>Stub type of Abp.Domain.Uow.UnitOfWorkOptions</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Uow.Fakes.StubUnitOfWorkOptions.InitializeStub">
            <summary>Initializes a new instance of type StubUnitOfWorkOptions</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Uow.Fakes.StubUnitOfWorkOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Domain.Values.Fakes.ShimValueObject`1">
            <summary>Shim type of Abp.Domain.Values.ValueObject`1</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.ShimValueObject`1.#ctor(Abp.Domain.Values.ValueObject{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Domain.Values.Fakes.ShimValueObject`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.AllInstances.EqualsObject">
            <summary>Sets the shim of ValueObject`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.AllInstances.EqualsT0">
            <summary>Sets the shim of ValueObject`1.Equals(!0 other)</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of ValueObject`1.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.ShimValueObject`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.ShimValueObject`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.ShimValueObject`1.Bind(System.IEquatable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.Constructor">
            <summary>Sets the shim of ValueObject`1.ValueObject`1()</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.EqualityOpValueObjectOfT0ValueObjectOfT0">
            <summary>Sets the shim of ValueObject`1.op_Equality(ValueObject`1&lt;!0&gt; x, ValueObject`1&lt;!0&gt; y)</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.EqualsObject">
            <summary>Sets the shim of ValueObject`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.EqualsT0">
            <summary>Sets the shim of ValueObject`1.Equals(!0 other)</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.GetHashCode">
            <summary>Sets the shim of ValueObject`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.ShimValueObject`1.InequalityOpValueObjectOfT0ValueObjectOfT0">
            <summary>Sets the shim of ValueObject`1.op_Inequality(ValueObject`1&lt;!0&gt; x, ValueObject`1&lt;!0&gt; y)</summary>
        </member>
        <member name="T:Abp.Domain.Values.Fakes.StubValueObject`1">
            <summary>Stub type of Abp.Domain.Values.ValueObject`1</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.StubValueObject`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.StubValueObject`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.StubValueObject`1.Equals(System.Object)">
            <summary>Sets the stub of ValueObject`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Domain.Values.Fakes.StubValueObject`1.EqualsObject">
            <summary>Sets the stub of ValueObject`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.StubValueObject`1.GetHashCode">
            <summary>Sets the stub of ValueObject`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Domain.Values.Fakes.StubValueObject`1.GetHashCode01">
            <summary>Sets the stub of ValueObject`1.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Domain.Values.Fakes.StubValueObject`1.InitializeStub">
            <summary>Initializes a new instance of type StubValueObject</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.StubValueObject`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Domain.Values.Fakes.StubValueObject`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry">
            <summary>Shim type of Abp.Events.Bus.Entities.DomainEventEntry</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.#ctor(Abp.Events.Bus.Entities.DomainEventEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.AllInstances.EventDataGet">
            <summary>Sets the shim of DomainEventEntry.get_EventData()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.AllInstances.SourceEntityGet">
            <summary>Sets the shim of DomainEventEntry.get_SourceEntity()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.ConstructorObjectIEventData">
            <summary>Sets the shim of DomainEventEntry.DomainEventEntry(Object sourceEntity, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.EventDataGet">
            <summary>Sets the shim of DomainEventEntry.get_EventData()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimDomainEventEntry.SourceEntityGet">
            <summary>Sets the shim of DomainEventEntry.get_SourceEntity()</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityChangeEntry</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.#ctor(Abp.Events.Bus.Entities.EntityChangeEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.AllInstances.ChangeTypeGet">
            <summary>Sets the shim of EntityChangeEntry.get_ChangeType()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.AllInstances.ChangeTypeSetEntityChangeType">
            <summary>Sets the shim of EntityChangeEntry.set_ChangeType(EntityChangeType value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.AllInstances.EntityGet">
            <summary>Sets the shim of EntityChangeEntry.get_Entity()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.AllInstances.EntitySetObject">
            <summary>Sets the shim of EntityChangeEntry.set_Entity(Object value)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.ChangeTypeGet">
            <summary>Sets the shim of EntityChangeEntry.get_ChangeType()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.ChangeTypeSetEntityChangeType">
            <summary>Sets the shim of EntityChangeEntry.set_ChangeType(EntityChangeType value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.ConstructorObjectEntityChangeType">
            <summary>Sets the shim of EntityChangeEntry.EntityChangeEntry(Object entity, EntityChangeType changeType)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.EntityGet">
            <summary>Sets the shim of EntityChangeEntry.get_Entity()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEntry.EntitySetObject">
            <summary>Sets the shim of EntityChangeEntry.set_Entity(Object value)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityChangeEventHelper</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.#ctor(Abp.Events.Bus.Entities.EntityChangeEventHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.EventBusGet">
            <summary>Sets the shim of EntityChangeEventHelper.get_EventBus()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.EventBusSetIEventBus">
            <summary>Sets the shim of EntityChangeEventHelper.set_EventBus(IEventBus value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerDomainEventsListOfDomainEventEntry">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerDomainEvents(List`1&lt;DomainEventEntry&gt; domainEvents)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEntityChangeEventsListOfEntityChangeEntry">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityChangeEvents(List`1&lt;EntityChangeEntry&gt; changedEntities)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEntityCreatedEventOnUowCompletedObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEntityCreatingEventObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEntityDeletedEventOnUowCompletedObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEntityDeletingEventObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEntityUpdatedEventOnUowCompletedObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEntityUpdatingEventObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEventWithEntityTypeObjectBoolean">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEventWithEntity(Type genericEventType, Object entity, Boolean triggerInCurrentUnitOfWork)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEventsAsyncEntityChangeReport">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEventsAsync(EntityChangeReport changeReport)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEventsEntityChangeReport">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.AllInstances.TriggerEventsInternalEntityChangeReport">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEventsInternal(EntityChangeReport changeReport)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.Bind(Abp.Events.Bus.Entities.IEntityChangeEventHelper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.ConstructorIUnitOfWorkManager">
            <summary>Sets the shim of EntityChangeEventHelper.EntityChangeEventHelper(IUnitOfWorkManager unitOfWorkManager)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.EventBusGet">
            <summary>Sets the shim of EntityChangeEventHelper.get_EventBus()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.EventBusSetIEventBus">
            <summary>Sets the shim of EntityChangeEventHelper.set_EventBus(IEventBus value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerDomainEventsListOfDomainEventEntry">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerDomainEvents(List`1&lt;DomainEventEntry&gt; domainEvents)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEntityChangeEventsListOfEntityChangeEntry">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityChangeEvents(List`1&lt;EntityChangeEntry&gt; changedEntities)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompletedObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEntityCreatingEventObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompletedObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEntityDeletingEventObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompletedObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEntityUpdatingEventObject">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEventWithEntityTypeObjectBoolean">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEventWithEntity(Type genericEventType, Object entity, Boolean triggerInCurrentUnitOfWork)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEventsAsyncEntityChangeReport">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEventsAsync(EntityChangeReport changeReport)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEventsEntityChangeReport">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeEventHelper.TriggerEventsInternalEntityChangeReport">
            <summary>Sets the shim of EntityChangeEventHelper.TriggerEventsInternal(EntityChangeReport changeReport)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityChangeReport</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.#ctor(Abp.Events.Bus.Entities.EntityChangeReport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.AllInstances.ChangedEntitiesGet">
            <summary>Sets the shim of EntityChangeReport.get_ChangedEntities()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.AllInstances.DomainEventsGet">
            <summary>Sets the shim of EntityChangeReport.get_DomainEvents()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.AllInstances.IsEmpty">
            <summary>Sets the shim of EntityChangeReport.IsEmpty()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.AllInstances.ToString01">
            <summary>Sets the shim of EntityChangeReport.ToString()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.ChangedEntitiesGet">
            <summary>Sets the shim of EntityChangeReport.get_ChangedEntities()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.Constructor">
            <summary>Sets the shim of EntityChangeReport.EntityChangeReport()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.DomainEventsGet">
            <summary>Sets the shim of EntityChangeReport.get_DomainEvents()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.IsEmpty">
            <summary>Sets the shim of EntityChangeReport.IsEmpty()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangeReport.ToString">
            <summary>Sets the shim of EntityChangeReport.ToString()</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityChangedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.#ctor(Abp.Events.Bus.Entities.EntityChangedEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangedEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityChangedEventData`1.EntityChangedEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityChangingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.#ctor(Abp.Events.Bus.Entities.EntityChangingEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityChangingEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityChangingEventData`1.EntityChangingEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityCreatedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.#ctor(Abp.Events.Bus.Entities.EntityCreatedEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatedEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityCreatedEventData`1.EntityCreatedEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityCreatingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.#ctor(Abp.Events.Bus.Entities.EntityCreatingEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityCreatingEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityCreatingEventData`1.EntityCreatingEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityDeletedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.#ctor(Abp.Events.Bus.Entities.EntityDeletedEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletedEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityDeletedEventData`1.EntityDeletedEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityDeletingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.#ctor(Abp.Events.Bus.Entities.EntityDeletingEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityDeletingEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityDeletingEventData`1.EntityDeletingEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.#ctor(Abp.Events.Bus.Entities.EntityEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.AllInstances.EntityGet">
            <summary>Sets the shim of EntityEventData`1.get_Entity()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.AllInstances.EntitySetT0">
            <summary>Sets the shim of EntityEventData`1.set_Entity(!0 value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.AllInstances.GetConstructorArgs">
            <summary>Sets the shim of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityEventData`1.EntityEventData`1(!0 entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.EntityGet">
            <summary>Sets the shim of EntityEventData`1.get_Entity()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.EntitySetT0">
            <summary>Sets the shim of EntityEventData`1.set_Entity(!0 value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityEventData`1.GetConstructorArgs">
            <summary>Sets the shim of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityUpdatedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.#ctor(Abp.Events.Bus.Entities.EntityUpdatedEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatedEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityUpdatedEventData`1.EntityUpdatedEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1">
            <summary>Shim type of Abp.Events.Bus.Entities.EntityUpdatingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.#ctor(Abp.Events.Bus.Entities.EntityUpdatingEventData{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.Bind(Abp.Events.Bus.IEventDataWithInheritableGenericArgument)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimEntityUpdatingEventData`1.ConstructorT0">
            <summary>Sets the shim of EntityUpdatingEventData`1.EntityUpdatingEventData`1(!0 entity)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper">
            <summary>Shim type of Abp.Events.Bus.Entities.NullEntityChangeEventHelper</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.#ctor(Abp.Events.Bus.Entities.NullEntityChangeEventHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEntityCreatedEventOnUowCompletedObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEntityCreatingEventObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEntityDeletedEventOnUowCompletedObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEntityDeletingEventObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEntityUpdatedEventOnUowCompletedObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEntityUpdatingEventObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEventsAsyncEntityChangeReport">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEventsAsync(EntityChangeReport changeReport)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.AllInstances.TriggerEventsEntityChangeReport">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.Bind(Abp.Events.Bus.Entities.IEntityChangeEventHelper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.Constructor">
            <summary>Sets the shim of NullEntityChangeEventHelper.NullEntityChangeEventHelper()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.InstanceGet">
            <summary>Sets the shim of NullEntityChangeEventHelper.get_Instance()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.StaticConstructor">
            <summary>Sets the shim of NullEntityChangeEventHelper.NullEntityChangeEventHelper()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompletedObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEntityCreatingEventObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompletedObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEntityDeletingEventObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompletedObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEntityUpdatingEventObject">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEventsAsyncEntityChangeReport">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEventsAsync(EntityChangeReport changeReport)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.ShimNullEntityChangeEventHelper.TriggerEventsEntityChangeReport">
            <summary>Sets the shim of NullEntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubDomainEventEntry">
            <summary>Stub type of Abp.Events.Bus.Entities.DomainEventEntry</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubDomainEventEntry.#ctor(System.Object,Abp.Events.Bus.IEventData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubDomainEventEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubDomainEventEntry.InitializeStub">
            <summary>Initializes a new instance of type StubDomainEventEntry</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubDomainEventEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubDomainEventEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEntry">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityChangeEntry</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEntry.#ctor(System.Object,Abp.Events.Bus.Entities.EntityChangeType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEntry.InitializeStub">
            <summary>Initializes a new instance of type StubEntityChangeEntry</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityChangeEventHelper</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.#ctor(Abp.Domain.Uow.IUnitOfWorkManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.InitializeStub">
            <summary>Initializes a new instance of type StubEntityChangeEventHelper</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerDomainEvents(System.Collections.Generic.List{Abp.Events.Bus.Entities.DomainEventEntry})">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerDomainEvents(List`1&lt;DomainEventEntry&gt; domainEvents)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerDomainEventsListOfDomainEventEntry">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerDomainEvents(List`1&lt;DomainEventEntry&gt; domainEvents)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityChangeEvents(System.Collections.Generic.List{Abp.Events.Bus.Entities.EntityChangeEntry})">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityChangeEvents(List`1&lt;EntityChangeEntry&gt; changedEntities)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityChangeEventsListOfEntityChangeEntry">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityChangeEvents(List`1&lt;EntityChangeEntry&gt; changedEntities)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(System.Object)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompletedObject">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityCreatingEvent(System.Object)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityCreatingEventObject">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(System.Object)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompletedObject">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityDeletingEvent(System.Object)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityDeletingEventObject">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(System.Object)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompletedObject">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityUpdatingEvent(System.Object)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEntityUpdatingEventObject">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEventWithEntity(System.Type,System.Object,System.Boolean)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEventWithEntity(Type genericEventType, Object entity, Boolean triggerInCurrentUnitOfWork)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEventWithEntityTypeObjectBoolean">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEventWithEntity(Type genericEventType, Object entity, Boolean triggerInCurrentUnitOfWork)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEvents(Abp.Events.Bus.Entities.EntityChangeReport)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEventsEntityChangeReport">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEventsInternal(Abp.Events.Bus.Entities.EntityChangeReport)">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEventsInternal(EntityChangeReport changeReport)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeEventHelper.TriggerEventsInternalEntityChangeReport">
            <summary>Sets the stub of EntityChangeEventHelper.TriggerEventsInternal(EntityChangeReport changeReport)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityChangeReport</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport.InitializeStub">
            <summary>Initializes a new instance of type StubEntityChangeReport</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport.ToString">
            <summary>Sets the stub of EntityChangeReport.ToString()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangeReport.ToString01">
            <summary>Sets the stub of EntityChangeReport.ToString()</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityChangedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityChangedEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangedEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityChangingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityChangingEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityChangingEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityCreatedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityCreatedEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityCreatedEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityCreatingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityCreatingEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityCreatingEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityDeletedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityDeletedEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityDeletedEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityDeletingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityDeletingEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityDeletingEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityUpdatedEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityUpdatedEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatedEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1">
            <summary>Stub type of Abp.Events.Bus.Entities.EntityUpdatingEventData`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1.GetConstructorArgs">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1.GetConstructorArgs01">
            <summary>Sets the stub of EntityEventData`1.GetConstructorArgs()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1.InitializeStub">
            <summary>Initializes a new instance of type StubEntityUpdatingEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Entities.Fakes.StubEntityUpdatingEventData`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper">
            <summary>Stub type of Abp.Events.Bus.Entities.IEntityChangeEventHelper</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.#ctor">
            <summary>Initializes a new instance of type StubIEntityChangeEventHelper</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEntityCreatedEventOnUowCompleted(System.Object)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEntityCreatingEvent(System.Object)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEntityDeletedEventOnUowCompleted(System.Object)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEntityDeletingEvent(System.Object)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEntityUpdatedEventOnUowCompleted(System.Object)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEntityUpdatingEvent(System.Object)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEvents(Abp.Events.Bus.Entities.EntityChangeReport)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.Abp#Events#Bus#Entities#IEntityChangeEventHelper#TriggerEventsAsync(Abp.Events.Bus.Entities.EntityChangeReport)">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEventsAsync(EntityChangeReport changeReport)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompletedObject">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityCreatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEntityCreatingEventObject">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityCreatingEvent(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompletedObject">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityDeletedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEntityDeletingEventObject">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityDeletingEvent(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompletedObject">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityUpdatedEventOnUowCompleted(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEntityUpdatingEventObject">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEntityUpdatingEvent(Object entity)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEventsAsyncEntityChangeReport">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEventsAsync(EntityChangeReport changeReport)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Entities.Fakes.StubIEntityChangeEventHelper.TriggerEventsEntityChangeReport">
            <summary>Sets the stub of IEntityChangeEventHelper.TriggerEvents(EntityChangeReport changeReport)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData">
            <summary>Shim type of Abp.Events.Bus.Exceptions.AbpHandledExceptionData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.#ctor(Abp.Events.Bus.Exceptions.AbpHandledExceptionData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimAbpHandledExceptionData.ConstructorException">
            <summary>Sets the shim of AbpHandledExceptionData.AbpHandledExceptionData(Exception exception)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData">
            <summary>Shim type of Abp.Events.Bus.Exceptions.ExceptionData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.#ctor(Abp.Events.Bus.Exceptions.ExceptionData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.AllInstances.ExceptionGet">
            <summary>Sets the shim of ExceptionData.get_Exception()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.AllInstances.ExceptionSetException">
            <summary>Sets the shim of ExceptionData.set_Exception(Exception value)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.ConstructorException">
            <summary>Sets the shim of ExceptionData.ExceptionData(Exception exception)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.ExceptionGet">
            <summary>Sets the shim of ExceptionData.get_Exception()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.ShimExceptionData.ExceptionSetException">
            <summary>Sets the shim of ExceptionData.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Exceptions.Fakes.StubAbpHandledExceptionData">
            <summary>Stub type of Abp.Events.Bus.Exceptions.AbpHandledExceptionData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.StubAbpHandledExceptionData.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.StubAbpHandledExceptionData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.StubAbpHandledExceptionData.InitializeStub">
            <summary>Initializes a new instance of type StubAbpHandledExceptionData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.StubAbpHandledExceptionData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.StubAbpHandledExceptionData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Exceptions.Fakes.StubExceptionData">
            <summary>Stub type of Abp.Events.Bus.Exceptions.ExceptionData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.StubExceptionData.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.StubExceptionData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Exceptions.Fakes.StubExceptionData.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.StubExceptionData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Exceptions.Fakes.StubExceptionData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory">
            <summary>Shim type of Abp.Events.Bus.Factories.IocHandlerFactory</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.#ctor(Abp.Events.Bus.Factories.IocHandlerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.AllInstances.GetHandler">
            <summary>Sets the shim of IocHandlerFactory.GetHandler()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.AllInstances.HandlerTypeGet">
            <summary>Sets the shim of IocHandlerFactory.get_HandlerType()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.AllInstances.HandlerTypeSetType">
            <summary>Sets the shim of IocHandlerFactory.set_HandlerType(Type value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.AllInstances.ReleaseHandlerIEventHandler">
            <summary>Sets the shim of IocHandlerFactory.ReleaseHandler(IEventHandler handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.Bind(Abp.Events.Bus.Factories.IEventHandlerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.ConstructorIIocResolverType">
            <summary>Sets the shim of IocHandlerFactory.IocHandlerFactory(IIocResolver iocResolver, Type handlerType)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.GetHandler">
            <summary>Sets the shim of IocHandlerFactory.GetHandler()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.HandlerTypeGet">
            <summary>Sets the shim of IocHandlerFactory.get_HandlerType()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.HandlerTypeSetType">
            <summary>Sets the shim of IocHandlerFactory.set_HandlerType(Type value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.ShimIocHandlerFactory.ReleaseHandlerIEventHandler">
            <summary>Sets the shim of IocHandlerFactory.ReleaseHandler(IEventHandler handler)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Factories.Fakes.StubIEventHandlerFactory">
            <summary>Stub type of Abp.Events.Bus.Factories.IEventHandlerFactory</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.StubIEventHandlerFactory.#ctor">
            <summary>Initializes a new instance of type StubIEventHandlerFactory</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.StubIEventHandlerFactory.Abp#Events#Bus#Factories#IEventHandlerFactory#GetHandler">
            <summary>Sets the stub of IEventHandlerFactory.GetHandler()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.StubIEventHandlerFactory.Abp#Events#Bus#Factories#IEventHandlerFactory#ReleaseHandler(Abp.Events.Bus.Handlers.IEventHandler)">
            <summary>Sets the stub of IEventHandlerFactory.ReleaseHandler(IEventHandler handler)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Factories.Fakes.StubIEventHandlerFactory.GetHandler">
            <summary>Sets the stub of IEventHandlerFactory.GetHandler()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Factories.Fakes.StubIEventHandlerFactory.ReleaseHandlerIEventHandler">
            <summary>Sets the stub of IEventHandlerFactory.ReleaseHandler(IEventHandler handler)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Factories.Fakes.StubIocHandlerFactory">
            <summary>Stub type of Abp.Events.Bus.Factories.IocHandlerFactory</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.StubIocHandlerFactory.#ctor(Abp.Dependency.IIocResolver,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.StubIocHandlerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Factories.Fakes.StubIocHandlerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubIocHandlerFactory</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.StubIocHandlerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Factories.Fakes.StubIocHandlerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.ShimEventBus">
            <summary>Shim type of Abp.Events.Bus.EventBus</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.#ctor(Abp.Events.Bus.EventBus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.GetOrCreateHandlerFactoriesType">
            <summary>Sets the shim of EventBus.GetOrCreateHandlerFactories(Type eventType)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.LoggerGet">
            <summary>Sets the shim of EventBus.get_Logger()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of EventBus.set_Logger(ILogger value)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.RegisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.EventBus,System.Action{``0},System.IDisposable})">
            <summary>Sets the shim of EventBus.Register(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.RegisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.EventBus,Abp.Events.Bus.Factories.IEventHandlerFactory,System.IDisposable})">
            <summary>Sets the shim of EventBus.Register(IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.RegisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.EventBus,Abp.Events.Bus.Handlers.IEventHandler{``0},System.IDisposable})">
            <summary>Sets the shim of EventBus.Register(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.RegisterOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.EventBus,System.IDisposable})">
            <summary>Sets the shim of EventBus.Register()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.RegisterTypeIEventHandler">
            <summary>Sets the shim of EventBus.Register(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.RegisterTypeIEventHandlerFactory">
            <summary>Sets the shim of EventBus.Register(Type eventType, IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.EventBus,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventBus.TriggerAsync(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerAsyncOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.EventBus,System.Object,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventBus.TriggerAsync(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerAsyncTypeIEventData">
            <summary>Sets the shim of EventBus.TriggerAsync(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerAsyncTypeObjectIEventData">
            <summary>Sets the shim of EventBus.TriggerAsync(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerHandlingExceptionTypeObjectIEventDataListOfException">
            <summary>Sets the shim of EventBus.TriggerHandlingException(Type eventType, Object eventSource, IEventData eventData, List`1&lt;Exception&gt; exceptions)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.EventBus,``0})">
            <summary>Sets the shim of EventBus.Trigger(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.EventBus,System.Object,``0})">
            <summary>Sets the shim of EventBus.Trigger(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerTypeIEventData">
            <summary>Sets the shim of EventBus.Trigger(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.TriggerTypeObjectIEventData">
            <summary>Sets the shim of EventBus.Trigger(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.UnregisterAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.EventBus})">
            <summary>Sets the shim of EventBus.UnregisterAll()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.UnregisterAllType">
            <summary>Sets the shim of EventBus.UnregisterAll(Type eventType)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.UnregisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.EventBus,System.Action{``0}})">
            <summary>Sets the shim of EventBus.Unregister(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.UnregisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.EventBus,Abp.Events.Bus.Factories.IEventHandlerFactory})">
            <summary>Sets the shim of EventBus.Unregister(IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.UnregisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.EventBus,Abp.Events.Bus.Handlers.IEventHandler{``0}})">
            <summary>Sets the shim of EventBus.Unregister(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.UnregisterTypeIEventHandler">
            <summary>Sets the shim of EventBus.Unregister(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.AllInstances.UnregisterTypeIEventHandlerFactory">
            <summary>Sets the shim of EventBus.Unregister(Type eventType, IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.Bind(Abp.Events.Bus.IEventBus)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.Constructor">
            <summary>Sets the shim of EventBus.EventBus()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.DefaultGet">
            <summary>Sets the shim of EventBus.get_Default()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.GetOrCreateHandlerFactoriesType">
            <summary>Sets the shim of EventBus.GetOrCreateHandlerFactories(Type eventType)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.LoggerGet">
            <summary>Sets the shim of EventBus.get_Logger()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.LoggerSetILogger">
            <summary>Sets the shim of EventBus.set_Logger(ILogger value)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.RegisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0},System.IDisposable})">
            <summary>Sets the shim of EventBus.Register(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.RegisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.Factories.IEventHandlerFactory,System.IDisposable})">
            <summary>Sets the shim of EventBus.Register(IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.RegisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.Handlers.IEventHandler{``0},System.IDisposable})">
            <summary>Sets the shim of EventBus.Register(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.RegisterOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IDisposable})">
            <summary>Sets the shim of EventBus.Register()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.RegisterTypeIEventHandler">
            <summary>Sets the shim of EventBus.Register(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.RegisterTypeIEventHandlerFactory">
            <summary>Sets the shim of EventBus.Register(Type eventType, IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.ShouldTriggerEventForHandlerTypeType">
            <summary>Sets the shim of EventBus.ShouldTriggerEventForHandler(Type eventType, Type handlerType)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.StaticConstructor">
            <summary>Sets the shim of EventBus.EventBus()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.TriggerAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventBus.TriggerAsync(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.TriggerAsyncOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventBus.TriggerAsync(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.TriggerAsyncTypeIEventData">
            <summary>Sets the shim of EventBus.TriggerAsync(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.TriggerAsyncTypeObjectIEventData">
            <summary>Sets the shim of EventBus.TriggerAsync(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.TriggerHandlingExceptionTypeObjectIEventDataListOfException">
            <summary>Sets the shim of EventBus.TriggerHandlingException(Type eventType, Object eventSource, IEventData eventData, List`1&lt;Exception&gt; exceptions)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.TriggerOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of EventBus.Trigger(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.TriggerOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,``0})">
            <summary>Sets the shim of EventBus.Trigger(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.TriggerTypeIEventData">
            <summary>Sets the shim of EventBus.Trigger(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.TriggerTypeObjectIEventData">
            <summary>Sets the shim of EventBus.Trigger(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.UnregisterAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of EventBus.UnregisterAll()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.UnregisterAllType">
            <summary>Sets the shim of EventBus.UnregisterAll(Type eventType)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.UnregisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Action{``0}})">
            <summary>Sets the shim of EventBus.Unregister(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.UnregisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.Factories.IEventHandlerFactory})">
            <summary>Sets the shim of EventBus.Unregister(IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventBus.UnregisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.Handlers.IEventHandler{``0}})">
            <summary>Sets the shim of EventBus.Unregister(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.UnregisterTypeIEventHandler">
            <summary>Sets the shim of EventBus.Unregister(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventBus.UnregisterTypeIEventHandlerFactory">
            <summary>Sets the shim of EventBus.Unregister(Type eventType, IEventHandlerFactory factory)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.ShimEventData">
            <summary>Shim type of Abp.Events.Bus.EventData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventData.#ctor(Abp.Events.Bus.EventData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.ShimEventData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.AllInstances.EventSourceGet">
            <summary>Sets the shim of EventData.get_EventSource()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.AllInstances.EventSourceSetObject">
            <summary>Sets the shim of EventData.set_EventSource(Object value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.AllInstances.EventTimeGet">
            <summary>Sets the shim of EventData.get_EventTime()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.AllInstances.EventTimeSetDateTime">
            <summary>Sets the shim of EventData.set_EventTime(DateTime value)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimEventData.Bind(Abp.Events.Bus.IEventData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.Constructor">
            <summary>Sets the shim of EventData.EventData()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.EventSourceGet">
            <summary>Sets the shim of EventData.get_EventSource()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.EventSourceSetObject">
            <summary>Sets the shim of EventData.set_EventSource(Object value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.EventTimeGet">
            <summary>Sets the shim of EventData.get_EventTime()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimEventData.EventTimeSetDateTime">
            <summary>Sets the shim of EventData.set_EventTime(DateTime value)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.ShimNullEventBus">
            <summary>Shim type of Abp.Events.Bus.NullEventBus</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.#ctor(Abp.Events.Bus.NullEventBus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.RegisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.NullEventBus,System.Action{``0},System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.RegisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.NullEventBus,Abp.Events.Bus.Factories.IEventHandlerFactory,System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register(IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.RegisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.NullEventBus,Abp.Events.Bus.Handlers.IEventHandler{``0},System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.RegisterOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.NullEventBus,System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.RegisterTypeIEventHandler">
            <summary>Sets the shim of NullEventBus.Register(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.RegisterTypeIEventHandlerFactory">
            <summary>Sets the shim of NullEventBus.Register(Type eventType, IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.NullEventBus,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of NullEventBus.TriggerAsync(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerAsyncOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.NullEventBus,System.Object,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of NullEventBus.TriggerAsync(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerAsyncTypeIEventData">
            <summary>Sets the shim of NullEventBus.TriggerAsync(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerAsyncTypeObjectIEventData">
            <summary>Sets the shim of NullEventBus.TriggerAsync(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.NullEventBus,``0})">
            <summary>Sets the shim of NullEventBus.Trigger(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.NullEventBus,System.Object,``0})">
            <summary>Sets the shim of NullEventBus.Trigger(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerTypeIEventData">
            <summary>Sets the shim of NullEventBus.Trigger(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.TriggerTypeObjectIEventData">
            <summary>Sets the shim of NullEventBus.Trigger(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.UnregisterAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.NullEventBus})">
            <summary>Sets the shim of NullEventBus.UnregisterAll()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.UnregisterAllType">
            <summary>Sets the shim of NullEventBus.UnregisterAll(Type eventType)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.UnregisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.NullEventBus,System.Action{``0}})">
            <summary>Sets the shim of NullEventBus.Unregister(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.UnregisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.NullEventBus,Abp.Events.Bus.Factories.IEventHandlerFactory})">
            <summary>Sets the shim of NullEventBus.Unregister(IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.UnregisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.NullEventBus,Abp.Events.Bus.Handlers.IEventHandler{``0}})">
            <summary>Sets the shim of NullEventBus.Unregister(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.UnregisterTypeIEventHandler">
            <summary>Sets the shim of NullEventBus.Unregister(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.AllInstances.UnregisterTypeIEventHandlerFactory">
            <summary>Sets the shim of NullEventBus.Unregister(Type eventType, IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.Bind(Abp.Events.Bus.IEventBus)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.Constructor">
            <summary>Sets the shim of NullEventBus.NullEventBus()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.InstanceGet">
            <summary>Sets the shim of NullEventBus.get_Instance()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.RegisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0},System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.RegisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.Factories.IEventHandlerFactory,System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register(IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.RegisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.Handlers.IEventHandler{``0},System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.RegisterOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IDisposable})">
            <summary>Sets the shim of NullEventBus.Register()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.RegisterTypeIEventHandler">
            <summary>Sets the shim of NullEventBus.Register(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.RegisterTypeIEventHandlerFactory">
            <summary>Sets the shim of NullEventBus.Register(Type eventType, IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.StaticConstructor">
            <summary>Sets the shim of NullEventBus.NullEventBus()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of NullEventBus.TriggerAsync(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerAsyncOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0,System.Threading.Tasks.Task})">
            <summary>Sets the shim of NullEventBus.TriggerAsync(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerAsyncTypeIEventData">
            <summary>Sets the shim of NullEventBus.TriggerAsync(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerAsyncTypeObjectIEventData">
            <summary>Sets the shim of NullEventBus.TriggerAsync(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of NullEventBus.Trigger(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,``0})">
            <summary>Sets the shim of NullEventBus.Trigger(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerTypeIEventData">
            <summary>Sets the shim of NullEventBus.Trigger(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.TriggerTypeObjectIEventData">
            <summary>Sets the shim of NullEventBus.Trigger(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.UnregisterAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of NullEventBus.UnregisterAll()</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.UnregisterAllType">
            <summary>Sets the shim of NullEventBus.UnregisterAll(Type eventType)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.UnregisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Action{``0}})">
            <summary>Sets the shim of NullEventBus.Unregister(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.UnregisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.Factories.IEventHandlerFactory})">
            <summary>Sets the shim of NullEventBus.Unregister(IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.ShimNullEventBus.UnregisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.Handlers.IEventHandler{``0}})">
            <summary>Sets the shim of NullEventBus.Unregister(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.UnregisterTypeIEventHandler">
            <summary>Sets the shim of NullEventBus.Unregister(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.ShimNullEventBus.UnregisterTypeIEventHandlerFactory">
            <summary>Sets the shim of NullEventBus.Unregister(Type eventType, IEventHandlerFactory factory)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.StubEventBus">
            <summary>Stub type of Abp.Events.Bus.EventBus</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubEventBus.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubEventBus.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubEventBus.InitializeStub">
            <summary>Initializes a new instance of type StubEventBus</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubEventBus.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubEventBus.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.StubEventData">
            <summary>Stub type of Abp.Events.Bus.EventData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubEventData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubEventData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubEventData.InitializeStub">
            <summary>Initializes a new instance of type StubEventData</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubEventData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubEventData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.StubIEventBus">
            <summary>Stub type of Abp.Events.Bus.IEventBus</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.#ctor">
            <summary>Initializes a new instance of type StubIEventBus</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Register``2">
            <summary>Sets the stub of IEventBus.Register()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Register``1(Abp.Events.Bus.Factories.IEventHandlerFactory)">
            <summary>Sets the stub of IEventBus.Register(IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Register``1(Abp.Events.Bus.Handlers.IEventHandler{``0})">
            <summary>Sets the stub of IEventBus.Register(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Register``1(System.Action{``0})">
            <summary>Sets the stub of IEventBus.Register(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Register(System.Type,Abp.Events.Bus.Factories.IEventHandlerFactory)">
            <summary>Sets the stub of IEventBus.Register(Type eventType, IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Register(System.Type,Abp.Events.Bus.Handlers.IEventHandler)">
            <summary>Sets the stub of IEventBus.Register(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Trigger``1(``0)">
            <summary>Sets the stub of IEventBus.Trigger(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Trigger``1(System.Object,``0)">
            <summary>Sets the stub of IEventBus.Trigger(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Trigger(System.Type,Abp.Events.Bus.IEventData)">
            <summary>Sets the stub of IEventBus.Trigger(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Trigger(System.Type,System.Object,Abp.Events.Bus.IEventData)">
            <summary>Sets the stub of IEventBus.Trigger(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#TriggerAsync``1(``0)">
            <summary>Sets the stub of IEventBus.TriggerAsync(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#TriggerAsync``1(System.Object,``0)">
            <summary>Sets the stub of IEventBus.TriggerAsync(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#TriggerAsync(System.Type,Abp.Events.Bus.IEventData)">
            <summary>Sets the stub of IEventBus.TriggerAsync(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#TriggerAsync(System.Type,System.Object,Abp.Events.Bus.IEventData)">
            <summary>Sets the stub of IEventBus.TriggerAsync(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Unregister``1(Abp.Events.Bus.Factories.IEventHandlerFactory)">
            <summary>Sets the stub of IEventBus.Unregister(IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Unregister``1(Abp.Events.Bus.Handlers.IEventHandler{``0})">
            <summary>Sets the stub of IEventBus.Unregister(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Unregister``1(System.Action{``0})">
            <summary>Sets the stub of IEventBus.Unregister(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Unregister(System.Type,Abp.Events.Bus.Factories.IEventHandlerFactory)">
            <summary>Sets the stub of IEventBus.Unregister(Type eventType, IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#Unregister(System.Type,Abp.Events.Bus.Handlers.IEventHandler)">
            <summary>Sets the stub of IEventBus.Unregister(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#UnregisterAll``1">
            <summary>Sets the stub of IEventBus.UnregisterAll()</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.Abp#Events#Bus#IEventBus#UnregisterAll(System.Type)">
            <summary>Sets the stub of IEventBus.UnregisterAll(Type eventType)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.RegisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0},System.IDisposable})">
            <summary>Sets stubs of Register(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.RegisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.Factories.IEventHandlerFactory,System.IDisposable})">
            <summary>Sets stubs of Register(IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.RegisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Events.Bus.Handlers.IEventHandler{``0},System.IDisposable})">
            <summary>Sets stubs of Register(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.RegisterOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IDisposable})">
            <summary>Sets stubs of Register()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.RegisterTypeIEventHandler">
            <summary>Sets the stub of IEventBus.Register(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.RegisterTypeIEventHandlerFactory">
            <summary>Sets the stub of IEventBus.Register(Type eventType, IEventHandlerFactory handlerFactory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.TriggerAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task})">
            <summary>Sets stubs of TriggerAsync(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.TriggerAsyncOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0,System.Threading.Tasks.Task})">
            <summary>Sets stubs of TriggerAsync(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.TriggerAsyncTypeIEventData">
            <summary>Sets the stub of IEventBus.TriggerAsync(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.TriggerAsyncTypeObjectIEventData">
            <summary>Sets the stub of IEventBus.TriggerAsync(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.TriggerOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets stubs of Trigger(!!0 eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.TriggerOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,``0})">
            <summary>Sets stubs of Trigger(Object eventSource, !!0 eventData)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.TriggerTypeIEventData">
            <summary>Sets the stub of IEventBus.Trigger(Type eventType, IEventData eventData)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.TriggerTypeObjectIEventData">
            <summary>Sets the stub of IEventBus.Trigger(Type eventType, Object eventSource, IEventData eventData)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.UnregisterAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of UnregisterAll()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.UnregisterAllType">
            <summary>Sets the stub of IEventBus.UnregisterAll(Type eventType)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.UnregisterOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Action{``0}})">
            <summary>Sets stubs of Unregister(Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.UnregisterOf1IEventHandlerFactory``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.Factories.IEventHandlerFactory})">
            <summary>Sets stubs of Unregister(IEventHandlerFactory factory)</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventBus.UnregisterOf1IEventHandlerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Abp.Events.Bus.Handlers.IEventHandler{``0}})">
            <summary>Sets stubs of Unregister(IEventHandler`1&lt;!!0&gt; handler)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.UnregisterTypeIEventHandler">
            <summary>Sets the stub of IEventBus.Unregister(Type eventType, IEventHandler handler)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventBus.UnregisterTypeIEventHandlerFactory">
            <summary>Sets the stub of IEventBus.Unregister(Type eventType, IEventHandlerFactory factory)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.StubIEventData">
            <summary>Stub type of Abp.Events.Bus.IEventData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventData.#ctor">
            <summary>Initializes a new instance of type StubIEventData</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventData.AttachBackingFieldToEventSource">
            <summary>Attaches delegates to emulate StubIEventData.EventSource as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventData.AttachBackingFieldToEventTime">
            <summary>Attaches delegates to emulate StubIEventData.EventTime as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubIEventData.Abp#Events#Bus#IEventData#EventSource">
            <summary>Sets the stub of IEventData.get_EventSource()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventData.EventSourceGet">
            <summary>Sets the stub of IEventData.get_EventSource()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventData.EventSourceSetObject">
            <summary>Sets the stub of IEventData.set_EventSource(Object value)</summary>
        </member>
        <member name="P:Abp.Events.Bus.Fakes.StubIEventData.Abp#Events#Bus#IEventData#EventTime">
            <summary>Sets the stub of IEventData.get_EventTime()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventData.EventTimeGet">
            <summary>Sets the stub of IEventData.get_EventTime()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventData.EventTimeSetDateTime">
            <summary>Sets the stub of IEventData.set_EventTime(DateTime value)</summary>
        </member>
        <member name="T:Abp.Events.Bus.Fakes.StubIEventDataWithInheritableGenericArgument">
            <summary>Stub type of Abp.Events.Bus.IEventDataWithInheritableGenericArgument</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventDataWithInheritableGenericArgument.#ctor">
            <summary>Initializes a new instance of type StubIEventDataWithInheritableGenericArgument</summary>
        </member>
        <member name="M:Abp.Events.Bus.Fakes.StubIEventDataWithInheritableGenericArgument.Abp#Events#Bus#IEventDataWithInheritableGenericArgument#GetConstructorArgs">
            <summary>Sets the stub of IEventDataWithInheritableGenericArgument.GetConstructorArgs()</summary>
        </member>
        <member name="F:Abp.Events.Bus.Fakes.StubIEventDataWithInheritableGenericArgument.GetConstructorArgs">
            <summary>Sets the stub of IEventDataWithInheritableGenericArgument.GetConstructorArgs()</summary>
        </member>
        <member name="T:Abp.Events.Bus.Handlers.Fakes.StubIEventHandler">
            <summary>Stub type of Abp.Events.Bus.Handlers.IEventHandler</summary>
        </member>
        <member name="M:Abp.Events.Bus.Handlers.Fakes.StubIEventHandler.#ctor">
            <summary>Initializes a new instance of type StubIEventHandler</summary>
        </member>
        <member name="T:Abp.Events.Bus.Handlers.Fakes.StubIEventHandler`1">
            <summary>Stub type of Abp.Events.Bus.Handlers.IEventHandler`1</summary>
        </member>
        <member name="M:Abp.Events.Bus.Handlers.Fakes.StubIEventHandler`1.#ctor">
            <summary>Initializes a new instance of type StubIEventHandler</summary>
        </member>
        <member name="M:Abp.Events.Bus.Handlers.Fakes.StubIEventHandler`1.Abp#Events#Bus#Handlers#IEventHandler{TEventData}#HandleEvent(`0)">
            <summary>Sets the stub of IEventHandler`1.HandleEvent(!0 eventData)</summary>
        </member>
        <member name="F:Abp.Events.Bus.Handlers.Fakes.StubIEventHandler`1.HandleEventT0">
            <summary>Sets the stub of IEventHandler`1.HandleEvent(!0 eventData)</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimComparableExtensions">
            <summary>Shim type of Abp.Extensions.ComparableExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimComparableExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimComparableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimComparableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimComparableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimComparableExtensions.IsBetweenOf1M0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,``0,System.Boolean})">
            <summary>Sets the shim of ComparableExtensions.IsBetween(!!0 value, !!0 minInclusiveValue, !!0 maxInclusiveValue)</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimDateTimeExtensions">
            <summary>Shim type of Abp.Extensions.DateTimeExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDateTimeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDateTimeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDateTimeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimDateTimeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimDateTimeRangeExtensions">
            <summary>Shim type of Abp.Extensions.DateTimeRangeExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDateTimeRangeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDateTimeRangeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDateTimeRangeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimDateTimeRangeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimDateTimeRangeExtensions.SetFromIDateTimeRangeIDateTimeRange">
            <summary>Sets the shim of DateTimeRangeExtensions.SetFrom(IDateTimeRange target, IDateTimeRange source)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimDateTimeRangeExtensions.SetToIDateTimeRangeIDateTimeRange">
            <summary>Sets the shim of DateTimeRangeExtensions.SetTo(IDateTimeRange source, IDateTimeRange target)</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimDayOfWeekExtensions">
            <summary>Shim type of Abp.Extensions.DayOfWeekExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDayOfWeekExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDayOfWeekExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimDayOfWeekExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimDayOfWeekExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimDayOfWeekExtensions.IsWeekdayDayOfWeek">
            <summary>Sets the shim of DayOfWeekExtensions.IsWeekday(DayOfWeek dayOfWeek)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimDayOfWeekExtensions.IsWeekendDayOfWeek">
            <summary>Sets the shim of DayOfWeekExtensions.IsWeekend(DayOfWeek dayOfWeek)</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimEventHandlerExtensions">
            <summary>Shim type of Abp.Extensions.EventHandlerExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimEventHandlerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimEventHandlerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimEventHandlerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimEventHandlerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimEventHandlerExtensions.InvokeSafelyEventHandlerObject">
            <summary>Sets the shim of EventHandlerExtensions.InvokeSafely(EventHandler eventHandler, Object sender)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimEventHandlerExtensions.InvokeSafelyEventHandlerObjectEventArgs">
            <summary>Sets the shim of EventHandlerExtensions.InvokeSafely(EventHandler eventHandler, Object sender, EventArgs e)</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimEventHandlerExtensions.InvokeSafelyOf1EventHandlerOfM0ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.EventHandler{``0},System.Object,``0})">
            <summary>Sets the shim of EventHandlerExtensions.InvokeSafely(EventHandler`1&lt;!!0&gt; eventHandler, Object sender, !!0 e)</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimExceptionExtensions">
            <summary>Shim type of Abp.Extensions.ExceptionExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimExceptionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimExceptionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimExceptionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimExceptionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimExceptionExtensions.ReThrowException">
            <summary>Sets the shim of ExceptionExtensions.ReThrow(Exception exception)</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimObjectExtensions">
            <summary>Shim type of Abp.Extensions.ObjectExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimObjectExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimObjectExtensions.AsOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of ObjectExtensions.As(Object obj)</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimObjectExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimObjectExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimObjectExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimObjectExtensions.IsInOf1M0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0[],System.Boolean})">
            <summary>Sets the shim of ObjectExtensions.IsIn(!!0 item, !!0[] list)</summary>
        </member>
        <member name="T:Abp.Extensions.Fakes.ShimStringExtensions">
            <summary>Shim type of Abp.Extensions.StringExtensions</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimStringExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimStringExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Extensions.Fakes.ShimStringExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.EnsureEndsWithStringChar">
            <summary>Sets the shim of StringExtensions.EnsureEndsWith(String str, Char c)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.EnsureEndsWithStringCharBooleanCultureInfo">
            <summary>Sets the shim of StringExtensions.EnsureEndsWith(String str, Char c, Boolean ignoreCase, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.EnsureEndsWithStringCharStringComparison">
            <summary>Sets the shim of StringExtensions.EnsureEndsWith(String str, Char c, StringComparison comparisonType)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.EnsureStartsWithStringChar">
            <summary>Sets the shim of StringExtensions.EnsureStartsWith(String str, Char c)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.EnsureStartsWithStringCharBooleanCultureInfo">
            <summary>Sets the shim of StringExtensions.EnsureStartsWith(String str, Char c, Boolean ignoreCase, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.EnsureStartsWithStringCharStringComparison">
            <summary>Sets the shim of StringExtensions.EnsureStartsWith(String str, Char c, StringComparison comparisonType)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.IsNullOrEmptyString">
            <summary>Sets the shim of StringExtensions.IsNullOrEmpty(String str)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.IsNullOrWhiteSpaceString">
            <summary>Sets the shim of StringExtensions.IsNullOrWhiteSpace(String str)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.LeftStringInt32">
            <summary>Sets the shim of StringExtensions.Left(String str, Int32 len)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.NormalizeLineEndingsString">
            <summary>Sets the shim of StringExtensions.NormalizeLineEndings(String str)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.NthIndexOfStringCharInt32">
            <summary>Sets the shim of StringExtensions.NthIndexOf(String str, Char c, Int32 n)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.RemovePostFixStringStringArray">
            <summary>Sets the shim of StringExtensions.RemovePostFix(String str, String[] postFixes)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.RemovePreFixStringStringArray">
            <summary>Sets the shim of StringExtensions.RemovePreFix(String str, String[] preFixes)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.RightStringInt32">
            <summary>Sets the shim of StringExtensions.Right(String str, Int32 len)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.SplitStringString">
            <summary>Sets the shim of StringExtensions.Split(String str, String separator)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.SplitStringStringStringSplitOptions">
            <summary>Sets the shim of StringExtensions.Split(String str, String separator, StringSplitOptions options)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.SplitToLinesString">
            <summary>Sets the shim of StringExtensions.SplitToLines(String str)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.SplitToLinesStringStringSplitOptions">
            <summary>Sets the shim of StringExtensions.SplitToLines(String str, StringSplitOptions options)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.ToCamelCaseStringBoolean">
            <summary>Sets the shim of StringExtensions.ToCamelCase(String str, Boolean invariantCulture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.ToCamelCaseStringCultureInfo">
            <summary>Sets the shim of StringExtensions.ToCamelCase(String str, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.ToMd5String">
            <summary>Sets the shim of StringExtensions.ToMd5(String str)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.ToPascalCaseStringBoolean">
            <summary>Sets the shim of StringExtensions.ToPascalCase(String str, Boolean invariantCulture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.ToPascalCaseStringCultureInfo">
            <summary>Sets the shim of StringExtensions.ToPascalCase(String str, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.ToSentenceCaseStringBoolean">
            <summary>Sets the shim of StringExtensions.ToSentenceCase(String str, Boolean invariantCulture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.ToSentenceCaseStringCultureInfo">
            <summary>Sets the shim of StringExtensions.ToSentenceCase(String str, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.TruncateStringInt32">
            <summary>Sets the shim of StringExtensions.Truncate(String str, Int32 maxLength)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.TruncateWithPostfixStringInt32">
            <summary>Sets the shim of StringExtensions.TruncateWithPostfix(String str, Int32 maxLength)</summary>
        </member>
        <member name="P:Abp.Extensions.Fakes.ShimStringExtensions.TruncateWithPostfixStringInt32String">
            <summary>Sets the shim of StringExtensions.TruncateWithPostfix(String str, Int32 maxLength, String postfix)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpBootstrapper">
            <summary>Shim type of Abp.AbpBootstrapper</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpBootstrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpBootstrapper.#ctor(Abp.AbpBootstrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AddInterceptorRegistrars">
            <summary>Sets the shim of AbpBootstrapper.AddInterceptorRegistrars()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpBootstrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.AddInterceptorRegistrars">
            <summary>Sets the shim of AbpBootstrapper.AddInterceptorRegistrars()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.Dispose">
            <summary>Sets the shim of AbpBootstrapper.Dispose()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.Initialize">
            <summary>Sets the shim of AbpBootstrapper.Initialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.IocManagerGet">
            <summary>Sets the shim of AbpBootstrapper.get_IocManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.PlugInSourcesGet">
            <summary>Sets the shim of AbpBootstrapper.get_PlugInSources()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.RegisterBootstrapper">
            <summary>Sets the shim of AbpBootstrapper.RegisterBootstrapper()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.ResolveLogger">
            <summary>Sets the shim of AbpBootstrapper.ResolveLogger()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.AllInstances.StartupModuleGet">
            <summary>Sets the shim of AbpBootstrapper.get_StartupModule()</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpBootstrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpBootstrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpBootstrapper.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.ConstructorType">
            <summary>Sets the shim of AbpBootstrapper.AbpBootstrapper(Type startupModule)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.ConstructorTypeIIocManager">
            <summary>Sets the shim of AbpBootstrapper.AbpBootstrapper(Type startupModule, IIocManager iocManager)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpBootstrapper.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.AbpBootstrapper})">
            <summary>Sets the shim of AbpBootstrapper.Create()</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpBootstrapper.CreateOf1IIocManager``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Dependency.IIocManager,Abp.AbpBootstrapper})">
            <summary>Sets the shim of AbpBootstrapper.Create(IIocManager iocManager)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.CreateType">
            <summary>Sets the shim of AbpBootstrapper.Create(Type startupModule)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.CreateTypeIIocManager">
            <summary>Sets the shim of AbpBootstrapper.Create(Type startupModule, IIocManager iocManager)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.Dispose">
            <summary>Sets the shim of AbpBootstrapper.Dispose()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.Initialize">
            <summary>Sets the shim of AbpBootstrapper.Initialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.IocManagerGet">
            <summary>Sets the shim of AbpBootstrapper.get_IocManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.PlugInSourcesGet">
            <summary>Sets the shim of AbpBootstrapper.get_PlugInSources()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.RegisterBootstrapper">
            <summary>Sets the shim of AbpBootstrapper.RegisterBootstrapper()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.ResolveLogger">
            <summary>Sets the shim of AbpBootstrapper.ResolveLogger()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpBootstrapper.StartupModuleGet">
            <summary>Sets the shim of AbpBootstrapper.get_StartupModule()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpConsts">
            <summary>Shim type of Abp.AbpConsts</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpConsts.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpConsts.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpConsts.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpConsts.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpException">
            <summary>Shim type of Abp.AbpException</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpException.#ctor(Abp.AbpException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpException.Constructor">
            <summary>Sets the shim of AbpException.AbpException()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AbpException.AbpException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpException.ConstructorString">
            <summary>Sets the shim of AbpException.AbpException(String message)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpException.ConstructorStringException">
            <summary>Sets the shim of AbpException.AbpException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpInitializationException">
            <summary>Shim type of Abp.AbpInitializationException</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpInitializationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpInitializationException.#ctor(Abp.AbpInitializationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpInitializationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpInitializationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpInitializationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpInitializationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpInitializationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpInitializationException.Constructor">
            <summary>Sets the shim of AbpInitializationException.AbpInitializationException()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpInitializationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AbpInitializationException.AbpInitializationException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpInitializationException.ConstructorString">
            <summary>Sets the shim of AbpInitializationException.AbpInitializationException(String message)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpInitializationException.ConstructorStringException">
            <summary>Sets the shim of AbpInitializationException.AbpInitializationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpKernelModule">
            <summary>Shim type of Abp.AbpKernelModule</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpKernelModule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpKernelModule.#ctor(Abp.AbpKernelModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AddAuditingSelectors">
            <summary>Sets the shim of AbpKernelModule.AddAuditingSelectors()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AddIgnoredTypes">
            <summary>Sets the shim of AbpKernelModule.AddIgnoredTypes()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AddLocalizationSources">
            <summary>Sets the shim of AbpKernelModule.AddLocalizationSources()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AddSettingProviders">
            <summary>Sets the shim of AbpKernelModule.AddSettingProviders()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AddUnitOfWorkFilters">
            <summary>Sets the shim of AbpKernelModule.AddUnitOfWorkFilters()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpKernelModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.AddAuditingSelectors">
            <summary>Sets the shim of AbpKernelModule.AddAuditingSelectors()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.AddIgnoredTypes">
            <summary>Sets the shim of AbpKernelModule.AddIgnoredTypes()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.AddLocalizationSources">
            <summary>Sets the shim of AbpKernelModule.AddLocalizationSources()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.AddSettingProviders">
            <summary>Sets the shim of AbpKernelModule.AddSettingProviders()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.AddUnitOfWorkFilters">
            <summary>Sets the shim of AbpKernelModule.AddUnitOfWorkFilters()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.ConfigureCaches">
            <summary>Sets the shim of AbpKernelModule.ConfigureCaches()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.Initialize">
            <summary>Sets the shim of AbpKernelModule.Initialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.PostInitialize">
            <summary>Sets the shim of AbpKernelModule.PostInitialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.PreInitialize">
            <summary>Sets the shim of AbpKernelModule.PreInitialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.RegisterMissingComponents">
            <summary>Sets the shim of AbpKernelModule.RegisterMissingComponents()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.AllInstances.Shutdown">
            <summary>Sets the shim of AbpKernelModule.Shutdown()</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpKernelModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpKernelModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.ConfigureCaches">
            <summary>Sets the shim of AbpKernelModule.ConfigureCaches()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.Constructor">
            <summary>Sets the shim of AbpKernelModule.AbpKernelModule()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.Initialize">
            <summary>Sets the shim of AbpKernelModule.Initialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.PostInitialize">
            <summary>Sets the shim of AbpKernelModule.PostInitialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.PreInitialize">
            <summary>Sets the shim of AbpKernelModule.PreInitialize()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.RegisterMissingComponents">
            <summary>Sets the shim of AbpKernelModule.RegisterMissingComponents()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpKernelModule.Shutdown">
            <summary>Sets the shim of AbpKernelModule.Shutdown()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpServiceBase">
            <summary>Shim type of Abp.AbpServiceBase</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpServiceBase.#ctor(Abp.AbpServiceBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimAbpServiceBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.CurrentUnitOfWorkGet">
            <summary>Sets the shim of AbpServiceBase.get_CurrentUnitOfWork()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LString">
            <summary>Sets the shim of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LStringCultureInfo">
            <summary>Sets the shim of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LStringCultureInfoObjectArray">
            <summary>Sets the shim of AbpServiceBase.L(String name, CultureInfo culture, Object[] args)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LStringObjectArray">
            <summary>Sets the shim of AbpServiceBase.L(String name, Object[] args)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LocalizationManagerGet">
            <summary>Sets the shim of AbpServiceBase.get_LocalizationManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LocalizationManagerSetILocalizationManager">
            <summary>Sets the shim of AbpServiceBase.set_LocalizationManager(ILocalizationManager value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LocalizationSourceGet">
            <summary>Sets the shim of AbpServiceBase.get_LocalizationSource()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LocalizationSourceNameGet">
            <summary>Sets the shim of AbpServiceBase.get_LocalizationSourceName()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LocalizationSourceNameSetString">
            <summary>Sets the shim of AbpServiceBase.set_LocalizationSourceName(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LoggerGet">
            <summary>Sets the shim of AbpServiceBase.get_Logger()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of AbpServiceBase.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.ObjectMapperGet">
            <summary>Sets the shim of AbpServiceBase.get_ObjectMapper()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.ObjectMapperSetIObjectMapper">
            <summary>Sets the shim of AbpServiceBase.set_ObjectMapper(IObjectMapper value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.SettingManagerGet">
            <summary>Sets the shim of AbpServiceBase.get_SettingManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.SettingManagerSetISettingManager">
            <summary>Sets the shim of AbpServiceBase.set_SettingManager(ISettingManager value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.UnitOfWorkManagerGet">
            <summary>Sets the shim of AbpServiceBase.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.AllInstances.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of AbpServiceBase.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpServiceBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimAbpServiceBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.Constructor">
            <summary>Sets the shim of AbpServiceBase.AbpServiceBase()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.CurrentUnitOfWorkGet">
            <summary>Sets the shim of AbpServiceBase.get_CurrentUnitOfWork()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LString">
            <summary>Sets the shim of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LStringCultureInfo">
            <summary>Sets the shim of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LStringCultureInfoObjectArray">
            <summary>Sets the shim of AbpServiceBase.L(String name, CultureInfo culture, Object[] args)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LStringObjectArray">
            <summary>Sets the shim of AbpServiceBase.L(String name, Object[] args)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LocalizationManagerGet">
            <summary>Sets the shim of AbpServiceBase.get_LocalizationManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LocalizationManagerSetILocalizationManager">
            <summary>Sets the shim of AbpServiceBase.set_LocalizationManager(ILocalizationManager value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LocalizationSourceGet">
            <summary>Sets the shim of AbpServiceBase.get_LocalizationSource()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LocalizationSourceNameGet">
            <summary>Sets the shim of AbpServiceBase.get_LocalizationSourceName()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LocalizationSourceNameSetString">
            <summary>Sets the shim of AbpServiceBase.set_LocalizationSourceName(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LoggerGet">
            <summary>Sets the shim of AbpServiceBase.get_Logger()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.LoggerSetILogger">
            <summary>Sets the shim of AbpServiceBase.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.ObjectMapperGet">
            <summary>Sets the shim of AbpServiceBase.get_ObjectMapper()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.ObjectMapperSetIObjectMapper">
            <summary>Sets the shim of AbpServiceBase.set_ObjectMapper(IObjectMapper value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.SettingManagerGet">
            <summary>Sets the shim of AbpServiceBase.get_SettingManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.SettingManagerSetISettingManager">
            <summary>Sets the shim of AbpServiceBase.set_SettingManager(ISettingManager value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.UnitOfWorkManagerGet">
            <summary>Sets the shim of AbpServiceBase.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimAbpServiceBase.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of AbpServiceBase.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimCheck">
            <summary>Shim type of Abp.Check</summary>
        </member>
        <member name="M:Abp.Fakes.ShimCheck.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimCheck.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimCheck.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimCheck.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimCheck.NotNullOf1M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,``0})">
            <summary>Sets the shim of Check.NotNull(!!0 value, String parameterName)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimCheck.NotNullOrEmptyOf1ICollectionOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},System.String,System.Collections.Generic.ICollection{``0}})">
            <summary>Sets the shim of Check.NotNullOrEmpty(ICollection`1&lt;!!0&gt; value, String parameterName)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimCheck.NotNullOrEmptyStringString">
            <summary>Sets the shim of Check.NotNullOrEmpty(String value, String parameterName)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimCheck.NotNullOrWhiteSpaceStringString">
            <summary>Sets the shim of Check.NotNullOrWhiteSpace(String value, String parameterName)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimDisposeAction">
            <summary>Shim type of Abp.DisposeAction</summary>
        </member>
        <member name="M:Abp.Fakes.ShimDisposeAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimDisposeAction.#ctor(Abp.DisposeAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimDisposeAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimDisposeAction.AllInstances.Dispose">
            <summary>Sets the shim of DisposeAction.Dispose()</summary>
        </member>
        <member name="M:Abp.Fakes.ShimDisposeAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimDisposeAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimDisposeAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimDisposeAction.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Fakes.ShimDisposeAction.ConstructorAction">
            <summary>Sets the shim of DisposeAction.DisposeAction(Action action)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimDisposeAction.Dispose">
            <summary>Sets the shim of DisposeAction.Dispose()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimDisposeAction.StaticConstructor">
            <summary>Sets the shim of DisposeAction.DisposeAction()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimNameValue">
            <summary>Shim type of Abp.NameValue</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue.#ctor(Abp.NameValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimNameValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue.Constructor">
            <summary>Sets the shim of NameValue.NameValue()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue.ConstructorStringString">
            <summary>Sets the shim of NameValue.NameValue(String name, String value)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimNameValue`1">
            <summary>Shim type of Abp.NameValue`1</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue`1.#ctor(Abp.NameValue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimNameValue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.AllInstances.NameGet">
            <summary>Sets the shim of NameValue`1.get_Name()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.AllInstances.NameSetString">
            <summary>Sets the shim of NameValue`1.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.AllInstances.ValueGet">
            <summary>Sets the shim of NameValue`1.get_Value()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.AllInstances.ValueSetT0">
            <summary>Sets the shim of NameValue`1.set_Value(!0 value)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNameValue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.Constructor">
            <summary>Sets the shim of NameValue`1.NameValue`1()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.ConstructorStringT0">
            <summary>Sets the shim of NameValue`1.NameValue`1(String name, !0 value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.NameGet">
            <summary>Sets the shim of NameValue`1.get_Name()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.NameSetString">
            <summary>Sets the shim of NameValue`1.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.ValueGet">
            <summary>Sets the shim of NameValue`1.get_Value()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNameValue`1.ValueSetT0">
            <summary>Sets the shim of NameValue`1.set_Value(!0 value)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimNamedTypeSelector">
            <summary>Shim type of Abp.NamedTypeSelector</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNamedTypeSelector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNamedTypeSelector.#ctor(Abp.NamedTypeSelector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimNamedTypeSelector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.AllInstances.NameGet">
            <summary>Sets the shim of NamedTypeSelector.get_Name()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.AllInstances.NameSetString">
            <summary>Sets the shim of NamedTypeSelector.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.AllInstances.PredicateGet">
            <summary>Sets the shim of NamedTypeSelector.get_Predicate()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.AllInstances.PredicateSetFuncOfTypeBoolean">
            <summary>Sets the shim of NamedTypeSelector.set_Predicate(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNamedTypeSelector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimNamedTypeSelector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.ConstructorStringFuncOfTypeBoolean">
            <summary>Sets the shim of NamedTypeSelector.NamedTypeSelector(String name, Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.NameGet">
            <summary>Sets the shim of NamedTypeSelector.get_Name()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.NameSetString">
            <summary>Sets the shim of NamedTypeSelector.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.PredicateGet">
            <summary>Sets the shim of NamedTypeSelector.get_Predicate()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimNamedTypeSelector.PredicateSetFuncOfTypeBoolean">
            <summary>Sets the shim of NamedTypeSelector.set_Predicate(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimRandomHelper">
            <summary>Shim type of Abp.RandomHelper</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRandomHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRandomHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRandomHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRandomHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRandomHelper.GenerateRandomizedListOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0}})">
            <summary>Sets the shim of RandomHelper.GenerateRandomizedList(IEnumerable`1&lt;!!0&gt; items)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRandomHelper.GetRandom">
            <summary>Sets the shim of RandomHelper.GetRandom()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRandomHelper.GetRandomInt32">
            <summary>Sets the shim of RandomHelper.GetRandom(Int32 maxValue)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRandomHelper.GetRandomInt32Int32">
            <summary>Sets the shim of RandomHelper.GetRandom(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRandomHelper.GetRandomOfOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0})">
            <summary>Sets the shim of RandomHelper.GetRandomOf(!!0[] objs)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRandomHelper.StaticConstructor">
            <summary>Sets the shim of RandomHelper.RandomHelper()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimRegularGuidGenerator">
            <summary>Shim type of Abp.RegularGuidGenerator</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRegularGuidGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRegularGuidGenerator.#ctor(Abp.RegularGuidGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimRegularGuidGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRegularGuidGenerator.AllInstances.Create">
            <summary>Sets the shim of RegularGuidGenerator.Create()</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRegularGuidGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRegularGuidGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRegularGuidGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRegularGuidGenerator.Bind(Abp.IGuidGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Fakes.ShimRegularGuidGenerator.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRegularGuidGenerator.Constructor">
            <summary>Sets the shim of RegularGuidGenerator.RegularGuidGenerator()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimRegularGuidGenerator.Create">
            <summary>Sets the shim of RegularGuidGenerator.Create()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimSequentialGuidGenerator">
            <summary>Shim type of Abp.SequentialGuidGenerator</summary>
        </member>
        <member name="M:Abp.Fakes.ShimSequentialGuidGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimSequentialGuidGenerator.#ctor(Abp.SequentialGuidGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimSequentialGuidGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.AllInstances.Create">
            <summary>Sets the shim of SequentialGuidGenerator.Create()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.AllInstances.CreateSequentialGuidGeneratorSequentialGuidDatabaseType">
            <summary>Sets the shim of SequentialGuidGenerator.Create(SequentialGuidDatabaseType databaseType)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.AllInstances.CreateSequentialGuidGeneratorSequentialGuidType">
            <summary>Sets the shim of SequentialGuidGenerator.Create(SequentialGuidType guidType)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.AllInstances.DatabaseTypeGet">
            <summary>Sets the shim of SequentialGuidGenerator.get_DatabaseType()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.AllInstances.DatabaseTypeSetSequentialGuidGeneratorSequentialGuidDatabaseType">
            <summary>Sets the shim of SequentialGuidGenerator.set_DatabaseType(SequentialGuidDatabaseType value)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimSequentialGuidGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimSequentialGuidGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimSequentialGuidGenerator.Bind(Abp.IGuidGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.Constructor">
            <summary>Sets the shim of SequentialGuidGenerator.SequentialGuidGenerator()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.Create">
            <summary>Sets the shim of SequentialGuidGenerator.Create()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.CreateSequentialGuidGeneratorSequentialGuidDatabaseType">
            <summary>Sets the shim of SequentialGuidGenerator.Create(SequentialGuidDatabaseType databaseType)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.CreateSequentialGuidGeneratorSequentialGuidType">
            <summary>Sets the shim of SequentialGuidGenerator.Create(SequentialGuidType guidType)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.DatabaseTypeGet">
            <summary>Sets the shim of SequentialGuidGenerator.get_DatabaseType()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.DatabaseTypeSetSequentialGuidGeneratorSequentialGuidDatabaseType">
            <summary>Sets the shim of SequentialGuidGenerator.set_DatabaseType(SequentialGuidDatabaseType value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.InstanceGet">
            <summary>Sets the shim of SequentialGuidGenerator.get_Instance()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimSequentialGuidGenerator.StaticConstructor">
            <summary>Sets the shim of SequentialGuidGenerator.SequentialGuidGenerator()</summary>
        </member>
        <member name="T:Abp.Fakes.ShimUserIdentifier">
            <summary>Shim type of Abp.UserIdentifier</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifier.#ctor(Abp.UserIdentifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Fakes.ShimUserIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.EqualsObject">
            <summary>Sets the shim of UserIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.GetHashCode01">
            <summary>Sets the shim of UserIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.TenantIdGet">
            <summary>Sets the shim of UserIdentifier.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of UserIdentifier.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.ToString01">
            <summary>Sets the shim of UserIdentifier.ToString()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.ToUserIdentifierString">
            <summary>Sets the shim of UserIdentifier.ToUserIdentifierString()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.UserIdGet">
            <summary>Sets the shim of UserIdentifier.get_UserId()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.AllInstances.UserIdSetInt64">
            <summary>Sets the shim of UserIdentifier.set_UserId(Int64 value)</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifier.Bind(Abp.IUserIdentifier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.Constructor">
            <summary>Sets the shim of UserIdentifier.UserIdentifier()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.ConstructorNullableOfInt32Int64">
            <summary>Sets the shim of UserIdentifier.UserIdentifier(Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.EqualityOpUserIdentifierUserIdentifier">
            <summary>Sets the shim of UserIdentifier.op_Equality(UserIdentifier left, UserIdentifier right)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.EqualsObject">
            <summary>Sets the shim of UserIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.GetHashCode">
            <summary>Sets the shim of UserIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.InequalityOpUserIdentifierUserIdentifier">
            <summary>Sets the shim of UserIdentifier.op_Inequality(UserIdentifier left, UserIdentifier right)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.ParseString">
            <summary>Sets the shim of UserIdentifier.Parse(String userIdentifierString)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.TenantIdGet">
            <summary>Sets the shim of UserIdentifier.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of UserIdentifier.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.ToString">
            <summary>Sets the shim of UserIdentifier.ToString()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.ToUserIdentifierString">
            <summary>Sets the shim of UserIdentifier.ToUserIdentifierString()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.UserIdGet">
            <summary>Sets the shim of UserIdentifier.get_UserId()</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifier.UserIdSetInt64">
            <summary>Sets the shim of UserIdentifier.set_UserId(Int64 value)</summary>
        </member>
        <member name="T:Abp.Fakes.ShimUserIdentifierExtensions">
            <summary>Shim type of Abp.UserIdentifierExtensions</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifierExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifierExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Fakes.ShimUserIdentifierExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifierExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Fakes.ShimUserIdentifierExtensions.ToUserIdentifierIUserIdentifier">
            <summary>Sets the shim of UserIdentifierExtensions.ToUserIdentifier(IUserIdentifier userIdentifier)</summary>
        </member>
        <member name="T:Abp.Fakes.StubAbpException">
            <summary>Stub type of Abp.AbpException</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAbpException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAbpException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.InitializeStub">
            <summary>Initializes a new instance of type StubAbpException</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.Fakes.StubAbpInitializationException">
            <summary>Stub type of Abp.AbpInitializationException</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAbpInitializationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAbpInitializationException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.InitializeStub">
            <summary>Initializes a new instance of type StubAbpInitializationException</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpInitializationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpInitializationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpInitializationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.Fakes.StubAbpServiceBase">
            <summary>Stub type of Abp.AbpServiceBase</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpServiceBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpServiceBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpServiceBase.InitializeStub">
            <summary>Initializes a new instance of type StubAbpServiceBase</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpServiceBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubAbpServiceBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpServiceBase.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Fakes.StubAbpServiceBase.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpServiceBase.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Fakes.StubAbpServiceBase.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Fakes.StubDisposeAction">
            <summary>Stub type of Abp.DisposeAction</summary>
        </member>
        <member name="M:Abp.Fakes.StubDisposeAction.#ctor(System.Action)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Fakes.StubDisposeAction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Fakes.StubDisposeAction.InitializeStub">
            <summary>Initializes a new instance of type StubDisposeAction</summary>
        </member>
        <member name="P:Abp.Fakes.StubDisposeAction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubDisposeAction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Fakes.StubIGuidGenerator">
            <summary>Stub type of Abp.IGuidGenerator</summary>
        </member>
        <member name="M:Abp.Fakes.StubIGuidGenerator.#ctor">
            <summary>Initializes a new instance of type StubIGuidGenerator</summary>
        </member>
        <member name="M:Abp.Fakes.StubIGuidGenerator.Abp#IGuidGenerator#Create">
            <summary>Sets the stub of IGuidGenerator.Create()</summary>
        </member>
        <member name="F:Abp.Fakes.StubIGuidGenerator.Create">
            <summary>Sets the stub of IGuidGenerator.Create()</summary>
        </member>
        <member name="T:Abp.Fakes.StubIHasErrorCode">
            <summary>Stub type of Abp.IHasErrorCode</summary>
        </member>
        <member name="M:Abp.Fakes.StubIHasErrorCode.#ctor">
            <summary>Initializes a new instance of type StubIHasErrorCode</summary>
        </member>
        <member name="M:Abp.Fakes.StubIHasErrorCode.AttachBackingFieldToCode">
            <summary>Attaches delegates to emulate StubIHasErrorCode.Code as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Fakes.StubIHasErrorCode.Abp#IHasErrorCode#Code">
            <summary>Sets the stub of IHasErrorCode.get_Code()</summary>
        </member>
        <member name="F:Abp.Fakes.StubIHasErrorCode.CodeGet">
            <summary>Sets the stub of IHasErrorCode.get_Code()</summary>
        </member>
        <member name="F:Abp.Fakes.StubIHasErrorCode.CodeSetInt32">
            <summary>Sets the stub of IHasErrorCode.set_Code(Int32 value)</summary>
        </member>
        <member name="T:Abp.Fakes.StubIShouldInitialize">
            <summary>Stub type of Abp.IShouldInitialize</summary>
        </member>
        <member name="M:Abp.Fakes.StubIShouldInitialize.#ctor">
            <summary>Initializes a new instance of type StubIShouldInitialize</summary>
        </member>
        <member name="M:Abp.Fakes.StubIShouldInitialize.Castle#Core#IInitializable#Initialize">
            <summary>Sets the stub of IInitializable.Initialize()</summary>
        </member>
        <member name="F:Abp.Fakes.StubIShouldInitialize.Initialize">
            <summary>Sets the stub of IInitializable.Initialize()</summary>
        </member>
        <member name="T:Abp.Fakes.StubIUserIdentifier">
            <summary>Stub type of Abp.IUserIdentifier</summary>
        </member>
        <member name="M:Abp.Fakes.StubIUserIdentifier.#ctor">
            <summary>Initializes a new instance of type StubIUserIdentifier</summary>
        </member>
        <member name="P:Abp.Fakes.StubIUserIdentifier.Abp#IUserIdentifier#TenantId">
            <summary>Sets the stub of IUserIdentifier.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Fakes.StubIUserIdentifier.TenantIdGet">
            <summary>Sets the stub of IUserIdentifier.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Fakes.StubIUserIdentifier.Abp#IUserIdentifier#UserId">
            <summary>Sets the stub of IUserIdentifier.get_UserId()</summary>
        </member>
        <member name="F:Abp.Fakes.StubIUserIdentifier.UserIdGet">
            <summary>Sets the stub of IUserIdentifier.get_UserId()</summary>
        </member>
        <member name="T:Abp.Fakes.StubNameValue">
            <summary>Stub type of Abp.NameValue</summary>
        </member>
        <member name="M:Abp.Fakes.StubNameValue.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubNameValue.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Fakes.StubNameValue.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Fakes.StubNameValue.InitializeStub">
            <summary>Initializes a new instance of type StubNameValue</summary>
        </member>
        <member name="P:Abp.Fakes.StubNameValue.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubNameValue.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Fakes.StubNameValue`1">
            <summary>Stub type of Abp.NameValue`1</summary>
        </member>
        <member name="M:Abp.Fakes.StubNameValue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubNameValue`1.#ctor(System.String,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Fakes.StubNameValue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Fakes.StubNameValue`1.InitializeStub">
            <summary>Initializes a new instance of type StubNameValue</summary>
        </member>
        <member name="P:Abp.Fakes.StubNameValue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubNameValue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Fakes.StubNamedTypeSelector">
            <summary>Stub type of Abp.NamedTypeSelector</summary>
        </member>
        <member name="M:Abp.Fakes.StubNamedTypeSelector.#ctor(System.String,System.Func{System.Type,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Fakes.StubNamedTypeSelector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Fakes.StubNamedTypeSelector.InitializeStub">
            <summary>Initializes a new instance of type StubNamedTypeSelector</summary>
        </member>
        <member name="P:Abp.Fakes.StubNamedTypeSelector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubNamedTypeSelector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Fakes.StubRegularGuidGenerator">
            <summary>Stub type of Abp.RegularGuidGenerator</summary>
        </member>
        <member name="M:Abp.Fakes.StubRegularGuidGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Fakes.StubRegularGuidGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Fakes.StubRegularGuidGenerator.Create">
            <summary>Sets the stub of RegularGuidGenerator.Create()</summary>
        </member>
        <member name="F:Abp.Fakes.StubRegularGuidGenerator.Create01">
            <summary>Sets the stub of RegularGuidGenerator.Create()</summary>
        </member>
        <member name="M:Abp.Fakes.StubRegularGuidGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubRegularGuidGenerator</summary>
        </member>
        <member name="P:Abp.Fakes.StubRegularGuidGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubRegularGuidGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Fakes.StubUserIdentifier">
            <summary>Stub type of Abp.UserIdentifier</summary>
        </member>
        <member name="M:Abp.Fakes.StubUserIdentifier.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Fakes.StubUserIdentifier.#ctor(System.Nullable{System.Int32},System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Fakes.StubUserIdentifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Fakes.StubUserIdentifier.Equals(System.Object)">
            <summary>Sets the stub of UserIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Fakes.StubUserIdentifier.EqualsObject">
            <summary>Sets the stub of UserIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Fakes.StubUserIdentifier.GetHashCode">
            <summary>Sets the stub of UserIdentifier.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Fakes.StubUserIdentifier.GetHashCode01">
            <summary>Sets the stub of UserIdentifier.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Fakes.StubUserIdentifier.InitializeStub">
            <summary>Initializes a new instance of type StubUserIdentifier</summary>
        </member>
        <member name="P:Abp.Fakes.StubUserIdentifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Fakes.StubUserIdentifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Fakes.StubUserIdentifier.ToString">
            <summary>Sets the stub of UserIdentifier.ToString()</summary>
        </member>
        <member name="F:Abp.Fakes.StubUserIdentifier.ToString01">
            <summary>Sets the stub of UserIdentifier.ToString()</summary>
        </member>
        <member name="T:Abp.IO.Extensions.Fakes.ShimStreamExtensions">
            <summary>Shim type of Abp.IO.Extensions.StreamExtensions</summary>
        </member>
        <member name="M:Abp.IO.Extensions.Fakes.ShimStreamExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.IO.Extensions.Fakes.ShimStreamExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.IO.Extensions.Fakes.ShimStreamExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.IO.Extensions.Fakes.ShimStreamExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.IO.Extensions.Fakes.ShimStreamExtensions.GetAllBytesStream">
            <summary>Sets the shim of StreamExtensions.GetAllBytes(Stream stream)</summary>
        </member>
        <member name="T:Abp.IO.Fakes.ShimDirectoryHelper">
            <summary>Shim type of Abp.IO.DirectoryHelper</summary>
        </member>
        <member name="M:Abp.IO.Fakes.ShimDirectoryHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.IO.Fakes.ShimDirectoryHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.IO.Fakes.ShimDirectoryHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.IO.Fakes.ShimDirectoryHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.IO.Fakes.ShimDirectoryHelper.CreateIfNotExistsString">
            <summary>Sets the shim of DirectoryHelper.CreateIfNotExists(String directory)</summary>
        </member>
        <member name="T:Abp.IO.Fakes.ShimFileHelper">
            <summary>Shim type of Abp.IO.FileHelper</summary>
        </member>
        <member name="M:Abp.IO.Fakes.ShimFileHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.IO.Fakes.ShimFileHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.IO.Fakes.ShimFileHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.IO.Fakes.ShimFileHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.IO.Fakes.ShimFileHelper.DeleteIfExistsString">
            <summary>Sets the shim of FileHelper.DeleteIfExists(String filePath)</summary>
        </member>
        <member name="T:Abp.Json.Fakes.ShimAbpDateTimeConverter">
            <summary>Shim type of Abp.Json.AbpDateTimeConverter</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimAbpDateTimeConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimAbpDateTimeConverter.#ctor(Abp.Json.AbpDateTimeConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Json.Fakes.ShimAbpDateTimeConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.AllInstances.CanConvertType">
            <summary>Sets the shim of AbpDateTimeConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of AbpDateTimeConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of AbpDateTimeConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimAbpDateTimeConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimAbpDateTimeConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.CanConvertType">
            <summary>Sets the shim of AbpDateTimeConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.Constructor">
            <summary>Sets the shim of AbpDateTimeConverter.AbpDateTimeConverter()</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of AbpDateTimeConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimAbpDateTimeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of AbpDateTimeConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="T:Abp.Json.Fakes.ShimJsonExtensions">
            <summary>Shim type of Abp.Json.JsonExtensions</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimJsonExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimJsonExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimJsonExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimJsonExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimJsonExtensions.ToJsonStringObjectBooleanBoolean">
            <summary>Sets the shim of JsonExtensions.ToJsonString(Object obj, Boolean camelCase, Boolean indented)</summary>
        </member>
        <member name="T:Abp.Json.Fakes.ShimJsonSerializationHelper">
            <summary>Shim type of Abp.Json.JsonSerializationHelper</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimJsonSerializationHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimJsonSerializationHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimJsonSerializationHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimJsonSerializationHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Json.Fakes.ShimJsonSerializationHelper.DeserializeWithTypeOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of JsonSerializationHelper.DeserializeWithType(String serializedObj)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimJsonSerializationHelper.DeserializeWithTypeString">
            <summary>Sets the shim of JsonSerializationHelper.DeserializeWithType(String serializedObj)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimJsonSerializationHelper.SerializeWithTypeObject">
            <summary>Sets the shim of JsonSerializationHelper.SerializeWithType(Object obj)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.ShimJsonSerializationHelper.SerializeWithTypeObjectType">
            <summary>Sets the shim of JsonSerializationHelper.SerializeWithType(Object obj, Type type)</summary>
        </member>
        <member name="T:Abp.Json.Fakes.StubAbpDateTimeConverter">
            <summary>Stub type of Abp.Json.AbpDateTimeConverter</summary>
        </member>
        <member name="M:Abp.Json.Fakes.StubAbpDateTimeConverter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Json.Fakes.StubAbpDateTimeConverter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Json.Fakes.StubAbpDateTimeConverter.CanConvert(System.Type)">
            <summary>Sets the stub of AbpDateTimeConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="F:Abp.Json.Fakes.StubAbpDateTimeConverter.CanConvertType">
            <summary>Sets the stub of AbpDateTimeConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:Abp.Json.Fakes.StubAbpDateTimeConverter.CanRead">
            <summary>Sets the stub of JsonConverter.get_CanRead()</summary>
        </member>
        <member name="F:Abp.Json.Fakes.StubAbpDateTimeConverter.CanReadGet">
            <summary>Sets the stub of JsonConverter.get_CanRead()</summary>
        </member>
        <member name="P:Abp.Json.Fakes.StubAbpDateTimeConverter.CanWrite">
            <summary>Sets the stub of JsonConverter.get_CanWrite()</summary>
        </member>
        <member name="F:Abp.Json.Fakes.StubAbpDateTimeConverter.CanWriteGet">
            <summary>Sets the stub of JsonConverter.get_CanWrite()</summary>
        </member>
        <member name="M:Abp.Json.Fakes.StubAbpDateTimeConverter.InitializeStub">
            <summary>Initializes a new instance of type StubAbpDateTimeConverter</summary>
        </member>
        <member name="P:Abp.Json.Fakes.StubAbpDateTimeConverter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Json.Fakes.StubAbpDateTimeConverter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Json.Fakes.StubAbpDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Sets the stub of AbpDateTimeConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="F:Abp.Json.Fakes.StubAbpDateTimeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the stub of AbpDateTimeConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="M:Abp.Json.Fakes.StubAbpDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Sets the stub of AbpDateTimeConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="F:Abp.Json.Fakes.StubAbpDateTimeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the stub of AbpDateTimeConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="T:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions">
            <summary>Shim type of Abp.Linq.Extensions.QueryableExtensions</summary>
        </member>
        <member name="M:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.PageByOf1IQueryableOfM0IPagedResultRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},Abp.Application.Services.Dto.IPagedResultRequest,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.PageBy(IQueryable`1&lt;!!0&gt; query, IPagedResultRequest pagedResultRequest)</summary>
        </member>
        <member name="M:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.PageByOf1IQueryableOfM0Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Int32,System.Int32,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.PageBy(IQueryable`1&lt;!!0&gt; query, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="M:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.WhereIfOf1IQueryableOfM0BooleanExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.WhereIf(IQueryable`1&lt;!!0&gt; query, Boolean condition, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Linq.Extensions.Fakes.ShimQueryableExtensions.WhereIfOf1IQueryableOfM0BooleanExpressionOfFuncOfM0Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableExtensions.WhereIf(IQueryable`1&lt;!!0&gt; query, Boolean condition, Expression`1&lt;Func`3&lt;!!0,Int32,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="T:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter">
            <summary>Shim type of Abp.Linq.NullAsyncQueryableExecuter</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.#ctor(Abp.Linq.NullAsyncQueryableExecuter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.AllInstances.CountAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Linq.NullAsyncQueryableExecuter,System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Int32}})">
            <summary>Sets the shim of NullAsyncQueryableExecuter.CountAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.AllInstances.FirstOrDefaultAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Linq.NullAsyncQueryableExecuter,System.Linq.IQueryable{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of NullAsyncQueryableExecuter.FirstOrDefaultAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.AllInstances.ToListAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Linq.NullAsyncQueryableExecuter,System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Sets the shim of NullAsyncQueryableExecuter.ToListAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.Bind(Abp.Linq.IAsyncQueryableExecuter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.Constructor">
            <summary>Sets the shim of NullAsyncQueryableExecuter.NullAsyncQueryableExecuter()</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.CountAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Int32}})">
            <summary>Sets the shim of NullAsyncQueryableExecuter.CountAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.FirstOrDefaultAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets the shim of NullAsyncQueryableExecuter.FirstOrDefaultAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="P:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.InstanceGet">
            <summary>Sets the shim of NullAsyncQueryableExecuter.get_Instance()</summary>
        </member>
        <member name="P:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.StaticConstructor">
            <summary>Sets the shim of NullAsyncQueryableExecuter.NullAsyncQueryableExecuter()</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.ShimNullAsyncQueryableExecuter.ToListAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Sets the shim of NullAsyncQueryableExecuter.ToListAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="T:Abp.Linq.Fakes.StubIAsyncQueryableExecuter">
            <summary>Stub type of Abp.Linq.IAsyncQueryableExecuter</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubIAsyncQueryableExecuter.#ctor">
            <summary>Initializes a new instance of type StubIAsyncQueryableExecuter</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubIAsyncQueryableExecuter.Abp#Linq#IAsyncQueryableExecuter#CountAsync``1(System.Linq.IQueryable{``0})">
            <summary>Sets the stub of IAsyncQueryableExecuter.CountAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubIAsyncQueryableExecuter.Abp#Linq#IAsyncQueryableExecuter#FirstOrDefaultAsync``1(System.Linq.IQueryable{``0})">
            <summary>Sets the stub of IAsyncQueryableExecuter.FirstOrDefaultAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubIAsyncQueryableExecuter.Abp#Linq#IAsyncQueryableExecuter#ToListAsync``1(System.Linq.IQueryable{``0})">
            <summary>Sets the stub of IAsyncQueryableExecuter.ToListAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubIAsyncQueryableExecuter.CountAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Int32}})">
            <summary>Sets stubs of CountAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubIAsyncQueryableExecuter.FirstOrDefaultAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{``0}})">
            <summary>Sets stubs of FirstOrDefaultAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubIAsyncQueryableExecuter.ToListAsyncOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Sets stubs of ToListAsync(IQueryable`1&lt;!!0&gt; queryable)</summary>
        </member>
        <member name="T:Abp.Linq.Fakes.StubNullAsyncQueryableExecuter">
            <summary>Stub type of Abp.Linq.NullAsyncQueryableExecuter</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubNullAsyncQueryableExecuter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Linq.Fakes.StubNullAsyncQueryableExecuter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Linq.Fakes.StubNullAsyncQueryableExecuter.InitializeStub">
            <summary>Initializes a new instance of type StubNullAsyncQueryableExecuter</summary>
        </member>
        <member name="P:Abp.Linq.Fakes.StubNullAsyncQueryableExecuter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Linq.Fakes.StubNullAsyncQueryableExecuter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource">
            <summary>Shim type of Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.#ctor(Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.DictionaryProviderGet">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.get_DictionaryProvider()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.ExtendILocalizationDictionary">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.GetAllStringsBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.GetAllStringsCultureInfoBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.GetStringOrNullStringBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.GetStringOrNullStringCultureInfoBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.GetStringString">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetString(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.GetStringStringCultureInfo">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.LocalizationConfigurationGet">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.get_LocalizationConfiguration()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.LocalizationConfigurationSetILocalizationConfiguration">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.set_LocalizationConfiguration(ILocalizationConfiguration value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.NameGet">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.AllInstances.ReturnGivenNameOrThrowExceptionStringCultureInfo">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.Bind(Abp.Localization.Dictionaries.IDictionaryBasedLocalizationSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.Bind(Abp.Localization.Sources.ILocalizationSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.ConstructorStringILocalizationDictionaryProvider">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.DictionaryBasedLocalizationSource(String name, ILocalizationDictionaryProvider dictionaryProvider)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.DictionaryProviderGet">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.get_DictionaryProvider()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.ExtendILocalizationDictionary">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.GetAllStringsBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.GetAllStringsCultureInfoBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.GetBaseCultureNameString">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetBaseCultureName(String cultureName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.GetStringOrNullStringBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.GetStringOrNullStringCultureInfoBoolean">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.GetStringString">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetString(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.GetStringStringCultureInfo">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.LocalizationConfigurationGet">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.get_LocalizationConfiguration()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.LocalizationConfigurationSetILocalizationConfiguration">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.set_LocalizationConfiguration(ILocalizationConfiguration value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.NameGet">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimDictionaryBasedLocalizationSource.ReturnGivenNameOrThrowExceptionStringCultureInfo">
            <summary>Sets the shim of DictionaryBasedLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary">
            <summary>Shim type of Abp.Localization.Dictionaries.LocalizationDictionary</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.#ctor(Abp.Localization.Dictionaries.LocalizationDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.ContainsString">
            <summary>Sets the shim of LocalizationDictionary.Contains(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.CultureInfoGet">
            <summary>Sets the shim of LocalizationDictionary.get_CultureInfo()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.CultureInfoSetCultureInfo">
            <summary>Sets the shim of LocalizationDictionary.set_CultureInfo(CultureInfo value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.GetAllStrings">
            <summary>Sets the shim of LocalizationDictionary.GetAllStrings()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.GetEnumerator">
            <summary>Sets the shim of LocalizationDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.GetOrNullString">
            <summary>Sets the shim of LocalizationDictionary.GetOrNull(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.ItemGetString">
            <summary>Sets the shim of LocalizationDictionary.get_Item(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.ItemSetStringString">
            <summary>Sets the shim of LocalizationDictionary.set_Item(String name, String value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of LocalizationDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.Bind(Abp.Localization.Dictionaries.ILocalizationDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.Bind(System.Collections.Generic.IEnumerable{Abp.Localization.LocalizedString})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.ConstructorCultureInfo">
            <summary>Sets the shim of LocalizationDictionary.LocalizationDictionary(CultureInfo cultureInfo)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.ContainsString">
            <summary>Sets the shim of LocalizationDictionary.Contains(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.CultureInfoGet">
            <summary>Sets the shim of LocalizationDictionary.get_CultureInfo()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.CultureInfoSetCultureInfo">
            <summary>Sets the shim of LocalizationDictionary.set_CultureInfo(CultureInfo value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.GetAllStrings">
            <summary>Sets the shim of LocalizationDictionary.GetAllStrings()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.GetEnumerator">
            <summary>Sets the shim of LocalizationDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.GetOrNullString">
            <summary>Sets the shim of LocalizationDictionary.GetOrNull(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.ItemGetString">
            <summary>Sets the shim of LocalizationDictionary.get_Item(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.ItemSetStringString">
            <summary>Sets the shim of LocalizationDictionary.set_Item(String name, String value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.ShimLocalizationDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of LocalizationDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource">
            <summary>Stub type of Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.#ctor(System.String,Abp.Localization.Dictionaries.ILocalizationDictionaryProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.Extend(Abp.Localization.Dictionaries.ILocalizationDictionary)">
            <summary>Sets the stub of DictionaryBasedLocalizationSource.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.ExtendILocalizationDictionary">
            <summary>Sets the stub of DictionaryBasedLocalizationSource.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.Initialize(Abp.Configuration.Startup.ILocalizationConfiguration,Abp.Dependency.IIocResolver)">
            <summary>Sets the stub of DictionaryBasedLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the stub of DictionaryBasedLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryBasedLocalizationSource</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.ReturnGivenNameOrThrowException(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of DictionaryBasedLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubDictionaryBasedLocalizationSource.ReturnGivenNameOrThrowExceptionStringCultureInfo">
            <summary>Sets the stub of DictionaryBasedLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource">
            <summary>Stub type of Abp.Localization.Dictionaries.IDictionaryBasedLocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryBasedLocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Dictionaries#IDictionaryBasedLocalizationSource#Extend(Abp.Localization.Dictionaries.ILocalizationDictionary)">
            <summary>Sets the stub of IDictionaryBasedLocalizationSource.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetAllStrings(System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetAllStrings(System.Globalization.CultureInfo,System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetString(System.String)">
            <summary>Sets the stub of ILocalizationSource.GetString(String name)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetString(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of ILocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetStringOrNull(System.String,System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#Initialize(Abp.Configuration.Startup.ILocalizationConfiguration,Abp.Dependency.IIocResolver)">
            <summary>Sets the stub of ILocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Dictionaries#IDictionaryBasedLocalizationSource#DictionaryProvider">
            <summary>Sets the stub of IDictionaryBasedLocalizationSource.get_DictionaryProvider()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.DictionaryProviderGet">
            <summary>Sets the stub of IDictionaryBasedLocalizationSource.get_DictionaryProvider()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.ExtendILocalizationDictionary">
            <summary>Sets the stub of IDictionaryBasedLocalizationSource.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.GetAllStringsBoolean">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.GetAllStringsCultureInfoBoolean">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.GetStringOrNullStringBoolean">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.GetStringOrNullStringCultureInfoBoolean">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.GetStringString">
            <summary>Sets the stub of ILocalizationSource.GetString(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.GetStringStringCultureInfo">
            <summary>Sets the stub of ILocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the stub of ILocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.Abp#Localization#Sources#ILocalizationSource#Name">
            <summary>Sets the stub of ILocalizationSource.get_Name()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubIDictionaryBasedLocalizationSource.NameGet">
            <summary>Sets the stub of ILocalizationSource.get_Name()</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary">
            <summary>Stub type of Abp.Localization.Dictionaries.ILocalizationDictionary</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.#ctor">
            <summary>Initializes a new instance of type StubILocalizationDictionary</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.Abp#Localization#Dictionaries#ILocalizationDictionary#GetAllStrings">
            <summary>Sets the stub of ILocalizationDictionary.GetAllStrings()</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.Abp#Localization#Dictionaries#ILocalizationDictionary#GetOrNull(System.String)">
            <summary>Sets the stub of ILocalizationDictionary.GetOrNull(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.Abp#Localization#Dictionaries#ILocalizationDictionary#CultureInfo">
            <summary>Sets the stub of ILocalizationDictionary.get_CultureInfo()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.CultureInfoGet">
            <summary>Sets the stub of ILocalizationDictionary.get_CultureInfo()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.GetAllStrings">
            <summary>Sets the stub of ILocalizationDictionary.GetAllStrings()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.GetOrNullString">
            <summary>Sets the stub of ILocalizationDictionary.GetOrNull(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.Abp#Localization#Dictionaries#ILocalizationDictionary#Item(System.String)">
            <summary>Sets the stub of ILocalizationDictionary.get_Item(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.ItemGetString">
            <summary>Sets the stub of ILocalizationDictionary.get_Item(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionary.ItemSetStringString">
            <summary>Sets the stub of ILocalizationDictionary.set_Item(String name, String value)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider">
            <summary>Stub type of Abp.Localization.Dictionaries.ILocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.#ctor">
            <summary>Initializes a new instance of type StubILocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.Abp#Localization#Dictionaries#ILocalizationDictionaryProvider#Extend(Abp.Localization.Dictionaries.ILocalizationDictionary)">
            <summary>Sets the stub of ILocalizationDictionaryProvider.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.Abp#Localization#Dictionaries#ILocalizationDictionaryProvider#Initialize(System.String)">
            <summary>Sets the stub of ILocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.Abp#Localization#Dictionaries#ILocalizationDictionaryProvider#DefaultDictionary">
            <summary>Sets the stub of ILocalizationDictionaryProvider.get_DefaultDictionary()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.DefaultDictionaryGet">
            <summary>Sets the stub of ILocalizationDictionaryProvider.get_DefaultDictionary()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.Abp#Localization#Dictionaries#ILocalizationDictionaryProvider#Dictionaries">
            <summary>Sets the stub of ILocalizationDictionaryProvider.get_Dictionaries()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.DictionariesGet">
            <summary>Sets the stub of ILocalizationDictionaryProvider.get_Dictionaries()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.ExtendILocalizationDictionary">
            <summary>Sets the stub of ILocalizationDictionaryProvider.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubILocalizationDictionaryProvider.InitializeString">
            <summary>Sets the stub of ILocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary">
            <summary>Stub type of Abp.Localization.Dictionaries.LocalizationDictionary</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.#ctor(System.Globalization.CultureInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.GetAllStrings">
            <summary>Sets the stub of LocalizationDictionary.GetAllStrings()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.GetAllStrings01">
            <summary>Sets the stub of LocalizationDictionary.GetAllStrings()</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.GetEnumerator">
            <summary>Sets the stub of LocalizationDictionary.GetEnumerator()</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.GetEnumerator01">
            <summary>Sets the stub of LocalizationDictionary.GetEnumerator()</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.GetOrNull(System.String)">
            <summary>Sets the stub of LocalizationDictionary.GetOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.GetOrNullString">
            <summary>Sets the stub of LocalizationDictionary.GetOrNull(String name)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizationDictionary</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.Item(System.String)">
            <summary>Sets the stub of LocalizationDictionary.get_Item(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.ItemGetString">
            <summary>Sets the stub of LocalizationDictionary.get_Item(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Fakes.StubLocalizationDictionary.ItemSetStringString">
            <summary>Sets the stub of LocalizationDictionary.set_Item(String name, String value)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider">
            <summary>Shim type of Abp.Localization.Dictionaries.Json.JsonEmbeddedFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.#ctor(Abp.Localization.Dictionaries.Json.JsonEmbeddedFileLocalizationDictionaryProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.AllInstances.CreateJsonLocalizationDictionaryString">
            <summary>Sets the shim of JsonEmbeddedFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String jsonString)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.AllInstances.InitializeString">
            <summary>Sets the shim of JsonEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.Bind(Abp.Localization.Dictionaries.ILocalizationDictionaryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.ConstructorAssemblyString">
            <summary>Sets the shim of JsonEmbeddedFileLocalizationDictionaryProvider.JsonEmbeddedFileLocalizationDictionaryProvider(Assembly assembly, String rootNamespace)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionaryString">
            <summary>Sets the shim of JsonEmbeddedFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String jsonString)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonEmbeddedFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the shim of JsonEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider">
            <summary>Shim type of Abp.Localization.Dictionaries.Json.JsonFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.#ctor(Abp.Localization.Dictionaries.Json.JsonFileLocalizationDictionaryProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.AllInstances.CreateJsonLocalizationDictionaryString">
            <summary>Sets the shim of JsonFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.AllInstances.InitializeString">
            <summary>Sets the shim of JsonFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.Bind(Abp.Localization.Dictionaries.ILocalizationDictionaryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.ConstructorString">
            <summary>Sets the shim of JsonFileLocalizationDictionaryProvider.JsonFileLocalizationDictionaryProvider(String directoryPath)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionaryString">
            <summary>Sets the shim of JsonFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the shim of JsonFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary">
            <summary>Shim type of Abp.Localization.Dictionaries.Json.JsonLocalizationDictionary</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.#ctor(Abp.Localization.Dictionaries.Json.JsonLocalizationDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.Bind(Abp.Localization.Dictionaries.ILocalizationDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.Bind(System.Collections.Generic.IEnumerable{Abp.Localization.LocalizedString})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.BuildFromFileString">
            <summary>Sets the shim of JsonLocalizationDictionary.BuildFromFile(String filePath)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.BuildFromJsonStringString">
            <summary>Sets the shim of JsonLocalizationDictionary.BuildFromJsonString(String jsonString)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationDictionary.ConstructorCultureInfo">
            <summary>Sets the shim of JsonLocalizationDictionary.JsonLocalizationDictionary(CultureInfo cultureInfo)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile">
            <summary>Shim type of Abp.Localization.Dictionaries.Json.JsonLocalizationFile</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.#ctor(Abp.Localization.Dictionaries.Json.JsonLocalizationFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.AllInstances.CultureGet">
            <summary>Sets the shim of JsonLocalizationFile.get_Culture()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.AllInstances.CultureSetString">
            <summary>Sets the shim of JsonLocalizationFile.set_Culture(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.AllInstances.TextsGet">
            <summary>Sets the shim of JsonLocalizationFile.get_Texts()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.AllInstances.TextsSetDictionaryOfStringString">
            <summary>Sets the shim of JsonLocalizationFile.set_Texts(Dictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.Constructor">
            <summary>Sets the shim of JsonLocalizationFile.JsonLocalizationFile()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.CultureGet">
            <summary>Sets the shim of JsonLocalizationFile.get_Culture()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.CultureSetString">
            <summary>Sets the shim of JsonLocalizationFile.set_Culture(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.TextsGet">
            <summary>Sets the shim of JsonLocalizationFile.get_Texts()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.ShimJsonLocalizationFile.TextsSetDictionaryOfStringString">
            <summary>Sets the shim of JsonLocalizationFile.set_Texts(Dictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider">
            <summary>Stub type of Abp.Localization.Dictionaries.Json.JsonEmbeddedFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.#ctor(System.Reflection.Assembly,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(System.String)">
            <summary>Sets the stub of JsonEmbeddedFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String jsonString)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionaryString">
            <summary>Sets the stub of JsonEmbeddedFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String jsonString)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.Initialize(System.String)">
            <summary>Sets the stub of JsonEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the stub of JsonEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.InitializeStub">
            <summary>Initializes a new instance of type StubJsonEmbeddedFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonEmbeddedFileLocalizationDictionaryProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider">
            <summary>Stub type of Abp.Localization.Dictionaries.Json.JsonFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(System.String)">
            <summary>Sets the stub of JsonFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionaryString">
            <summary>Sets the stub of JsonFileLocalizationDictionaryProvider.CreateJsonLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.Initialize(System.String)">
            <summary>Sets the stub of JsonFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the stub of JsonFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.InitializeStub">
            <summary>Initializes a new instance of type StubJsonFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonFileLocalizationDictionaryProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Json.Fakes.StubJsonLocalizationFile">
            <summary>Stub type of Abp.Localization.Dictionaries.Json.JsonLocalizationFile</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonLocalizationFile.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonLocalizationFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Json.Fakes.StubJsonLocalizationFile.InitializeStub">
            <summary>Initializes a new instance of type StubJsonLocalizationFile</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonLocalizationFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Json.Fakes.StubJsonLocalizationFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase">
            <summary>Shim type of Abp.Localization.Dictionaries.Xml.LocalizationDictionaryProviderBase</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.#ctor(Abp.Localization.Dictionaries.Xml.LocalizationDictionaryProviderBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.DefaultDictionaryGet">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.get_DefaultDictionary()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.DefaultDictionarySetILocalizationDictionary">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.set_DefaultDictionary(ILocalizationDictionary value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.DictionariesGet">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.get_Dictionaries()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.DictionariesSetIDictionaryOfStringILocalizationDictionary">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.set_Dictionaries(IDictionary`2&lt;String,ILocalizationDictionary&gt; value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.ExtendILocalizationDictionary">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.InitializeString">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.Initialize(String sourceName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.SourceNameGet">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.AllInstances.SourceNameSetString">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.set_SourceName(String value)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.Bind(Abp.Localization.Dictionaries.ILocalizationDictionaryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.Constructor">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.LocalizationDictionaryProviderBase()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.DefaultDictionaryGet">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.get_DefaultDictionary()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.DefaultDictionarySetILocalizationDictionary">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.set_DefaultDictionary(ILocalizationDictionary value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.DictionariesGet">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.get_Dictionaries()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.DictionariesSetIDictionaryOfStringILocalizationDictionary">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.set_Dictionaries(IDictionary`2&lt;String,ILocalizationDictionary&gt; value)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.ExtendILocalizationDictionary">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.Extend(ILocalizationDictionary dictionary)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.InitializeString">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.Initialize(String sourceName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.SourceNameGet">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimLocalizationDictionaryProviderBase.SourceNameSetString">
            <summary>Sets the shim of LocalizationDictionaryProviderBase.set_SourceName(String value)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider">
            <summary>Shim type of Abp.Localization.Dictionaries.Xml.XmlEmbeddedFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.#ctor(Abp.Localization.Dictionaries.Xml.XmlEmbeddedFileLocalizationDictionaryProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.AllInstances.CreateXmlLocalizationDictionaryString">
            <summary>Sets the shim of XmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String xmlString)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.AllInstances.InitializeString">
            <summary>Sets the shim of XmlEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.Bind(Abp.Localization.Dictionaries.ILocalizationDictionaryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.ConstructorAssemblyString">
            <summary>Sets the shim of XmlEmbeddedFileLocalizationDictionaryProvider.XmlEmbeddedFileLocalizationDictionaryProvider(Assembly assembly, String rootNamespace)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionaryString">
            <summary>Sets the shim of XmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String xmlString)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlEmbeddedFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the shim of XmlEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider">
            <summary>Shim type of Abp.Localization.Dictionaries.Xml.XmlFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.#ctor(Abp.Localization.Dictionaries.Xml.XmlFileLocalizationDictionaryProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.AllInstances.CreateXmlLocalizationDictionaryString">
            <summary>Sets the shim of XmlFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.AllInstances.InitializeString">
            <summary>Sets the shim of XmlFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.Bind(Abp.Localization.Dictionaries.ILocalizationDictionaryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.ConstructorString">
            <summary>Sets the shim of XmlFileLocalizationDictionaryProvider.XmlFileLocalizationDictionaryProvider(String directoryPath)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionaryString">
            <summary>Sets the shim of XmlFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the shim of XmlFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary">
            <summary>Shim type of Abp.Localization.Dictionaries.Xml.XmlLocalizationDictionary</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.#ctor(Abp.Localization.Dictionaries.Xml.XmlLocalizationDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.Bind(Abp.Localization.Dictionaries.ILocalizationDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.Bind(System.Collections.Generic.IEnumerable{Abp.Localization.LocalizedString})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.BuildFomFileString">
            <summary>Sets the shim of XmlLocalizationDictionary.BuildFomFile(String filePath)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.BuildFomXmlStringString">
            <summary>Sets the shim of XmlLocalizationDictionary.BuildFomXmlString(String xmlString)</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.ShimXmlLocalizationDictionary.ConstructorCultureInfo">
            <summary>Sets the shim of XmlLocalizationDictionary.XmlLocalizationDictionary(CultureInfo cultureInfo)</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase">
            <summary>Stub type of Abp.Localization.Dictionaries.Xml.LocalizationDictionaryProviderBase</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase.Initialize(System.String)">
            <summary>Sets the stub of LocalizationDictionaryProviderBase.Initialize(String sourceName)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase.InitializeString">
            <summary>Sets the stub of LocalizationDictionaryProviderBase.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizationDictionaryProviderBase</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubLocalizationDictionaryProviderBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider">
            <summary>Stub type of Abp.Localization.Dictionaries.Xml.XmlEmbeddedFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.#ctor(System.Reflection.Assembly,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(System.String)">
            <summary>Sets the stub of XmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String xmlString)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionaryString">
            <summary>Sets the stub of XmlEmbeddedFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String xmlString)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.Initialize(System.String)">
            <summary>Sets the stub of XmlEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the stub of XmlEmbeddedFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.InitializeStub">
            <summary>Initializes a new instance of type StubXmlEmbeddedFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlEmbeddedFileLocalizationDictionaryProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider">
            <summary>Stub type of Abp.Localization.Dictionaries.Xml.XmlFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(System.String)">
            <summary>Sets the stub of XmlFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionaryString">
            <summary>Sets the stub of XmlFileLocalizationDictionaryProvider.CreateXmlLocalizationDictionary(String fileName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.Initialize(System.String)">
            <summary>Sets the stub of XmlFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="F:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.InitializeString">
            <summary>Sets the stub of XmlFileLocalizationDictionaryProvider.Initialize(String sourceName)</summary>
        </member>
        <member name="M:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.InitializeStub">
            <summary>Initializes a new instance of type StubXmlFileLocalizationDictionaryProvider</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Dictionaries.Xml.Fakes.StubXmlFileLocalizationDictionaryProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute">
            <summary>Shim type of Abp.Localization.AbpDisplayNameAttribute</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.#ctor(Abp.Localization.AbpDisplayNameAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.AllInstances.DisplayNameGet">
            <summary>Sets the shim of AbpDisplayNameAttribute.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.AllInstances.KeyGet">
            <summary>Sets the shim of AbpDisplayNameAttribute.get_Key()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.AllInstances.KeySetString">
            <summary>Sets the shim of AbpDisplayNameAttribute.set_Key(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.AllInstances.SourceNameGet">
            <summary>Sets the shim of AbpDisplayNameAttribute.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.AllInstances.SourceNameSetString">
            <summary>Sets the shim of AbpDisplayNameAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.ConstructorStringString">
            <summary>Sets the shim of AbpDisplayNameAttribute.AbpDisplayNameAttribute(String sourceName, String key)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.DisplayNameGet">
            <summary>Sets the shim of AbpDisplayNameAttribute.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.KeyGet">
            <summary>Sets the shim of AbpDisplayNameAttribute.get_Key()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.KeySetString">
            <summary>Sets the shim of AbpDisplayNameAttribute.set_Key(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.SourceNameGet">
            <summary>Sets the shim of AbpDisplayNameAttribute.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimAbpDisplayNameAttribute.SourceNameSetString">
            <summary>Sets the shim of AbpDisplayNameAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimCultureInfoHelper">
            <summary>Shim type of Abp.Localization.CultureInfoHelper</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimCultureInfoHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimCultureInfoHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimCultureInfoHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimCultureInfoHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimCultureInfoHelper.GetString">
            <summary>Sets the shim of CultureInfoHelper.Get(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimCultureInfoHelper.StaticConstructor">
            <summary>Sets the shim of CultureInfoHelper.CultureInfoHelper()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimCultureInfoHelper.UseCultureInfoCultureInfo">
            <summary>Sets the shim of CultureInfoHelper.Use(CultureInfo culture, CultureInfo uiCulture)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimCultureInfoHelper.UseStringString">
            <summary>Sets the shim of CultureInfoHelper.Use(String culture, String uiCulture)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimDefaultLanguageProvider">
            <summary>Shim type of Abp.Localization.DefaultLanguageProvider</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimDefaultLanguageProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimDefaultLanguageProvider.#ctor(Abp.Localization.DefaultLanguageProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimDefaultLanguageProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimDefaultLanguageProvider.AllInstances.GetLanguages">
            <summary>Sets the shim of DefaultLanguageProvider.GetLanguages()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimDefaultLanguageProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimDefaultLanguageProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimDefaultLanguageProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimDefaultLanguageProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimDefaultLanguageProvider.Bind(Abp.Localization.ILanguageProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimDefaultLanguageProvider.ConstructorILocalizationConfiguration">
            <summary>Sets the shim of DefaultLanguageProvider.DefaultLanguageProvider(ILocalizationConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimDefaultLanguageProvider.GetLanguages">
            <summary>Sets the shim of DefaultLanguageProvider.GetLanguages()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimFixedLocalizableString">
            <summary>Shim type of Abp.Localization.FixedLocalizableString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimFixedLocalizableString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimFixedLocalizableString.#ctor(Abp.Localization.FixedLocalizableString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimFixedLocalizableString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.AllInstances.FixedStringGet">
            <summary>Sets the shim of FixedLocalizableString.get_FixedString()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.AllInstances.FixedStringSetString">
            <summary>Sets the shim of FixedLocalizableString.set_FixedString(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.AllInstances.LocalizeILocalizationContext">
            <summary>Sets the shim of FixedLocalizableString.Localize(ILocalizationContext context)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.AllInstances.LocalizeILocalizationContextCultureInfo">
            <summary>Sets the shim of FixedLocalizableString.Localize(ILocalizationContext context, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.AllInstances.ToString01">
            <summary>Sets the shim of FixedLocalizableString.ToString()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimFixedLocalizableString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimFixedLocalizableString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimFixedLocalizableString.Bind(Abp.Localization.ILocalizableString)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.Constructor">
            <summary>Sets the shim of FixedLocalizableString.FixedLocalizableString()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.ConstructorString">
            <summary>Sets the shim of FixedLocalizableString.FixedLocalizableString(String fixedString)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.FixedStringGet">
            <summary>Sets the shim of FixedLocalizableString.get_FixedString()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.FixedStringSetString">
            <summary>Sets the shim of FixedLocalizableString.set_FixedString(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.LocalizeILocalizationContext">
            <summary>Sets the shim of FixedLocalizableString.Localize(ILocalizationContext context)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.LocalizeILocalizationContextCultureInfo">
            <summary>Sets the shim of FixedLocalizableString.Localize(ILocalizationContext context, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimFixedLocalizableString.ToString">
            <summary>Sets the shim of FixedLocalizableString.ToString()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLanguageInfo">
            <summary>Shim type of Abp.Localization.LanguageInfo</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageInfo.#ctor(Abp.Localization.LanguageInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.DisplayNameGet">
            <summary>Sets the shim of LanguageInfo.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of LanguageInfo.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.IconGet">
            <summary>Sets the shim of LanguageInfo.get_Icon()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.IconSetString">
            <summary>Sets the shim of LanguageInfo.set_Icon(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.IsDefaultGet">
            <summary>Sets the shim of LanguageInfo.get_IsDefault()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.IsDefaultSetBoolean">
            <summary>Sets the shim of LanguageInfo.set_IsDefault(Boolean value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.IsDisabledGet">
            <summary>Sets the shim of LanguageInfo.get_IsDisabled()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.IsDisabledSetBoolean">
            <summary>Sets the shim of LanguageInfo.set_IsDisabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.NameGet">
            <summary>Sets the shim of LanguageInfo.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.AllInstances.NameSetString">
            <summary>Sets the shim of LanguageInfo.set_Name(String value)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.ConstructorStringStringStringBooleanBoolean">
            <summary>Sets the shim of LanguageInfo.LanguageInfo(String name, String displayName, String icon, Boolean isDefault, Boolean isDisabled)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.DisplayNameGet">
            <summary>Sets the shim of LanguageInfo.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.DisplayNameSetString">
            <summary>Sets the shim of LanguageInfo.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.IconGet">
            <summary>Sets the shim of LanguageInfo.get_Icon()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.IconSetString">
            <summary>Sets the shim of LanguageInfo.set_Icon(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.IsDefaultGet">
            <summary>Sets the shim of LanguageInfo.get_IsDefault()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.IsDefaultSetBoolean">
            <summary>Sets the shim of LanguageInfo.set_IsDefault(Boolean value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.IsDisabledGet">
            <summary>Sets the shim of LanguageInfo.get_IsDisabled()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.IsDisabledSetBoolean">
            <summary>Sets the shim of LanguageInfo.set_IsDisabled(Boolean value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.NameGet">
            <summary>Sets the shim of LanguageInfo.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageInfo.NameSetString">
            <summary>Sets the shim of LanguageInfo.set_Name(String value)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLanguageManager">
            <summary>Shim type of Abp.Localization.LanguageManager</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageManager.#ctor(Abp.Localization.LanguageManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLanguageManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.AllInstances.CurrentLanguageGet">
            <summary>Sets the shim of LanguageManager.get_CurrentLanguage()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.AllInstances.GetCurrentLanguage">
            <summary>Sets the shim of LanguageManager.GetCurrentLanguage()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.AllInstances.GetLanguages">
            <summary>Sets the shim of LanguageManager.GetLanguages()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageManager.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLanguageManager.Bind(Abp.Localization.ILanguageManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.ConstructorILanguageProvider">
            <summary>Sets the shim of LanguageManager.LanguageManager(ILanguageProvider languageProvider)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.CurrentLanguageGet">
            <summary>Sets the shim of LanguageManager.get_CurrentLanguage()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.GetCurrentLanguage">
            <summary>Sets the shim of LanguageManager.GetCurrentLanguage()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLanguageManager.GetLanguages">
            <summary>Sets the shim of LanguageManager.GetLanguages()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizableString">
            <summary>Shim type of Abp.Localization.LocalizableString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableString.#ctor(Abp.Localization.LocalizableString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizableString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.AllInstances.LocalizeILocalizationContext">
            <summary>Sets the shim of LocalizableString.Localize(ILocalizationContext context)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.AllInstances.LocalizeILocalizationContextCultureInfo">
            <summary>Sets the shim of LocalizableString.Localize(ILocalizationContext context, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.AllInstances.NameGet">
            <summary>Sets the shim of LocalizableString.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.AllInstances.NameSetString">
            <summary>Sets the shim of LocalizableString.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.AllInstances.SourceNameGet">
            <summary>Sets the shim of LocalizableString.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.AllInstances.SourceNameSetString">
            <summary>Sets the shim of LocalizableString.set_SourceName(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.AllInstances.ToString01">
            <summary>Sets the shim of LocalizableString.ToString()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableString.Bind(Abp.Localization.ILocalizableString)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.Constructor">
            <summary>Sets the shim of LocalizableString.LocalizableString()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.ConstructorStringString">
            <summary>Sets the shim of LocalizableString.LocalizableString(String name, String sourceName)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.LocalizeILocalizationContext">
            <summary>Sets the shim of LocalizableString.Localize(ILocalizationContext context)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.LocalizeILocalizationContextCultureInfo">
            <summary>Sets the shim of LocalizableString.Localize(ILocalizationContext context, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.NameGet">
            <summary>Sets the shim of LocalizableString.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.NameSetString">
            <summary>Sets the shim of LocalizableString.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.SourceNameGet">
            <summary>Sets the shim of LocalizableString.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.SourceNameSetString">
            <summary>Sets the shim of LocalizableString.set_SourceName(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableString.ToString">
            <summary>Sets the shim of LocalizableString.ToString()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter">
            <summary>Shim type of Abp.Localization.LocalizableStringToStringJsonConverter</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.#ctor(Abp.Localization.LocalizableStringToStringJsonConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.AllInstances.CanConvertType">
            <summary>Sets the shim of LocalizableStringToStringJsonConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of LocalizableStringToStringJsonConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of LocalizableStringToStringJsonConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.CanConvertType">
            <summary>Sets the shim of LocalizableStringToStringJsonConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.Constructor">
            <summary>Sets the shim of LocalizableStringToStringJsonConverter.LocalizableStringToStringJsonConverter()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of LocalizableStringToStringJsonConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizableStringToStringJsonConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of LocalizableStringToStringJsonConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationContext">
            <summary>Shim type of Abp.Localization.LocalizationContext</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationContext.#ctor(Abp.Localization.LocalizationContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationContext.AllInstances.LocalizationManagerGet">
            <summary>Sets the shim of LocalizationContext.get_LocalizationManager()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationContext.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationContext.Bind(Abp.Localization.ILocalizationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationContext.ConstructorILocalizationManager">
            <summary>Sets the shim of LocalizationContext.LocalizationContext(ILocalizationManager localizationManager)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationContext.LocalizationManagerGet">
            <summary>Sets the shim of LocalizationContext.get_LocalizationManager()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationHelper">
            <summary>Shim type of Abp.Localization.LocalizationHelper</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationHelper.GetSourceString">
            <summary>Sets the shim of LocalizationHelper.GetSource(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationHelper.GetStringStringString">
            <summary>Sets the shim of LocalizationHelper.GetString(String sourceName, String name)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationHelper.GetStringStringStringCultureInfo">
            <summary>Sets the shim of LocalizationHelper.GetString(String sourceName, String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationHelper.ManagerGet">
            <summary>Sets the shim of LocalizationHelper.get_Manager()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationHelper.StaticConstructor">
            <summary>Sets the shim of LocalizationHelper.LocalizationHelper()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationManagerExtensions">
            <summary>Shim type of Abp.Localization.LocalizationManagerExtensions</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.GetStringILocalizationManagerLocalizableString">
            <summary>Sets the shim of LocalizationManagerExtensions.GetString(ILocalizationManager localizationManager, LocalizableString localizableString)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.GetStringILocalizationManagerLocalizableStringCultureInfo">
            <summary>Sets the shim of LocalizationManagerExtensions.GetString(ILocalizationManager localizationManager, LocalizableString localizableString, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.GetStringILocalizationManagerStringString">
            <summary>Sets the shim of LocalizationManagerExtensions.GetString(ILocalizationManager localizationManager, String sourceName, String name)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationManagerExtensions.GetStringILocalizationManagerStringStringCultureInfo">
            <summary>Sets the shim of LocalizationManagerExtensions.GetString(ILocalizationManager localizationManager, String sourceName, String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationSettingNames">
            <summary>Shim type of Abp.Localization.LocalizationSettingNames</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSettingNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationSettingProvider">
            <summary>Shim type of Abp.Localization.LocalizationSettingProvider</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingProvider.#ctor(Abp.Localization.LocalizationSettingProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationSettingProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSettingProvider.AllInstances.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the shim of LocalizationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSettingProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSettingProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSettingProvider.Constructor">
            <summary>Sets the shim of LocalizationSettingProvider.LocalizationSettingProvider()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSettingProvider.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the shim of LocalizationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSettingProvider.LString">
            <summary>Sets the shim of LocalizationSettingProvider.L(String name)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizationSourceHelper">
            <summary>Shim type of Abp.Localization.LocalizationSourceHelper</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSourceHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSourceHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizationSourceHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSourceHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizationSourceHelper.ReturnGivenNameOrThrowExceptionILocalizationConfigurationStringStringCultureInfoILogger">
            <summary>Sets the shim of LocalizationSourceHelper.ReturnGivenNameOrThrowException(ILocalizationConfiguration configuration, String sourceName, String name, CultureInfo culture, ILogger logger)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizedString">
            <summary>Shim type of Abp.Localization.LocalizedString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizedString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizedString.#ctor(Abp.Localization.LocalizedString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimLocalizedString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.AllInstances.CultureInfoGet">
            <summary>Sets the shim of LocalizedString.get_CultureInfo()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.AllInstances.CultureInfoSetCultureInfo">
            <summary>Sets the shim of LocalizedString.set_CultureInfo(CultureInfo value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.AllInstances.NameGet">
            <summary>Sets the shim of LocalizedString.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.AllInstances.NameSetString">
            <summary>Sets the shim of LocalizedString.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.AllInstances.ValueGet">
            <summary>Sets the shim of LocalizedString.get_Value()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.AllInstances.ValueSetString">
            <summary>Sets the shim of LocalizedString.set_Value(String value)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizedString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimLocalizedString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.ConstructorStringStringCultureInfo">
            <summary>Sets the shim of LocalizedString.LocalizedString(String name, String value, CultureInfo cultureInfo)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.CultureInfoGet">
            <summary>Sets the shim of LocalizedString.get_CultureInfo()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.CultureInfoSetCultureInfo">
            <summary>Sets the shim of LocalizedString.set_CultureInfo(CultureInfo value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.NameGet">
            <summary>Sets the shim of LocalizedString.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.NameSetString">
            <summary>Sets the shim of LocalizedString.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.ValueGet">
            <summary>Sets the shim of LocalizedString.get_Value()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimLocalizedString.ValueSetString">
            <summary>Sets the shim of LocalizedString.set_Value(String value)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimNullLocalizationManager">
            <summary>Shim type of Abp.Localization.NullLocalizationManager</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimNullLocalizationManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimNullLocalizationManager.#ctor(Abp.Localization.NullLocalizationManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.ShimNullLocalizationManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.AllInstances.CurrentLanguageGet">
            <summary>Sets the shim of NullLocalizationManager.get_CurrentLanguage()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.AllInstances.GetAllLanguages">
            <summary>Sets the shim of NullLocalizationManager.GetAllLanguages()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.AllInstances.GetAllSources">
            <summary>Sets the shim of NullLocalizationManager.GetAllSources()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.AllInstances.GetSourceString">
            <summary>Sets the shim of NullLocalizationManager.GetSource(String name)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimNullLocalizationManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimNullLocalizationManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.ShimNullLocalizationManager.Bind(Abp.Localization.ILocalizationManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.Constructor">
            <summary>Sets the shim of NullLocalizationManager.NullLocalizationManager()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.CurrentLanguageGet">
            <summary>Sets the shim of NullLocalizationManager.get_CurrentLanguage()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.GetAllLanguages">
            <summary>Sets the shim of NullLocalizationManager.GetAllLanguages()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.GetAllSources">
            <summary>Sets the shim of NullLocalizationManager.GetAllSources()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.GetSourceString">
            <summary>Sets the shim of NullLocalizationManager.GetSource(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.InstanceGet">
            <summary>Sets the shim of NullLocalizationManager.get_Instance()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.ShimNullLocalizationManager.StaticConstructor">
            <summary>Sets the shim of NullLocalizationManager.NullLocalizationManager()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubAbpDisplayNameAttribute">
            <summary>Stub type of Abp.Localization.AbpDisplayNameAttribute</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.DisplayName">
            <summary>Sets the stub of AbpDisplayNameAttribute.get_DisplayName()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.DisplayNameGet">
            <summary>Sets the stub of AbpDisplayNameAttribute.get_DisplayName()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.Equals(System.Object)">
            <summary>Sets the stub of DisplayNameAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.EqualsObject">
            <summary>Sets the stub of DisplayNameAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.GetHashCode">
            <summary>Sets the stub of DisplayNameAttribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.GetHashCode01">
            <summary>Sets the stub of DisplayNameAttribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAbpDisplayNameAttribute</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.IsDefaultAttribute">
            <summary>Sets the stub of DisplayNameAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of DisplayNameAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubAbpDisplayNameAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubDefaultLanguageProvider">
            <summary>Stub type of Abp.Localization.DefaultLanguageProvider</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubDefaultLanguageProvider.#ctor(Abp.Configuration.Startup.ILocalizationConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubDefaultLanguageProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubDefaultLanguageProvider.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultLanguageProvider</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubDefaultLanguageProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubDefaultLanguageProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubFixedLocalizableString">
            <summary>Stub type of Abp.Localization.FixedLocalizableString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubFixedLocalizableString.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubFixedLocalizableString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubFixedLocalizableString.InitializeStub">
            <summary>Initializes a new instance of type StubFixedLocalizableString</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubFixedLocalizableString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubFixedLocalizableString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubFixedLocalizableString.ToString">
            <summary>Sets the stub of FixedLocalizableString.ToString()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubFixedLocalizableString.ToString01">
            <summary>Sets the stub of FixedLocalizableString.ToString()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubILanguageManager">
            <summary>Stub type of Abp.Localization.ILanguageManager</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILanguageManager.#ctor">
            <summary>Initializes a new instance of type StubILanguageManager</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILanguageManager.Abp#Localization#ILanguageManager#GetLanguages">
            <summary>Sets the stub of ILanguageManager.GetLanguages()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubILanguageManager.Abp#Localization#ILanguageManager#CurrentLanguage">
            <summary>Sets the stub of ILanguageManager.get_CurrentLanguage()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILanguageManager.CurrentLanguageGet">
            <summary>Sets the stub of ILanguageManager.get_CurrentLanguage()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILanguageManager.GetLanguages">
            <summary>Sets the stub of ILanguageManager.GetLanguages()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubILanguageProvider">
            <summary>Stub type of Abp.Localization.ILanguageProvider</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILanguageProvider.#ctor">
            <summary>Initializes a new instance of type StubILanguageProvider</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILanguageProvider.Abp#Localization#ILanguageProvider#GetLanguages">
            <summary>Sets the stub of ILanguageProvider.GetLanguages()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILanguageProvider.GetLanguages">
            <summary>Sets the stub of ILanguageProvider.GetLanguages()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubILocalizableString">
            <summary>Stub type of Abp.Localization.ILocalizableString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILocalizableString.#ctor">
            <summary>Initializes a new instance of type StubILocalizableString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILocalizableString.Abp#Localization#ILocalizableString#Localize(Abp.Localization.ILocalizationContext)">
            <summary>Sets the stub of ILocalizableString.Localize(ILocalizationContext context)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILocalizableString.Abp#Localization#ILocalizableString#Localize(Abp.Localization.ILocalizationContext,System.Globalization.CultureInfo)">
            <summary>Sets the stub of ILocalizableString.Localize(ILocalizationContext context, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILocalizableString.LocalizeILocalizationContext">
            <summary>Sets the stub of ILocalizableString.Localize(ILocalizationContext context)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILocalizableString.LocalizeILocalizationContextCultureInfo">
            <summary>Sets the stub of ILocalizableString.Localize(ILocalizationContext context, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubILocalizationContext">
            <summary>Stub type of Abp.Localization.ILocalizationContext</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILocalizationContext.#ctor">
            <summary>Initializes a new instance of type StubILocalizationContext</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubILocalizationContext.Abp#Localization#ILocalizationContext#LocalizationManager">
            <summary>Sets the stub of ILocalizationContext.get_LocalizationManager()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILocalizationContext.LocalizationManagerGet">
            <summary>Sets the stub of ILocalizationContext.get_LocalizationManager()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubILocalizationManager">
            <summary>Stub type of Abp.Localization.ILocalizationManager</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILocalizationManager.#ctor">
            <summary>Initializes a new instance of type StubILocalizationManager</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILocalizationManager.Abp#Localization#ILocalizationManager#GetAllSources">
            <summary>Sets the stub of ILocalizationManager.GetAllSources()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubILocalizationManager.Abp#Localization#ILocalizationManager#GetSource(System.String)">
            <summary>Sets the stub of ILocalizationManager.GetSource(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILocalizationManager.GetAllSources">
            <summary>Sets the stub of ILocalizationManager.GetAllSources()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubILocalizationManager.GetSourceString">
            <summary>Sets the stub of ILocalizationManager.GetSource(String name)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubLanguageInfo">
            <summary>Stub type of Abp.Localization.LanguageInfo</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLanguageInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLanguageInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLanguageInfo.InitializeStub">
            <summary>Initializes a new instance of type StubLanguageInfo</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLanguageInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLanguageInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubLanguageManager">
            <summary>Stub type of Abp.Localization.LanguageManager</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLanguageManager.#ctor(Abp.Localization.ILanguageProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLanguageManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLanguageManager.InitializeStub">
            <summary>Initializes a new instance of type StubLanguageManager</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLanguageManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLanguageManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubLocalizableString">
            <summary>Stub type of Abp.Localization.LocalizableString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableString.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableString.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizableString</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableString.ToString">
            <summary>Sets the stub of LocalizableString.ToString()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubLocalizableString.ToString01">
            <summary>Sets the stub of LocalizableString.ToString()</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter">
            <summary>Stub type of Abp.Localization.LocalizableStringToStringJsonConverter</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.CanConvert(System.Type)">
            <summary>Sets the stub of LocalizableStringToStringJsonConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.CanConvertType">
            <summary>Sets the stub of LocalizableStringToStringJsonConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.CanRead">
            <summary>Sets the stub of JsonConverter.get_CanRead()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.CanReadGet">
            <summary>Sets the stub of JsonConverter.get_CanRead()</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.CanWrite">
            <summary>Sets the stub of JsonConverter.get_CanWrite()</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.CanWriteGet">
            <summary>Sets the stub of JsonConverter.get_CanWrite()</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizableStringToStringJsonConverter</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Sets the stub of LocalizableStringToStringJsonConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the stub of LocalizableStringToStringJsonConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Sets the stub of LocalizableStringToStringJsonConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubLocalizableStringToStringJsonConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the stub of LocalizableStringToStringJsonConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubLocalizationContext">
            <summary>Stub type of Abp.Localization.LocalizationContext</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizationContext.#ctor(Abp.Localization.ILocalizationManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizationContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizationContext.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizationContext</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizationContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizationContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubLocalizationSettingProvider">
            <summary>Stub type of Abp.Localization.LocalizationSettingProvider</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizationSettingProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizationSettingProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizationSettingProvider.GetSettingDefinitions(Abp.Configuration.SettingDefinitionProviderContext)">
            <summary>Sets the stub of LocalizationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="F:Abp.Localization.Fakes.StubLocalizationSettingProvider.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the stub of LocalizationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizationSettingProvider.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizationSettingProvider</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizationSettingProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizationSettingProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Fakes.StubLocalizedString">
            <summary>Stub type of Abp.Localization.LocalizedString</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizedString.#ctor(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizedString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Fakes.StubLocalizedString.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizedString</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizedString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Fakes.StubLocalizedString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo">
            <summary>Shim type of Abp.Localization.Sources.LocalizationSourceExtensionInfo</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.#ctor(Abp.Localization.Sources.LocalizationSourceExtensionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.AllInstances.DictionaryProviderGet">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.get_DictionaryProvider()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.AllInstances.DictionaryProviderSetILocalizationDictionaryProvider">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.set_DictionaryProvider(ILocalizationDictionaryProvider value)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.AllInstances.SourceNameGet">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.AllInstances.SourceNameSetString">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.set_SourceName(String value)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.ConstructorStringILocalizationDictionaryProvider">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.LocalizationSourceExtensionInfo(String sourceName, ILocalizationDictionaryProvider dictionaryProvider)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.DictionaryProviderGet">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.get_DictionaryProvider()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.DictionaryProviderSetILocalizationDictionaryProvider">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.set_DictionaryProvider(ILocalizationDictionaryProvider value)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.SourceNameGet">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.get_SourceName()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensionInfo.SourceNameSetString">
            <summary>Sets the shim of LocalizationSourceExtensionInfo.set_SourceName(String value)</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensions">
            <summary>Shim type of Abp.Localization.Sources.LocalizationSourceExtensions</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensions.GetStringILocalizationSourceStringCultureInfoObjectArray">
            <summary>Sets the shim of LocalizationSourceExtensions.GetString(ILocalizationSource source, String name, CultureInfo culture, Object[] args)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.ShimLocalizationSourceExtensions.GetStringILocalizationSourceStringObjectArray">
            <summary>Sets the shim of LocalizationSourceExtensions.GetString(ILocalizationSource source, String name, Object[] args)</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Fakes.StubILocalizationSource">
            <summary>Stub type of Abp.Localization.Sources.ILocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.#ctor">
            <summary>Initializes a new instance of type StubILocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetAllStrings(System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetAllStrings(System.Globalization.CultureInfo,System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetString(System.String)">
            <summary>Sets the stub of ILocalizationSource.GetString(String name)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetString(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of ILocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetStringOrNull(System.String,System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#Initialize(Abp.Configuration.Startup.ILocalizationConfiguration,Abp.Dependency.IIocResolver)">
            <summary>Sets the stub of ILocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.GetAllStringsBoolean">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.GetAllStringsCultureInfoBoolean">
            <summary>Sets the stub of ILocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.GetStringOrNullStringBoolean">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.GetStringOrNullStringCultureInfoBoolean">
            <summary>Sets the stub of ILocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.GetStringString">
            <summary>Sets the stub of ILocalizationSource.GetString(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.GetStringStringCultureInfo">
            <summary>Sets the stub of ILocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the stub of ILocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.StubILocalizationSource.Abp#Localization#Sources#ILocalizationSource#Name">
            <summary>Sets the stub of ILocalizationSource.get_Name()</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Fakes.StubILocalizationSource.NameGet">
            <summary>Sets the stub of ILocalizationSource.get_Name()</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Fakes.StubLocalizationSourceExtensionInfo">
            <summary>Stub type of Abp.Localization.Sources.LocalizationSourceExtensionInfo</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubLocalizationSourceExtensionInfo.#ctor(System.String,Abp.Localization.Dictionaries.ILocalizationDictionaryProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.StubLocalizationSourceExtensionInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Fakes.StubLocalizationSourceExtensionInfo.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizationSourceExtensionInfo</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.StubLocalizationSourceExtensionInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Fakes.StubLocalizationSourceExtensionInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource">
            <summary>Shim type of Abp.Localization.Sources.Resource.ResourceFileLocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.#ctor(Abp.Localization.Sources.Resource.ResourceFileLocalizationSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.GetAllStringsBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.GetAllStringsCultureInfoBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.GetStringOrNullStringBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.GetStringOrNullStringCultureInfoBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.GetStringString">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetString(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.GetStringStringCultureInfo">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the shim of ResourceFileLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.NameGet">
            <summary>Sets the shim of ResourceFileLocalizationSource.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.ResourceManagerGet">
            <summary>Sets the shim of ResourceFileLocalizationSource.get_ResourceManager()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.AllInstances.ReturnGivenNameOrThrowExceptionStringCultureInfo">
            <summary>Sets the shim of ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.Bind(Abp.Localization.Sources.ILocalizationSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.ConstructorStringResourceManager">
            <summary>Sets the shim of ResourceFileLocalizationSource.ResourceFileLocalizationSource(String name, ResourceManager resourceManager)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.GetAllStringsBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.GetAllStringsCultureInfoBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.GetStringOrNullStringBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetStringOrNull(String name, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.GetStringOrNullStringCultureInfoBoolean">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetStringOrNull(String name, CultureInfo culture, Boolean tryDefaults)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.GetStringString">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetString(String name)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.GetStringStringCultureInfo">
            <summary>Sets the shim of ResourceFileLocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the shim of ResourceFileLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.NameGet">
            <summary>Sets the shim of ResourceFileLocalizationSource.get_Name()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.ResourceManagerGet">
            <summary>Sets the shim of ResourceFileLocalizationSource.get_ResourceManager()</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.ShimResourceFileLocalizationSource.ReturnGivenNameOrThrowExceptionStringCultureInfo">
            <summary>Sets the shim of ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource">
            <summary>Stub type of Abp.Localization.Sources.Resource.ResourceFileLocalizationSource</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.#ctor(System.String,System.Resources.ResourceManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetAllStrings(System.Boolean)">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetAllStringsBoolean">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetAllStrings(Boolean includeDefaults)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetAllStringsCultureInfoBoolean">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetAllStrings(CultureInfo culture, Boolean includeDefaults)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetString(System.String)">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetString(String name)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetStringString">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetString(String name)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.GetStringStringCultureInfo">
            <summary>Sets the stub of ResourceFileLocalizationSource.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.Initialize(Abp.Configuration.Startup.ILocalizationConfiguration,Abp.Dependency.IIocResolver)">
            <summary>Sets the stub of ResourceFileLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.InitializeILocalizationConfigurationIIocResolver">
            <summary>Sets the stub of ResourceFileLocalizationSource.Initialize(ILocalizationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.InitializeStub">
            <summary>Initializes a new instance of type StubResourceFileLocalizationSource</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.ReturnGivenNameOrThrowException(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Localization.Sources.Resource.Fakes.StubResourceFileLocalizationSource.ReturnGivenNameOrThrowExceptionStringCultureInfo">
            <summary>Sets the stub of ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Logging.Fakes.ShimLogHelper">
            <summary>Shim type of Abp.Logging.LogHelper</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.ShimLogHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.ShimLogHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.ShimLogHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLogHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLogHelper.LogExceptionException">
            <summary>Sets the shim of LogHelper.LogException(Exception ex)</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLogHelper.LogExceptionILoggerException">
            <summary>Sets the shim of LogHelper.LogException(ILogger logger, Exception ex)</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLogHelper.LogValidationErrorsILoggerException">
            <summary>Sets the shim of LogHelper.LogValidationErrors(ILogger logger, Exception exception)</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLogHelper.LoggerGet">
            <summary>Sets the shim of LogHelper.get_Logger()</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLogHelper.LoggerSetILogger">
            <summary>Sets the shim of LogHelper.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLogHelper.StaticConstructor">
            <summary>Sets the shim of LogHelper.LogHelper()</summary>
        </member>
        <member name="T:Abp.Logging.Fakes.ShimLoggerExtensions">
            <summary>Shim type of Abp.Logging.LoggerExtensions</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.ShimLoggerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.ShimLoggerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.ShimLoggerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLoggerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLoggerExtensions.LogILoggerLogSeverityFuncOfString">
            <summary>Sets the shim of LoggerExtensions.Log(ILogger logger, LogSeverity severity, Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLoggerExtensions.LogILoggerLogSeverityString">
            <summary>Sets the shim of LoggerExtensions.Log(ILogger logger, LogSeverity severity, String message)</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.ShimLoggerExtensions.LogILoggerLogSeverityStringException">
            <summary>Sets the shim of LoggerExtensions.Log(ILogger logger, LogSeverity severity, String message, Exception exception)</summary>
        </member>
        <member name="T:Abp.Logging.Fakes.StubIHasLogSeverity">
            <summary>Stub type of Abp.Logging.IHasLogSeverity</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.StubIHasLogSeverity.#ctor">
            <summary>Initializes a new instance of type StubIHasLogSeverity</summary>
        </member>
        <member name="M:Abp.Logging.Fakes.StubIHasLogSeverity.AttachBackingFieldToSeverity">
            <summary>Attaches delegates to emulate StubIHasLogSeverity.Severity as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Logging.Fakes.StubIHasLogSeverity.Abp#Logging#IHasLogSeverity#Severity">
            <summary>Sets the stub of IHasLogSeverity.get_Severity()</summary>
        </member>
        <member name="F:Abp.Logging.Fakes.StubIHasLogSeverity.SeverityGet">
            <summary>Sets the stub of IHasLogSeverity.get_Severity()</summary>
        </member>
        <member name="F:Abp.Logging.Fakes.StubIHasLogSeverity.SeveritySetLogSeverity">
            <summary>Sets the stub of IHasLogSeverity.set_Severity(LogSeverity value)</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimAbpModule">
            <summary>Shim type of Abp.Modules.AbpModule</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModule.#ctor(Abp.Modules.AbpModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AddModuleAndDependenciesRecursivelyListOfTypeType">
            <summary>Sets the shim of AbpModule.AddModuleAndDependenciesRecursively(List`1&lt;Type&gt; modules, Type module)</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimAbpModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.ConfigurationGet">
            <summary>Sets the shim of AbpModule.get_Configuration()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.ConfigurationSetIAbpStartupConfiguration">
            <summary>Sets the shim of AbpModule.set_Configuration(IAbpStartupConfiguration value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.GetAdditionalAssemblies">
            <summary>Sets the shim of AbpModule.GetAdditionalAssemblies()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.Initialize">
            <summary>Sets the shim of AbpModule.Initialize()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.IocManagerGet">
            <summary>Sets the shim of AbpModule.get_IocManager()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.IocManagerSetIIocManager">
            <summary>Sets the shim of AbpModule.set_IocManager(IIocManager value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.LoggerGet">
            <summary>Sets the shim of AbpModule.get_Logger()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of AbpModule.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.PostInitialize">
            <summary>Sets the shim of AbpModule.PostInitialize()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.PreInitialize">
            <summary>Sets the shim of AbpModule.PreInitialize()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.AllInstances.Shutdown">
            <summary>Sets the shim of AbpModule.Shutdown()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.ConfigurationGet">
            <summary>Sets the shim of AbpModule.get_Configuration()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.ConfigurationSetIAbpStartupConfiguration">
            <summary>Sets the shim of AbpModule.set_Configuration(IAbpStartupConfiguration value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.Constructor">
            <summary>Sets the shim of AbpModule.AbpModule()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.FindDependedModuleTypesRecursivelyIncludingGivenModuleType">
            <summary>Sets the shim of AbpModule.FindDependedModuleTypesRecursivelyIncludingGivenModule(Type moduleType)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.FindDependedModuleTypesType">
            <summary>Sets the shim of AbpModule.FindDependedModuleTypes(Type moduleType)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.GetAdditionalAssemblies">
            <summary>Sets the shim of AbpModule.GetAdditionalAssemblies()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.Initialize">
            <summary>Sets the shim of AbpModule.Initialize()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.IocManagerGet">
            <summary>Sets the shim of AbpModule.get_IocManager()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.IocManagerSetIIocManager">
            <summary>Sets the shim of AbpModule.set_IocManager(IIocManager value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.IsAbpModuleType">
            <summary>Sets the shim of AbpModule.IsAbpModule(Type type)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.LoggerGet">
            <summary>Sets the shim of AbpModule.get_Logger()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.LoggerSetILogger">
            <summary>Sets the shim of AbpModule.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.PostInitialize">
            <summary>Sets the shim of AbpModule.PostInitialize()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.PreInitialize">
            <summary>Sets the shim of AbpModule.PreInitialize()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModule.Shutdown">
            <summary>Sets the shim of AbpModule.Shutdown()</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimAbpModuleInfo">
            <summary>Shim type of Abp.Modules.AbpModuleInfo</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleInfo.#ctor(Abp.Modules.AbpModuleInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimAbpModuleInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.AllInstances.AssemblyGet">
            <summary>Sets the shim of AbpModuleInfo.get_Assembly()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.AllInstances.DependenciesGet">
            <summary>Sets the shim of AbpModuleInfo.get_Dependencies()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.AllInstances.InstanceGet">
            <summary>Sets the shim of AbpModuleInfo.get_Instance()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.AllInstances.IsLoadedAsPlugInGet">
            <summary>Sets the shim of AbpModuleInfo.get_IsLoadedAsPlugIn()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.AllInstances.ToString01">
            <summary>Sets the shim of AbpModuleInfo.ToString()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.AllInstances.TypeGet">
            <summary>Sets the shim of AbpModuleInfo.get_Type()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.AssemblyGet">
            <summary>Sets the shim of AbpModuleInfo.get_Assembly()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.ConstructorTypeAbpModuleBoolean">
            <summary>Sets the shim of AbpModuleInfo.AbpModuleInfo(Type type, AbpModule instance, Boolean isLoadedAsPlugIn)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.DependenciesGet">
            <summary>Sets the shim of AbpModuleInfo.get_Dependencies()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.InstanceGet">
            <summary>Sets the shim of AbpModuleInfo.get_Instance()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.IsLoadedAsPlugInGet">
            <summary>Sets the shim of AbpModuleInfo.get_IsLoadedAsPlugIn()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.ToString">
            <summary>Sets the shim of AbpModuleInfo.ToString()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleInfo.TypeGet">
            <summary>Sets the shim of AbpModuleInfo.get_Type()</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimAbpModuleManager">
            <summary>Shim type of Abp.Modules.AbpModuleManager</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleManager.#ctor(Abp.Modules.AbpModuleManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.CreateModulesICollectionOfTypeListOfType">
            <summary>Sets the shim of AbpModuleManager.CreateModules(ICollection`1&lt;Type&gt; moduleTypes, List`1&lt;Type&gt; plugInModuleTypes)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.FindAllModuleTypesListOfTypeOut">
            <summary>Sets the shim of AbpModuleManager.FindAllModuleTypes(List`1&lt;Type&gt;&amp; plugInModuleTypes)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.InitializeType">
            <summary>Sets the shim of AbpModuleManager.Initialize(Type startupModule)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.LoadAllModules">
            <summary>Sets the shim of AbpModuleManager.LoadAllModules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.LoggerGet">
            <summary>Sets the shim of AbpModuleManager.get_Logger()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of AbpModuleManager.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.ModulesGet">
            <summary>Sets the shim of AbpModuleManager.get_Modules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.RegisterModulesICollectionOfType">
            <summary>Sets the shim of AbpModuleManager.RegisterModules(ICollection`1&lt;Type&gt; moduleTypes)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.SetDependencies">
            <summary>Sets the shim of AbpModuleManager.SetDependencies()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.ShutdownModules">
            <summary>Sets the shim of AbpModuleManager.ShutdownModules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.StartModules">
            <summary>Sets the shim of AbpModuleManager.StartModules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.StartupModuleGet">
            <summary>Sets the shim of AbpModuleManager.get_StartupModule()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.AllInstances.StartupModuleSetAbpModuleInfo">
            <summary>Sets the shim of AbpModuleManager.set_StartupModule(AbpModuleInfo value)</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimAbpModuleManager.Bind(Abp.Modules.IAbpModuleManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.ConstructorIIocManagerIAbpPlugInManager">
            <summary>Sets the shim of AbpModuleManager.AbpModuleManager(IIocManager iocManager, IAbpPlugInManager abpPlugInManager)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.CreateModulesICollectionOfTypeListOfType">
            <summary>Sets the shim of AbpModuleManager.CreateModules(ICollection`1&lt;Type&gt; moduleTypes, List`1&lt;Type&gt; plugInModuleTypes)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.FindAllModuleTypesListOfTypeOut">
            <summary>Sets the shim of AbpModuleManager.FindAllModuleTypes(List`1&lt;Type&gt;&amp; plugInModuleTypes)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.InitializeType">
            <summary>Sets the shim of AbpModuleManager.Initialize(Type startupModule)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.LoadAllModules">
            <summary>Sets the shim of AbpModuleManager.LoadAllModules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.LoggerGet">
            <summary>Sets the shim of AbpModuleManager.get_Logger()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.LoggerSetILogger">
            <summary>Sets the shim of AbpModuleManager.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.ModulesGet">
            <summary>Sets the shim of AbpModuleManager.get_Modules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.RegisterModulesICollectionOfType">
            <summary>Sets the shim of AbpModuleManager.RegisterModules(ICollection`1&lt;Type&gt; moduleTypes)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.SetDependencies">
            <summary>Sets the shim of AbpModuleManager.SetDependencies()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.ShutdownModules">
            <summary>Sets the shim of AbpModuleManager.ShutdownModules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.StartModules">
            <summary>Sets the shim of AbpModuleManager.StartModules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.StartupModuleGet">
            <summary>Sets the shim of AbpModuleManager.get_StartupModule()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimAbpModuleManager.StartupModuleSetAbpModuleInfo">
            <summary>Sets the shim of AbpModuleManager.set_StartupModule(AbpModuleInfo value)</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimDependsOnAttribute">
            <summary>Shim type of Abp.Modules.DependsOnAttribute</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimDependsOnAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimDependsOnAttribute.#ctor(Abp.Modules.DependsOnAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.ShimDependsOnAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimDependsOnAttribute.AllInstances.DependedModuleTypesGet">
            <summary>Sets the shim of DependsOnAttribute.get_DependedModuleTypes()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimDependsOnAttribute.AllInstances.DependedModuleTypesSetTypeArray">
            <summary>Sets the shim of DependsOnAttribute.set_DependedModuleTypes(Type[] value)</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimDependsOnAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.ShimDependsOnAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimDependsOnAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimDependsOnAttribute.ConstructorTypeArray">
            <summary>Sets the shim of DependsOnAttribute.DependsOnAttribute(Type[] dependedModuleTypes)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimDependsOnAttribute.DependedModuleTypesGet">
            <summary>Sets the shim of DependsOnAttribute.get_DependedModuleTypes()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.ShimDependsOnAttribute.DependedModuleTypesSetTypeArray">
            <summary>Sets the shim of DependsOnAttribute.set_DependedModuleTypes(Type[] value)</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.StubAbpModule">
            <summary>Stub type of Abp.Modules.AbpModule</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModule.GetAdditionalAssemblies">
            <summary>Sets the stub of AbpModule.GetAdditionalAssemblies()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModule.GetAdditionalAssemblies01">
            <summary>Sets the stub of AbpModule.GetAdditionalAssemblies()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModule.Initialize">
            <summary>Sets the stub of AbpModule.Initialize()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModule.Initialize01">
            <summary>Sets the stub of AbpModule.Initialize()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModule.InitializeStub">
            <summary>Initializes a new instance of type StubAbpModule</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModule.PostInitialize">
            <summary>Sets the stub of AbpModule.PostInitialize()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModule.PostInitialize01">
            <summary>Sets the stub of AbpModule.PostInitialize()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModule.PreInitialize">
            <summary>Sets the stub of AbpModule.PreInitialize()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModule.PreInitialize01">
            <summary>Sets the stub of AbpModule.PreInitialize()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModule.Shutdown">
            <summary>Sets the stub of AbpModule.Shutdown()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModule.Shutdown01">
            <summary>Sets the stub of AbpModule.Shutdown()</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.StubAbpModuleInfo">
            <summary>Stub type of Abp.Modules.AbpModuleInfo</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleInfo.#ctor(System.Type,Abp.Modules.AbpModule,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModuleInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleInfo.InitializeStub">
            <summary>Initializes a new instance of type StubAbpModuleInfo</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModuleInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModuleInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleInfo.ToString">
            <summary>Sets the stub of AbpModuleInfo.ToString()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModuleInfo.ToString01">
            <summary>Sets the stub of AbpModuleInfo.ToString()</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.StubAbpModuleManager">
            <summary>Stub type of Abp.Modules.AbpModuleManager</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleManager.#ctor(Abp.Dependency.IIocManager,Abp.PlugIns.IAbpPlugInManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModuleManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleManager.Initialize(System.Type)">
            <summary>Sets the stub of AbpModuleManager.Initialize(Type startupModule)</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleManager.InitializeStub">
            <summary>Initializes a new instance of type StubAbpModuleManager</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModuleManager.InitializeType">
            <summary>Sets the stub of AbpModuleManager.Initialize(Type startupModule)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModuleManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubAbpModuleManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleManager.ShutdownModules">
            <summary>Sets the stub of AbpModuleManager.ShutdownModules()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModuleManager.ShutdownModules01">
            <summary>Sets the stub of AbpModuleManager.ShutdownModules()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubAbpModuleManager.StartModules">
            <summary>Sets the stub of AbpModuleManager.StartModules()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubAbpModuleManager.StartModules01">
            <summary>Sets the stub of AbpModuleManager.StartModules()</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.StubDependsOnAttribute">
            <summary>Stub type of Abp.Modules.DependsOnAttribute</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubDependsOnAttribute.#ctor(System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubDependsOnAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubDependsOnAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubDependsOnAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubDependsOnAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubDependsOnAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubDependsOnAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDependsOnAttribute</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubDependsOnAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubDependsOnAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubDependsOnAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubDependsOnAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubDependsOnAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubDependsOnAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubDependsOnAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubDependsOnAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Modules.Fakes.StubIAbpModuleManager">
            <summary>Stub type of Abp.Modules.IAbpModuleManager</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubIAbpModuleManager.#ctor">
            <summary>Initializes a new instance of type StubIAbpModuleManager</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubIAbpModuleManager.Abp#Modules#IAbpModuleManager#Initialize(System.Type)">
            <summary>Sets the stub of IAbpModuleManager.Initialize(Type startupModule)</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubIAbpModuleManager.Abp#Modules#IAbpModuleManager#ShutdownModules">
            <summary>Sets the stub of IAbpModuleManager.ShutdownModules()</summary>
        </member>
        <member name="M:Abp.Modules.Fakes.StubIAbpModuleManager.Abp#Modules#IAbpModuleManager#StartModules">
            <summary>Sets the stub of IAbpModuleManager.StartModules()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubIAbpModuleManager.InitializeType">
            <summary>Sets the stub of IAbpModuleManager.Initialize(Type startupModule)</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubIAbpModuleManager.Abp#Modules#IAbpModuleManager#Modules">
            <summary>Sets the stub of IAbpModuleManager.get_Modules()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubIAbpModuleManager.ModulesGet">
            <summary>Sets the stub of IAbpModuleManager.get_Modules()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubIAbpModuleManager.ShutdownModules">
            <summary>Sets the stub of IAbpModuleManager.ShutdownModules()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubIAbpModuleManager.StartModules">
            <summary>Sets the stub of IAbpModuleManager.StartModules()</summary>
        </member>
        <member name="P:Abp.Modules.Fakes.StubIAbpModuleManager.Abp#Modules#IAbpModuleManager#StartupModule">
            <summary>Sets the stub of IAbpModuleManager.get_StartupModule()</summary>
        </member>
        <member name="F:Abp.Modules.Fakes.StubIAbpModuleManager.StartupModuleGet">
            <summary>Sets the stub of IAbpModuleManager.get_StartupModule()</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimMultiTenancyConsts">
            <summary>Shim type of Abp.MultiTenancy.MultiTenancyConsts</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancyConsts.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancyConsts.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancyConsts.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancyConsts.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimMultiTenancyExtensions">
            <summary>Shim type of Abp.MultiTenancy.MultiTenancyExtensions</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancyExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancyExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancyExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancyExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancyExtensions.GetMultiTenancySideIMayHaveTenant">
            <summary>Sets the shim of MultiTenancyExtensions.GetMultiTenancySide(IMayHaveTenant obj)</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute">
            <summary>Shim type of Abp.MultiTenancy.MultiTenancySideAttribute</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.#ctor(Abp.MultiTenancy.MultiTenancySideAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.AllInstances.SideGet">
            <summary>Sets the shim of MultiTenancySideAttribute.get_Side()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.AllInstances.SideSetMultiTenancySides">
            <summary>Sets the shim of MultiTenancySideAttribute.set_Side(MultiTenancySides value)</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.ConstructorMultiTenancySides">
            <summary>Sets the shim of MultiTenancySideAttribute.MultiTenancySideAttribute(MultiTenancySides side)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.SideGet">
            <summary>Sets the shim of MultiTenancySideAttribute.get_Side()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimMultiTenancySideAttribute.SideSetMultiTenancySides">
            <summary>Sets the shim of MultiTenancySideAttribute.set_Side(MultiTenancySides value)</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache">
            <summary>Shim type of Abp.MultiTenancy.NullTenantResolverCache</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.#ctor(Abp.MultiTenancy.NullTenantResolverCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.AllInstances.ValueGet">
            <summary>Sets the shim of NullTenantResolverCache.get_Value()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.AllInstances.ValueSetTenantResolverCacheItem">
            <summary>Sets the shim of NullTenantResolverCache.set_Value(TenantResolverCacheItem value)</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.Bind(Abp.MultiTenancy.ITenantResolverCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.Constructor">
            <summary>Sets the shim of NullTenantResolverCache.NullTenantResolverCache()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.ValueGet">
            <summary>Sets the shim of NullTenantResolverCache.get_Value()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantResolverCache.ValueSetTenantResolverCacheItem">
            <summary>Sets the shim of NullTenantResolverCache.set_Value(TenantResolverCacheItem value)</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimNullTenantStore">
            <summary>Shim type of Abp.MultiTenancy.NullTenantStore</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantStore.#ctor(Abp.MultiTenancy.NullTenantStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimNullTenantStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantStore.AllInstances.FindInt32">
            <summary>Sets the shim of NullTenantStore.Find(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantStore.AllInstances.FindString">
            <summary>Sets the shim of NullTenantStore.Find(String tenancyName)</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimNullTenantStore.Bind(Abp.MultiTenancy.ITenantStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantStore.Constructor">
            <summary>Sets the shim of NullTenantStore.NullTenantStore()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantStore.FindInt32">
            <summary>Sets the shim of NullTenantStore.Find(Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimNullTenantStore.FindString">
            <summary>Sets the shim of NullTenantStore.Find(String tenancyName)</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimTenantInfo">
            <summary>Shim type of Abp.MultiTenancy.TenantInfo</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantInfo.#ctor(Abp.MultiTenancy.TenantInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimTenantInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.AllInstances.IdGet">
            <summary>Sets the shim of TenantInfo.get_Id()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.AllInstances.IdSetInt32">
            <summary>Sets the shim of TenantInfo.set_Id(Int32 value)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.AllInstances.TenancyNameGet">
            <summary>Sets the shim of TenantInfo.get_TenancyName()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.AllInstances.TenancyNameSetString">
            <summary>Sets the shim of TenantInfo.set_TenancyName(String value)</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.ConstructorInt32String">
            <summary>Sets the shim of TenantInfo.TenantInfo(Int32 id, String tenancyName)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.IdGet">
            <summary>Sets the shim of TenantInfo.get_Id()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.IdSetInt32">
            <summary>Sets the shim of TenantInfo.set_Id(Int32 value)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.TenancyNameGet">
            <summary>Sets the shim of TenantInfo.get_TenancyName()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantInfo.TenancyNameSetString">
            <summary>Sets the shim of TenantInfo.set_TenancyName(String value)</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimTenantResolver">
            <summary>Shim type of Abp.MultiTenancy.TenantResolver</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolver.#ctor(Abp.MultiTenancy.TenantResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimTenantResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.AllInstances.GetTenantIdFromContributors">
            <summary>Sets the shim of TenantResolver.GetTenantIdFromContributors()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.AllInstances.LoggerGet">
            <summary>Sets the shim of TenantResolver.get_Logger()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of TenantResolver.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.AllInstances.ResolveTenantId">
            <summary>Sets the shim of TenantResolver.ResolveTenantId()</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolver.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolver.Bind(Abp.MultiTenancy.ITenantResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.ConstructorIMultiTenancyConfigIIocResolverITenantStoreITenantResolverCacheIAmbientScopeProviderOfBoolean">
            <summary>Sets the shim of TenantResolver.TenantResolver(IMultiTenancyConfig multiTenancy, IIocResolver iocResolver, ITenantStore tenantStore, ITenantResolverCache cache, IAmbientScopeProvider`1&lt;Boolean&gt; ambientScopeProvider)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.GetTenantIdFromContributors">
            <summary>Sets the shim of TenantResolver.GetTenantIdFromContributors()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.LoggerGet">
            <summary>Sets the shim of TenantResolver.get_Logger()</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.LoggerSetILogger">
            <summary>Sets the shim of TenantResolver.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolver.ResolveTenantId">
            <summary>Sets the shim of TenantResolver.ResolveTenantId()</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem">
            <summary>Shim type of Abp.MultiTenancy.TenantResolverCacheItem</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.#ctor(Abp.MultiTenancy.TenantResolverCacheItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.AllInstances.TenantIdGet">
            <summary>Sets the shim of TenantResolverCacheItem.get_TenantId()</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.ConstructorNullableOfInt32">
            <summary>Sets the shim of TenantResolverCacheItem.TenantResolverCacheItem(Nullable`1&lt;Int32&gt; tenantId)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.ShimTenantResolverCacheItem.TenantIdGet">
            <summary>Sets the shim of TenantResolverCacheItem.get_TenantId()</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubITenantResolveContributor">
            <summary>Stub type of Abp.MultiTenancy.ITenantResolveContributor</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantResolveContributor.#ctor">
            <summary>Initializes a new instance of type StubITenantResolveContributor</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantResolveContributor.Abp#MultiTenancy#ITenantResolveContributor#ResolveTenantId">
            <summary>Sets the stub of ITenantResolveContributor.ResolveTenantId()</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubITenantResolveContributor.ResolveTenantId">
            <summary>Sets the stub of ITenantResolveContributor.ResolveTenantId()</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubITenantResolver">
            <summary>Stub type of Abp.MultiTenancy.ITenantResolver</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantResolver.#ctor">
            <summary>Initializes a new instance of type StubITenantResolver</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantResolver.Abp#MultiTenancy#ITenantResolver#ResolveTenantId">
            <summary>Sets the stub of ITenantResolver.ResolveTenantId()</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubITenantResolver.ResolveTenantId">
            <summary>Sets the stub of ITenantResolver.ResolveTenantId()</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubITenantResolverCache">
            <summary>Stub type of Abp.MultiTenancy.ITenantResolverCache</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantResolverCache.#ctor">
            <summary>Initializes a new instance of type StubITenantResolverCache</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantResolverCache.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubITenantResolverCache.Value as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubITenantResolverCache.Abp#MultiTenancy#ITenantResolverCache#Value">
            <summary>Sets the stub of ITenantResolverCache.get_Value()</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubITenantResolverCache.ValueGet">
            <summary>Sets the stub of ITenantResolverCache.get_Value()</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubITenantResolverCache.ValueSetTenantResolverCacheItem">
            <summary>Sets the stub of ITenantResolverCache.set_Value(TenantResolverCacheItem value)</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubITenantStore">
            <summary>Stub type of Abp.MultiTenancy.ITenantStore</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantStore.#ctor">
            <summary>Initializes a new instance of type StubITenantStore</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantStore.Abp#MultiTenancy#ITenantStore#Find(System.String)">
            <summary>Sets the stub of ITenantStore.Find(String tenancyName)</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubITenantStore.Abp#MultiTenancy#ITenantStore#Find(System.Int32)">
            <summary>Sets the stub of ITenantStore.Find(Int32 tenantId)</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubITenantStore.FindInt32">
            <summary>Sets the stub of ITenantStore.Find(Int32 tenantId)</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubITenantStore.FindString">
            <summary>Sets the stub of ITenantStore.Find(String tenancyName)</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute">
            <summary>Stub type of Abp.MultiTenancy.MultiTenancySideAttribute</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.#ctor(Abp.MultiTenancy.MultiTenancySides)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubMultiTenancySideAttribute</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.MultiTenancy.Fakes.StubMultiTenancySideAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubNullTenantResolverCache">
            <summary>Stub type of Abp.MultiTenancy.NullTenantResolverCache</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubNullTenantResolverCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubNullTenantResolverCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubNullTenantResolverCache.InitializeStub">
            <summary>Initializes a new instance of type StubNullTenantResolverCache</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubNullTenantResolverCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubNullTenantResolverCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubNullTenantStore">
            <summary>Stub type of Abp.MultiTenancy.NullTenantStore</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubNullTenantStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubNullTenantStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubNullTenantStore.InitializeStub">
            <summary>Initializes a new instance of type StubNullTenantStore</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubNullTenantStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubNullTenantStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubTenantInfo">
            <summary>Stub type of Abp.MultiTenancy.TenantInfo</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubTenantInfo.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubTenantInfo.InitializeStub">
            <summary>Initializes a new instance of type StubTenantInfo</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubTenantResolver">
            <summary>Stub type of Abp.MultiTenancy.TenantResolver</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubTenantResolver.#ctor(Abp.Configuration.Startup.IMultiTenancyConfig,Abp.Dependency.IIocResolver,Abp.MultiTenancy.ITenantStore,Abp.MultiTenancy.ITenantResolverCache,Abp.Runtime.IAmbientScopeProvider{System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubTenantResolver.InitializeStub">
            <summary>Initializes a new instance of type StubTenantResolver</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.MultiTenancy.Fakes.StubTenantResolverCacheItem">
            <summary>Stub type of Abp.MultiTenancy.TenantResolverCacheItem</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubTenantResolverCacheItem.#ctor(System.Nullable{System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantResolverCacheItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.MultiTenancy.Fakes.StubTenantResolverCacheItem.InitializeStub">
            <summary>Initializes a new instance of type StubTenantResolverCacheItem</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantResolverCacheItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.MultiTenancy.Fakes.StubTenantResolverCacheItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimEmailSenderBase">
            <summary>Shim type of Abp.Net.Mail.EmailSenderBase</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderBase.#ctor(Abp.Net.Mail.EmailSenderBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.ConfigurationGet">
            <summary>Sets the shim of EmailSenderBase.get_Configuration()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.NormalizeMailMailMessage">
            <summary>Sets the shim of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.SendAsyncMailMessageBoolean">
            <summary>Sets the shim of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.SendAsyncStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.SendAsyncStringStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.SendMailMessageBoolean">
            <summary>Sets the shim of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.SendStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.AllInstances.SendStringStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderBase.Bind(Abp.Net.Mail.IEmailSender)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.ConfigurationGet">
            <summary>Sets the shim of EmailSenderBase.get_Configuration()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.ConstructorIEmailSenderConfiguration">
            <summary>Sets the shim of EmailSenderBase.EmailSenderBase(IEmailSenderConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.NormalizeMailMailMessage">
            <summary>Sets the shim of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.SendAsyncMailMessageBoolean">
            <summary>Sets the shim of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.SendAsyncStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.SendAsyncStringStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.SendMailMessageBoolean">
            <summary>Sets the shim of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.SendStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderBase.SendStringStringStringStringBoolean">
            <summary>Sets the shim of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration">
            <summary>Shim type of Abp.Net.Mail.EmailSenderConfiguration</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.#ctor(Abp.Net.Mail.EmailSenderConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.AllInstances.DefaultFromAddressGet">
            <summary>Sets the shim of EmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.AllInstances.DefaultFromDisplayNameGet">
            <summary>Sets the shim of EmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.AllInstances.GetNotEmptySettingValueString">
            <summary>Sets the shim of EmailSenderConfiguration.GetNotEmptySettingValue(String name)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.Bind(Abp.Net.Mail.IEmailSenderConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.ConstructorISettingManager">
            <summary>Sets the shim of EmailSenderConfiguration.EmailSenderConfiguration(ISettingManager settingManager)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.DefaultFromAddressGet">
            <summary>Sets the shim of EmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.DefaultFromDisplayNameGet">
            <summary>Sets the shim of EmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSenderConfiguration.GetNotEmptySettingValueString">
            <summary>Sets the shim of EmailSenderConfiguration.GetNotEmptySettingValue(String name)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimEmailSettingNames">
            <summary>Shim type of Abp.Net.Mail.EmailSettingNames</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSettingNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSettingNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSettingNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSettingNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimEmailSettingNames.ShimSmtp">
            <summary>Shim type of Abp.Net.Mail.EmailSettingNames+Smtp</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSettingNames.ShimSmtp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSettingNames.ShimSmtp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimEmailSettingNames.ShimSmtp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimEmailSettingNames.ShimSmtp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimNullEmailSender">
            <summary>Shim type of Abp.Net.Mail.NullEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimNullEmailSender.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimNullEmailSender.#ctor(Abp.Net.Mail.NullEmailSender)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.ShimNullEmailSender.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.AllInstances.LogEmailMailMessage">
            <summary>Sets the shim of NullEmailSender.LogEmail(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.AllInstances.LoggerGet">
            <summary>Sets the shim of NullEmailSender.get_Logger()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of NullEmailSender.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.AllInstances.SendEmailAsyncMailMessage">
            <summary>Sets the shim of NullEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.AllInstances.SendEmailMailMessage">
            <summary>Sets the shim of NullEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimNullEmailSender.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimNullEmailSender.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.ShimNullEmailSender.Bind(Abp.Net.Mail.IEmailSender)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.ConstructorIEmailSenderConfiguration">
            <summary>Sets the shim of NullEmailSender.NullEmailSender(IEmailSenderConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.LogEmailMailMessage">
            <summary>Sets the shim of NullEmailSender.LogEmail(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.LoggerGet">
            <summary>Sets the shim of NullEmailSender.get_Logger()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.LoggerSetILogger">
            <summary>Sets the shim of NullEmailSender.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.SendEmailAsyncMailMessage">
            <summary>Sets the shim of NullEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.ShimNullEmailSender.SendEmailMailMessage">
            <summary>Sets the shim of NullEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.StubEmailSenderBase">
            <summary>Stub type of Abp.Net.Mail.EmailSenderBase</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.#ctor(Abp.Net.Mail.IEmailSenderConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.InitializeStub">
            <summary>Initializes a new instance of type StubEmailSenderBase</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.NormalizeMail(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.NormalizeMailMailMessage">
            <summary>Sets the stub of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.Send(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.Send(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.Send(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendAsync(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendAsyncMailMessageBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendAsyncStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendAsyncStringStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendEmail(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of EmailSenderBase.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendEmailAsync(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of EmailSenderBase.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendEmailAsyncMailMessage">
            <summary>Sets the stub of EmailSenderBase.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendEmailMailMessage">
            <summary>Sets the stub of EmailSenderBase.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendMailMessageBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderBase.SendStringStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration">
            <summary>Stub type of Abp.Net.Mail.EmailSenderConfiguration</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.#ctor(Abp.Configuration.ISettingManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.DefaultFromAddress">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.DefaultFromAddressGet">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.DefaultFromDisplayName">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.DefaultFromDisplayNameGet">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubEmailSenderConfiguration</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubEmailSenderConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.StubIEmailSender">
            <summary>Stub type of Abp.Net.Mail.IEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSender.#ctor">
            <summary>Initializes a new instance of type StubIEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSender.Abp#Net#Mail#IEmailSender#Send(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of IEmailSender.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSender.Abp#Net#Mail#IEmailSender#Send(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSender.Abp#Net#Mail#IEmailSender#Send(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSender.Abp#Net#Mail#IEmailSender#SendAsync(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of IEmailSender.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSender.Abp#Net#Mail#IEmailSender#SendAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSender.Abp#Net#Mail#IEmailSender#SendAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSender.SendAsyncMailMessageBoolean">
            <summary>Sets the stub of IEmailSender.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSender.SendAsyncStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSender.SendAsyncStringStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSender.SendMailMessageBoolean">
            <summary>Sets the stub of IEmailSender.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSender.SendStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSender.SendStringStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.StubIEmailSenderConfiguration">
            <summary>Stub type of Abp.Net.Mail.IEmailSenderConfiguration</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubIEmailSenderConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIEmailSenderConfiguration</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubIEmailSenderConfiguration.Abp#Net#Mail#IEmailSenderConfiguration#DefaultFromAddress">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSenderConfiguration.DefaultFromAddressGet">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubIEmailSenderConfiguration.Abp#Net#Mail#IEmailSenderConfiguration#DefaultFromDisplayName">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubIEmailSenderConfiguration.DefaultFromDisplayNameGet">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="T:Abp.Net.Mail.Fakes.StubNullEmailSender">
            <summary>Stub type of Abp.Net.Mail.NullEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.#ctor(Abp.Net.Mail.IEmailSenderConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubNullEmailSender.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.InitializeStub">
            <summary>Initializes a new instance of type StubNullEmailSender</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubNullEmailSender.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Fakes.StubNullEmailSender.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.NormalizeMail(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.NormalizeMailMailMessage">
            <summary>Sets the stub of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.Send(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.Send(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.Send(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.SendAsync(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.SendAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.SendAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendAsyncMailMessageBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendAsyncStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendAsyncStringStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.SendEmail(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of NullEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Fakes.StubNullEmailSender.SendEmailAsync(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of NullEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendEmailAsyncMailMessage">
            <summary>Sets the stub of NullEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendEmailMailMessage">
            <summary>Sets the stub of NullEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendMailMessageBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Fakes.StubNullEmailSender.SendStringStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender">
            <summary>Shim type of Abp.Net.Mail.Smtp.SmtpEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.#ctor(Abp.Net.Mail.Smtp.SmtpEmailSender)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.AllInstances.BuildClient">
            <summary>Sets the shim of SmtpEmailSender.BuildClient()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.AllInstances.SendEmailAsyncMailMessage">
            <summary>Sets the shim of SmtpEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.AllInstances.SendEmailMailMessage">
            <summary>Sets the shim of SmtpEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.Bind(Abp.Net.Mail.IEmailSender)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.Bind(Abp.Net.Mail.Smtp.ISmtpEmailSender)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.BuildClient">
            <summary>Sets the shim of SmtpEmailSender.BuildClient()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.ConstructorISmtpEmailSenderConfiguration">
            <summary>Sets the shim of SmtpEmailSender.SmtpEmailSender(ISmtpEmailSenderConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.SendEmailAsyncMailMessage">
            <summary>Sets the shim of SmtpEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSender.SendEmailMailMessage">
            <summary>Sets the shim of SmtpEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration">
            <summary>Shim type of Abp.Net.Mail.Smtp.SmtpEmailSenderConfiguration</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.#ctor(Abp.Net.Mail.Smtp.SmtpEmailSenderConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances.DomainGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Domain()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances.EnableSslGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_EnableSsl()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances.HostGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Host()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances.PasswordGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Password()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances.PortGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Port()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances.UseDefaultCredentialsGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_UseDefaultCredentials()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.AllInstances.UserNameGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_UserName()</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.Bind(Abp.Net.Mail.IEmailSenderConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.Bind(Abp.Net.Mail.Smtp.ISmtpEmailSenderConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.ConstructorISettingManager">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.SmtpEmailSenderConfiguration(ISettingManager settingManager)</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.DomainGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Domain()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.EnableSslGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_EnableSsl()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.HostGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Host()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.PasswordGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Password()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.PortGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_Port()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.UseDefaultCredentialsGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_UseDefaultCredentials()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.ShimSmtpEmailSenderConfiguration.UserNameGet">
            <summary>Sets the shim of SmtpEmailSenderConfiguration.get_UserName()</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender">
            <summary>Stub type of Abp.Net.Mail.Smtp.ISmtpEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.#ctor">
            <summary>Initializes a new instance of type StubISmtpEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.Abp#Net#Mail#IEmailSender#Send(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of IEmailSender.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.Abp#Net#Mail#IEmailSender#Send(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.Abp#Net#Mail#IEmailSender#Send(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.Abp#Net#Mail#IEmailSender#SendAsync(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of IEmailSender.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.Abp#Net#Mail#IEmailSender#SendAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.Abp#Net#Mail#IEmailSender#SendAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IEmailSender.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.Abp#Net#Mail#Smtp#ISmtpEmailSender#BuildClient">
            <summary>Sets the stub of ISmtpEmailSender.BuildClient()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.BuildClient">
            <summary>Sets the stub of ISmtpEmailSender.BuildClient()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.SendAsyncMailMessageBoolean">
            <summary>Sets the stub of IEmailSender.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.SendAsyncStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.SendAsyncStringStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.SendMailMessageBoolean">
            <summary>Sets the stub of IEmailSender.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.SendStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSender.SendStringStringStringStringBoolean">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration">
            <summary>Stub type of Abp.Net.Mail.Smtp.ISmtpEmailSenderConfiguration</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.#ctor">
            <summary>Initializes a new instance of type StubISmtpEmailSenderConfiguration</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#IEmailSenderConfiguration#DefaultFromAddress">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.DefaultFromAddressGet">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#IEmailSenderConfiguration#DefaultFromDisplayName">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.DefaultFromDisplayNameGet">
            <summary>Sets the stub of IEmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#Smtp#ISmtpEmailSenderConfiguration#Domain">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Domain()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.DomainGet">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Domain()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#Smtp#ISmtpEmailSenderConfiguration#EnableSsl">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_EnableSsl()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.EnableSslGet">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_EnableSsl()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#Smtp#ISmtpEmailSenderConfiguration#Host">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Host()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.HostGet">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Host()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#Smtp#ISmtpEmailSenderConfiguration#Password">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Password()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.PasswordGet">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Password()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#Smtp#ISmtpEmailSenderConfiguration#Port">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Port()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.PortGet">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_Port()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#Smtp#ISmtpEmailSenderConfiguration#UseDefaultCredentials">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_UseDefaultCredentials()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.UseDefaultCredentialsGet">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_UseDefaultCredentials()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.Abp#Net#Mail#Smtp#ISmtpEmailSenderConfiguration#UserName">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_UserName()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubISmtpEmailSenderConfiguration.UserNameGet">
            <summary>Sets the stub of ISmtpEmailSenderConfiguration.get_UserName()</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender">
            <summary>Stub type of Abp.Net.Mail.Smtp.SmtpEmailSender</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.#ctor(Abp.Net.Mail.Smtp.ISmtpEmailSenderConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.InitializeStub">
            <summary>Initializes a new instance of type StubSmtpEmailSender</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.NormalizeMail(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.NormalizeMailMailMessage">
            <summary>Sets the stub of EmailSenderBase.NormalizeMail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.Send(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.Send(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.Send(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendAsync(System.Net.Mail.MailMessage,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendAsyncMailMessageBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendAsyncStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendAsyncStringStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.SendAsync(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendEmail(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of SmtpEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendEmailAsync(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of SmtpEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendEmailAsyncMailMessage">
            <summary>Sets the stub of SmtpEmailSender.SendEmailAsync(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendEmailMailMessage">
            <summary>Sets the stub of SmtpEmailSender.SendEmail(MailMessage mail)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendMailMessageBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(MailMessage mail, Boolean normalize)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSender.SendStringStringStringStringBoolean">
            <summary>Sets the stub of EmailSenderBase.Send(String from, String to, String subject, String body, Boolean isBodyHtml)</summary>
        </member>
        <member name="T:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration">
            <summary>Stub type of Abp.Net.Mail.Smtp.SmtpEmailSenderConfiguration</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.#ctor(Abp.Configuration.ISettingManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.DefaultFromAddress">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.DefaultFromAddressGet">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromAddress()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.DefaultFromDisplayName">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.DefaultFromDisplayNameGet">
            <summary>Sets the stub of EmailSenderConfiguration.get_DefaultFromDisplayName()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.Domain">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Domain()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.DomainGet">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Domain()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.EnableSsl">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_EnableSsl()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.EnableSslGet">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_EnableSsl()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.Host">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Host()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.HostGet">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Host()</summary>
        </member>
        <member name="M:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubSmtpEmailSenderConfiguration</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.Password">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Password()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.PasswordGet">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Password()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.Port">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Port()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.PortGet">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_Port()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.UseDefaultCredentials">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_UseDefaultCredentials()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.UseDefaultCredentialsGet">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_UseDefaultCredentials()</summary>
        </member>
        <member name="P:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.UserName">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_UserName()</summary>
        </member>
        <member name="F:Abp.Net.Mail.Smtp.Fakes.StubSmtpEmailSenderConfiguration.UserNameGet">
            <summary>Sets the stub of SmtpEmailSenderConfiguration.get_UserName()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData">
            <summary>Shim type of Abp.Notifications.LocalizableMessageNotificationData</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.#ctor(Abp.Notifications.LocalizableMessageNotificationData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.AllInstances.MessageGet">
            <summary>Sets the shim of LocalizableMessageNotificationData.get_Message()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.AllInstances.MessageSetLocalizableString">
            <summary>Sets the shim of LocalizableMessageNotificationData.set_Message(LocalizableString value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.Constructor">
            <summary>Sets the shim of LocalizableMessageNotificationData.LocalizableMessageNotificationData()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.ConstructorLocalizableString">
            <summary>Sets the shim of LocalizableMessageNotificationData.LocalizableMessageNotificationData(LocalizableString message)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.MessageGet">
            <summary>Sets the shim of LocalizableMessageNotificationData.get_Message()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimLocalizableMessageNotificationData.MessageSetLocalizableString">
            <summary>Sets the shim of LocalizableMessageNotificationData.set_Message(LocalizableString value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimMessageNotificationData">
            <summary>Shim type of Abp.Notifications.MessageNotificationData</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimMessageNotificationData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimMessageNotificationData.#ctor(Abp.Notifications.MessageNotificationData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimMessageNotificationData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimMessageNotificationData.AllInstances.MessageGet">
            <summary>Sets the shim of MessageNotificationData.get_Message()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimMessageNotificationData.AllInstances.MessageSetString">
            <summary>Sets the shim of MessageNotificationData.set_Message(String value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimMessageNotificationData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimMessageNotificationData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimMessageNotificationData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimMessageNotificationData.Constructor">
            <summary>Sets the shim of MessageNotificationData.MessageNotificationData()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimMessageNotificationData.ConstructorString">
            <summary>Sets the shim of MessageNotificationData.MessageNotificationData(String message)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimMessageNotificationData.MessageGet">
            <summary>Sets the shim of MessageNotificationData.get_Message()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimMessageNotificationData.MessageSetString">
            <summary>Sets the shim of MessageNotificationData.set_Message(String value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationData">
            <summary>Shim type of Abp.Notifications.NotificationData</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationData.#ctor(Abp.Notifications.NotificationData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.AllInstances.ItemGetString">
            <summary>Sets the shim of NotificationData.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of NotificationData.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.AllInstances.PropertiesGet">
            <summary>Sets the shim of NotificationData.get_Properties()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.AllInstances.PropertiesSetDictionaryOfStringObject">
            <summary>Sets the shim of NotificationData.set_Properties(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.AllInstances.ToString01">
            <summary>Sets the shim of NotificationData.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.AllInstances.TypeGet">
            <summary>Sets the shim of NotificationData.get_Type()</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.Constructor">
            <summary>Sets the shim of NotificationData.NotificationData()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.ItemGetString">
            <summary>Sets the shim of NotificationData.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.ItemSetStringObject">
            <summary>Sets the shim of NotificationData.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.PropertiesGet">
            <summary>Sets the shim of NotificationData.get_Properties()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.PropertiesSetDictionaryOfStringObject">
            <summary>Sets the shim of NotificationData.set_Properties(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.ToString">
            <summary>Sets the shim of NotificationData.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationData.TypeGet">
            <summary>Sets the shim of NotificationData.get_Type()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDefinition">
            <summary>Shim type of Abp.Notifications.NotificationDefinition</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDefinition.#ctor(Abp.Notifications.NotificationDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.AttributesGet">
            <summary>Sets the shim of NotificationDefinition.get_Attributes()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of NotificationDefinition.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.DescriptionGet">
            <summary>Sets the shim of NotificationDefinition.get_Description()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.DescriptionSetILocalizableString">
            <summary>Sets the shim of NotificationDefinition.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.DisplayNameGet">
            <summary>Sets the shim of NotificationDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.DisplayNameSetILocalizableString">
            <summary>Sets the shim of NotificationDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.EntityTypeGet">
            <summary>Sets the shim of NotificationDefinition.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.EntityTypeSetType">
            <summary>Sets the shim of NotificationDefinition.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.FeatureDependencyGet">
            <summary>Sets the shim of NotificationDefinition.get_FeatureDependency()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.FeatureDependencySetIFeatureDependency">
            <summary>Sets the shim of NotificationDefinition.set_FeatureDependency(IFeatureDependency value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.ItemGetString">
            <summary>Sets the shim of NotificationDefinition.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of NotificationDefinition.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.NameGet">
            <summary>Sets the shim of NotificationDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.NameSetString">
            <summary>Sets the shim of NotificationDefinition.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.PermissionDependencyGet">
            <summary>Sets the shim of NotificationDefinition.get_PermissionDependency()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AllInstances.PermissionDependencySetIPermissionDependency">
            <summary>Sets the shim of NotificationDefinition.set_PermissionDependency(IPermissionDependency value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AttributesGet">
            <summary>Sets the shim of NotificationDefinition.get_Attributes()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of NotificationDefinition.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.ConstructorStringTypeILocalizableStringILocalizableStringIPermissionDependencyIFeatureDependency">
            <summary>Sets the shim of NotificationDefinition.NotificationDefinition(String name, Type entityType, ILocalizableString displayName, ILocalizableString description, IPermissionDependency permissionDependency, IFeatureDependency featureDependency)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.DescriptionGet">
            <summary>Sets the shim of NotificationDefinition.get_Description()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.DescriptionSetILocalizableString">
            <summary>Sets the shim of NotificationDefinition.set_Description(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.DisplayNameGet">
            <summary>Sets the shim of NotificationDefinition.get_DisplayName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.DisplayNameSetILocalizableString">
            <summary>Sets the shim of NotificationDefinition.set_DisplayName(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.EntityTypeGet">
            <summary>Sets the shim of NotificationDefinition.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.EntityTypeSetType">
            <summary>Sets the shim of NotificationDefinition.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.FeatureDependencyGet">
            <summary>Sets the shim of NotificationDefinition.get_FeatureDependency()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.FeatureDependencySetIFeatureDependency">
            <summary>Sets the shim of NotificationDefinition.set_FeatureDependency(IFeatureDependency value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.ItemGetString">
            <summary>Sets the shim of NotificationDefinition.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.ItemSetStringObject">
            <summary>Sets the shim of NotificationDefinition.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.NameGet">
            <summary>Sets the shim of NotificationDefinition.get_Name()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.NameSetString">
            <summary>Sets the shim of NotificationDefinition.set_Name(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.PermissionDependencyGet">
            <summary>Sets the shim of NotificationDefinition.get_PermissionDependency()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinition.PermissionDependencySetIPermissionDependency">
            <summary>Sets the shim of NotificationDefinition.set_PermissionDependency(IPermissionDependency value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDefinitionManagerExtensions">
            <summary>Shim type of Abp.Notifications.NotificationDefinitionManagerExtensions</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDefinitionManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDefinitionManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDefinitionManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinitionManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDefinitionManagerExtensions.GetAllAvailableINotificationDefinitionManagerUserIdentifier">
            <summary>Sets the shim of NotificationDefinitionManagerExtensions.GetAllAvailable(INotificationDefinitionManager notificationDefinitionManager, UserIdentifier user)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDistributer">
            <summary>Shim type of Abp.Notifications.NotificationDistributer</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributer.#ctor(Abp.Notifications.NotificationDistributer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDistributer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.AllInstances.DistributeAsyncGuid">
            <summary>Sets the shim of NotificationDistributer.DistributeAsync(Guid notificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.AllInstances.GetUsersNotificationInfo">
            <summary>Sets the shim of NotificationDistributer.GetUsers(NotificationInfo notificationInfo)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.AllInstances.RealTimeNotifierGet">
            <summary>Sets the shim of NotificationDistributer.get_RealTimeNotifier()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.AllInstances.RealTimeNotifierSetIRealTimeNotifier">
            <summary>Sets the shim of NotificationDistributer.set_RealTimeNotifier(IRealTimeNotifier value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.AllInstances.SaveUserNotificationsUserIdentifierArrayNotificationInfo">
            <summary>Sets the shim of NotificationDistributer.SaveUserNotifications(UserIdentifier[] users, NotificationInfo notificationInfo)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.AllInstances._GetUsersb__10_1UserIdentifier">
            <summary>Sets the shim of NotificationDistributer.&lt;GetUsers&gt;b__10_1(UserIdentifier uid)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributer.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributer.Bind(Abp.Domain.Services.IDomainService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributer.Bind(Abp.Notifications.INotificationDistributer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.ConstructorINotificationDefinitionManagerINotificationStoreIUnitOfWorkManagerIGuidGenerator">
            <summary>Sets the shim of NotificationDistributer.NotificationDistributer(INotificationDefinitionManager notificationDefinitionManager, INotificationStore notificationStore, IUnitOfWorkManager unitOfWorkManager, IGuidGenerator guidGenerator)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.DistributeAsyncGuid">
            <summary>Sets the shim of NotificationDistributer.DistributeAsync(Guid notificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.GetTenantIdsNotificationInfo">
            <summary>Sets the shim of NotificationDistributer.GetTenantIds(NotificationInfo notificationInfo)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.GetUsersNotificationInfo">
            <summary>Sets the shim of NotificationDistributer.GetUsers(NotificationInfo notificationInfo)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.RealTimeNotifierGet">
            <summary>Sets the shim of NotificationDistributer.get_RealTimeNotifier()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.RealTimeNotifierSetIRealTimeNotifier">
            <summary>Sets the shim of NotificationDistributer.set_RealTimeNotifier(IRealTimeNotifier value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer.SaveUserNotificationsUserIdentifierArrayNotificationInfo">
            <summary>Sets the shim of NotificationDistributer.SaveUserNotifications(UserIdentifier[] users, NotificationInfo notificationInfo)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributer._GetUsersb__10_1UserIdentifier">
            <summary>Sets the shim of NotificationDistributer.&lt;GetUsers&gt;b__10_1(UserIdentifier uid)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDistributionJob">
            <summary>Shim type of Abp.Notifications.NotificationDistributionJob</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJob.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJob.#ctor(Abp.Notifications.NotificationDistributionJob)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDistributionJob.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJob.AllInstances.ExecuteNotificationDistributionJobArgs">
            <summary>Sets the shim of NotificationDistributionJob.Execute(NotificationDistributionJobArgs args)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJob.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJob.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJob.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJob.Bind(Abp.BackgroundJobs.IBackgroundJob{Abp.Notifications.NotificationDistributionJobArgs})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJob.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJob.ConstructorINotificationDistributer">
            <summary>Sets the shim of NotificationDistributionJob.NotificationDistributionJob(INotificationDistributer notificationDistributer)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJob.ExecuteNotificationDistributionJobArgs">
            <summary>Sets the shim of NotificationDistributionJob.Execute(NotificationDistributionJobArgs args)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs">
            <summary>Shim type of Abp.Notifications.NotificationDistributionJobArgs</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.#ctor(Abp.Notifications.NotificationDistributionJobArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.AllInstances.NotificationIdGet">
            <summary>Sets the shim of NotificationDistributionJobArgs.get_NotificationId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.AllInstances.NotificationIdSetGuid">
            <summary>Sets the shim of NotificationDistributionJobArgs.set_NotificationId(Guid value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.ConstructorGuid">
            <summary>Sets the shim of NotificationDistributionJobArgs.NotificationDistributionJobArgs(Guid notificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.NotificationIdGet">
            <summary>Sets the shim of NotificationDistributionJobArgs.get_NotificationId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationDistributionJobArgs.NotificationIdSetGuid">
            <summary>Sets the shim of NotificationDistributionJobArgs.set_NotificationId(Guid value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationExtensions">
            <summary>Shim type of Abp.Notifications.NotificationExtensions</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.DeleteAllUserNotificationsIUserNotificationManagerUserIdentifier">
            <summary>Sets the shim of NotificationExtensions.DeleteAllUserNotifications(IUserNotificationManager userNotificationManager, UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.DeleteUserNotificationIUserNotificationManagerNullableOfInt32Guid">
            <summary>Sets the shim of NotificationExtensions.DeleteUserNotification(IUserNotificationManager userNotificationManager, Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.GetSubscribedNotificationsINotificationSubscriptionManagerUserIdentifier">
            <summary>Sets the shim of NotificationExtensions.GetSubscribedNotifications(INotificationSubscriptionManager notificationSubscriptionManager, UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.GetSubscriptionsINotificationSubscriptionManagerNullableOfInt32StringEntityIdentifier">
            <summary>Sets the shim of NotificationExtensions.GetSubscriptions(INotificationSubscriptionManager notificationSubscriptionManager, Nullable`1&lt;Int32&gt; tenantId, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.GetSubscriptionsINotificationSubscriptionManagerStringEntityIdentifier">
            <summary>Sets the shim of NotificationExtensions.GetSubscriptions(INotificationSubscriptionManager notificationSubscriptionManager, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.GetUserNotificationCountIUserNotificationManagerUserIdentifierNullableOfUserNotificationState">
            <summary>Sets the shim of NotificationExtensions.GetUserNotificationCount(IUserNotificationManager userNotificationManager, UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.GetUserNotificationIUserNotificationManagerNullableOfInt32Guid">
            <summary>Sets the shim of NotificationExtensions.GetUserNotification(IUserNotificationManager userNotificationManager, Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.GetUserNotificationsIUserNotificationManagerUserIdentifierNullableOfUserNotificationStateInt32Int32">
            <summary>Sets the shim of NotificationExtensions.GetUserNotifications(IUserNotificationManager userNotificationManager, UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.IsSubscribedINotificationSubscriptionManagerUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationExtensions.IsSubscribed(INotificationSubscriptionManager notificationSubscriptionManager, UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.PublishINotificationPublisherStringNotificationDataEntityIdentifierNotificationSeverityUserIdentifierArray">
            <summary>Sets the shim of NotificationExtensions.Publish(INotificationPublisher notificationPublisher, String notificationName, NotificationData data, EntityIdentifier entityIdentifier, NotificationSeverity severity, UserIdentifier[] userIds)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.SubscribeINotificationSubscriptionManagerUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationExtensions.Subscribe(INotificationSubscriptionManager notificationSubscriptionManager, UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.SubscribeToAllAvailableNotificationsINotificationSubscriptionManagerUserIdentifier">
            <summary>Sets the shim of NotificationExtensions.SubscribeToAllAvailableNotifications(INotificationSubscriptionManager notificationSubscriptionManager, UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.UnsubscribeINotificationSubscriptionManagerUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationExtensions.Unsubscribe(INotificationSubscriptionManager notificationSubscriptionManager, UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.UpdateAllUserNotificationStatesIUserNotificationManagerUserIdentifierUserNotificationState">
            <summary>Sets the shim of NotificationExtensions.UpdateAllUserNotificationStates(IUserNotificationManager userNotificationManager, UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationExtensions.UpdateUserNotificationStateIUserNotificationManagerNullableOfInt32GuidUserNotificationState">
            <summary>Sets the shim of NotificationExtensions.UpdateUserNotificationState(IUserNotificationManager userNotificationManager, Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationInfo">
            <summary>Shim type of Abp.Notifications.NotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationInfo.#ctor(Abp.Notifications.NotificationInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.DataGet">
            <summary>Sets the shim of NotificationInfo.get_Data()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.DataSetString">
            <summary>Sets the shim of NotificationInfo.set_Data(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.DataTypeNameGet">
            <summary>Sets the shim of NotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.DataTypeNameSetString">
            <summary>Sets the shim of NotificationInfo.set_DataTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.EntityIdGet">
            <summary>Sets the shim of NotificationInfo.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.EntityIdSetString">
            <summary>Sets the shim of NotificationInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the shim of NotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the shim of NotificationInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.EntityTypeNameGet">
            <summary>Sets the shim of NotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.EntityTypeNameSetString">
            <summary>Sets the shim of NotificationInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.ExcludedUserIdsGet">
            <summary>Sets the shim of NotificationInfo.get_ExcludedUserIds()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.ExcludedUserIdsSetString">
            <summary>Sets the shim of NotificationInfo.set_ExcludedUserIds(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.NotificationNameGet">
            <summary>Sets the shim of NotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.NotificationNameSetString">
            <summary>Sets the shim of NotificationInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.SeverityGet">
            <summary>Sets the shim of NotificationInfo.get_Severity()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.SeveritySetNotificationSeverity">
            <summary>Sets the shim of NotificationInfo.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.TenantIdsGet">
            <summary>Sets the shim of NotificationInfo.get_TenantIds()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.TenantIdsSetString">
            <summary>Sets the shim of NotificationInfo.set_TenantIds(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.UserIdsGet">
            <summary>Sets the shim of NotificationInfo.get_UserIds()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.AllInstances.UserIdsSetString">
            <summary>Sets the shim of NotificationInfo.set_UserIds(String value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationInfo.Bind(Abp.Domain.Entities.IEntity{System.Guid})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationInfo.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationInfo.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.Constructor">
            <summary>Sets the shim of NotificationInfo.NotificationInfo()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.ConstructorGuid">
            <summary>Sets the shim of NotificationInfo.NotificationInfo(Guid id)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.DataGet">
            <summary>Sets the shim of NotificationInfo.get_Data()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.DataSetString">
            <summary>Sets the shim of NotificationInfo.set_Data(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.DataTypeNameGet">
            <summary>Sets the shim of NotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.DataTypeNameSetString">
            <summary>Sets the shim of NotificationInfo.set_DataTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.EntityIdGet">
            <summary>Sets the shim of NotificationInfo.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.EntityIdSetString">
            <summary>Sets the shim of NotificationInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the shim of NotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the shim of NotificationInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.EntityTypeNameGet">
            <summary>Sets the shim of NotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.EntityTypeNameSetString">
            <summary>Sets the shim of NotificationInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.ExcludedUserIdsGet">
            <summary>Sets the shim of NotificationInfo.get_ExcludedUserIds()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.ExcludedUserIdsSetString">
            <summary>Sets the shim of NotificationInfo.set_ExcludedUserIds(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.NotificationNameGet">
            <summary>Sets the shim of NotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.NotificationNameSetString">
            <summary>Sets the shim of NotificationInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.SeverityGet">
            <summary>Sets the shim of NotificationInfo.get_Severity()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.SeveritySetNotificationSeverity">
            <summary>Sets the shim of NotificationInfo.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.TenantIdsGet">
            <summary>Sets the shim of NotificationInfo.get_TenantIds()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.TenantIdsSetString">
            <summary>Sets the shim of NotificationInfo.set_TenantIds(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.UserIdsGet">
            <summary>Sets the shim of NotificationInfo.get_UserIds()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationInfo.UserIdsSetString">
            <summary>Sets the shim of NotificationInfo.set_UserIds(String value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationProvider">
            <summary>Shim type of Abp.Notifications.NotificationProvider</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationProvider.#ctor(Abp.Notifications.NotificationProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationProvider.Constructor">
            <summary>Sets the shim of NotificationProvider.NotificationProvider()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationPublisher">
            <summary>Shim type of Abp.Notifications.NotificationPublisher</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationPublisher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationPublisher.#ctor(Abp.Notifications.NotificationPublisher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.AbpSessionGet">
            <summary>Sets the shim of NotificationPublisher.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.AbpSessionSetIAbpSession">
            <summary>Sets the shim of NotificationPublisher.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationPublisher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.AllInstances.AbpSessionGet">
            <summary>Sets the shim of NotificationPublisher.get_AbpSession()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.AllInstances.AbpSessionSetIAbpSession">
            <summary>Sets the shim of NotificationPublisher.set_AbpSession(IAbpSession value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.AllInstances.PublishAsyncStringNotificationDataEntityIdentifierNotificationSeverityUserIdentifierArrayUserIdentifierArrayNullableOfInt32Array">
            <summary>Sets the shim of NotificationPublisher.PublishAsync(String notificationName, NotificationData data, EntityIdentifier entityIdentifier, NotificationSeverity severity, UserIdentifier[] userIds, UserIdentifier[] excludedUserIds, Nullable`1&lt;Int32&gt;[] tenantIds)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.AllTenantsGet">
            <summary>Sets the shim of NotificationPublisher.get_AllTenants()</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationPublisher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationPublisher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationPublisher.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationPublisher.Bind(Abp.Notifications.INotificationPublisher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.ConstructorINotificationStoreIBackgroundJobManagerINotificationDistributerIGuidGenerator">
            <summary>Sets the shim of NotificationPublisher.NotificationPublisher(INotificationStore store, IBackgroundJobManager backgroundJobManager, INotificationDistributer notificationDistributer, IGuidGenerator guidGenerator)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationPublisher.PublishAsyncStringNotificationDataEntityIdentifierNotificationSeverityUserIdentifierArrayUserIdentifierArrayNullableOfInt32Array">
            <summary>Sets the shim of NotificationPublisher.PublishAsync(String notificationName, NotificationData data, EntityIdentifier entityIdentifier, NotificationSeverity severity, UserIdentifier[] userIds, UserIdentifier[] excludedUserIds, Nullable`1&lt;Int32&gt;[] tenantIds)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSettingNames">
            <summary>Shim type of Abp.Notifications.NotificationSettingNames</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSettingNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSettingProvider">
            <summary>Shim type of Abp.Notifications.NotificationSettingProvider</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingProvider.#ctor(Abp.Notifications.NotificationSettingProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSettingProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSettingProvider.AllInstances.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the shim of NotificationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSettingProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSettingProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSettingProvider.Constructor">
            <summary>Sets the shim of NotificationSettingProvider.NotificationSettingProvider()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSettingProvider.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the shim of NotificationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSettingProvider.LString">
            <summary>Sets the shim of NotificationSettingProvider.L(String name)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSubscription">
            <summary>Shim type of Abp.Notifications.NotificationSubscription</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscription.#ctor(Abp.Notifications.NotificationSubscription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.CreationTimeGet">
            <summary>Sets the shim of NotificationSubscription.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of NotificationSubscription.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.EntityIdGet">
            <summary>Sets the shim of NotificationSubscription.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.EntityIdSetObject">
            <summary>Sets the shim of NotificationSubscription.set_EntityId(Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.EntityTypeGet">
            <summary>Sets the shim of NotificationSubscription.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.EntityTypeNameGet">
            <summary>Sets the shim of NotificationSubscription.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.EntityTypeNameSetString">
            <summary>Sets the shim of NotificationSubscription.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.EntityTypeSetType">
            <summary>Sets the shim of NotificationSubscription.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.NotificationNameGet">
            <summary>Sets the shim of NotificationSubscription.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.NotificationNameSetString">
            <summary>Sets the shim of NotificationSubscription.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.TenantIdGet">
            <summary>Sets the shim of NotificationSubscription.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of NotificationSubscription.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.UserIdGet">
            <summary>Sets the shim of NotificationSubscription.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.AllInstances.UserIdSetInt64">
            <summary>Sets the shim of NotificationSubscription.set_UserId(Int64 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscription.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.Constructor">
            <summary>Sets the shim of NotificationSubscription.NotificationSubscription()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.CreationTimeGet">
            <summary>Sets the shim of NotificationSubscription.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.CreationTimeSetDateTime">
            <summary>Sets the shim of NotificationSubscription.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.EntityIdGet">
            <summary>Sets the shim of NotificationSubscription.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.EntityIdSetObject">
            <summary>Sets the shim of NotificationSubscription.set_EntityId(Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.EntityTypeGet">
            <summary>Sets the shim of NotificationSubscription.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.EntityTypeNameGet">
            <summary>Sets the shim of NotificationSubscription.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.EntityTypeNameSetString">
            <summary>Sets the shim of NotificationSubscription.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.EntityTypeSetType">
            <summary>Sets the shim of NotificationSubscription.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.NotificationNameGet">
            <summary>Sets the shim of NotificationSubscription.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.NotificationNameSetString">
            <summary>Sets the shim of NotificationSubscription.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.TenantIdGet">
            <summary>Sets the shim of NotificationSubscription.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of NotificationSubscription.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.UserIdGet">
            <summary>Sets the shim of NotificationSubscription.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscription.UserIdSetInt64">
            <summary>Sets the shim of NotificationSubscription.set_UserId(Int64 value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo">
            <summary>Shim type of Abp.Notifications.NotificationSubscriptionInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.#ctor(Abp.Notifications.NotificationSubscriptionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.EntityIdGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.EntityIdSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.EntityTypeNameGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.EntityTypeNameSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.NotificationNameGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.NotificationNameSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.TenantIdGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.UserIdGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.AllInstances.UserIdSetInt64">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_UserId(Int64 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.Bind(Abp.Domain.Entities.IMayHaveTenant)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.Bind(Abp.Domain.Entities.IEntity{System.Guid})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.Constructor">
            <summary>Sets the shim of NotificationSubscriptionInfo.NotificationSubscriptionInfo()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.ConstructorGuidNullableOfInt32Int64StringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionInfo.NotificationSubscriptionInfo(Guid id, Nullable`1&lt;Int32&gt; tenantId, Int64 userId, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.EntityIdGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.EntityIdSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.EntityTypeNameGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.EntityTypeNameSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.NotificationNameGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.NotificationNameSetString">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.TenantIdGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.UserIdGet">
            <summary>Sets the shim of NotificationSubscriptionInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfo.UserIdSetInt64">
            <summary>Sets the shim of NotificationSubscriptionInfo.set_UserId(Int64 value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfoExtensions">
            <summary>Shim type of Abp.Notifications.NotificationSubscriptionInfoExtensions</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfoExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfoExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfoExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfoExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionInfoExtensions.ToNotificationSubscriptionNotificationSubscriptionInfo">
            <summary>Sets the shim of NotificationSubscriptionInfoExtensions.ToNotificationSubscription(NotificationSubscriptionInfo subscriptionInfo)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager">
            <summary>Shim type of Abp.Notifications.NotificationSubscriptionManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.#ctor(Abp.Notifications.NotificationSubscriptionManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances.GetSubscribedNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.GetSubscribedNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances.GetSubscriptionsAsyncNullableOfInt32StringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt; tenantId, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances.GetSubscriptionsAsyncStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.GetSubscriptionsAsync(String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances.IsSubscribedAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.IsSubscribedAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances.SubscribeAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.SubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances.SubscribeToAllAvailableNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.SubscribeToAllAvailableNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.AllInstances.UnsubscribeAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.UnsubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.Bind(Abp.Notifications.INotificationSubscriptionManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.ConstructorINotificationStoreINotificationDefinitionManagerIGuidGenerator">
            <summary>Sets the shim of NotificationSubscriptionManager.NotificationSubscriptionManager(INotificationStore store, INotificationDefinitionManager notificationDefinitionManager, IGuidGenerator guidGenerator)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.GetSubscribedNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.GetSubscribedNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.GetSubscriptionsAsyncNullableOfInt32StringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt; tenantId, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.GetSubscriptionsAsyncStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.GetSubscriptionsAsync(String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.IsSubscribedAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.IsSubscribedAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.SubscribeAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.SubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.SubscribeToAllAvailableNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.SubscribeToAllAvailableNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNotificationSubscriptionManager.UnsubscribeAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the shim of NotificationSubscriptionManager.UnsubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNullNotificationStore">
            <summary>Shim type of Abp.Notifications.NullNotificationStore</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullNotificationStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullNotificationStore.#ctor(Abp.Notifications.NullNotificationStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.DeleteAllUserNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of NullNotificationStore.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.DeleteNotificationAsyncNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.DeleteNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.DeleteSubscriptionAsyncUserIdentifierStringStringString">
            <summary>Sets the shim of NullNotificationStore.DeleteSubscriptionAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.DeleteUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the shim of NullNotificationStore.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; notificationId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.GetNotificationOrNullAsyncGuid">
            <summary>Sets the shim of NullNotificationStore.GetNotificationOrNullAsync(Guid notificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.GetSubscriptionsAsyncNullableOfInt32ArrayStringStringString">
            <summary>Sets the shim of NullNotificationStore.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt;[] tenantIds, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.GetSubscriptionsAsyncStringStringString">
            <summary>Sets the shim of NullNotificationStore.GetSubscriptionsAsync(String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.GetSubscriptionsAsyncUserIdentifier">
            <summary>Sets the shim of NullNotificationStore.GetSubscriptionsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.GetUserNotificationCountAsyncUserIdentifierNullableOfUserNotificationState">
            <summary>Sets the shim of NullNotificationStore.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.GetUserNotificationWithNotificationOrNullAsyncNullableOfInt32Guid">
            <summary>Sets the shim of NullNotificationStore.GetUserNotificationWithNotificationOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.GetUserNotificationsWithNotificationsAsyncUserIdentifierNullableOfUserNotificationStateInt32Int32">
            <summary>Sets the shim of NullNotificationStore.GetUserNotificationsWithNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.InsertNotificationAsyncNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.InsertNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.InsertSubscriptionAsyncNotificationSubscriptionInfo">
            <summary>Sets the shim of NullNotificationStore.InsertSubscriptionAsync(NotificationSubscriptionInfo subscription)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.InsertTenantNotificationAsyncTenantNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.InsertTenantNotificationAsync(TenantNotificationInfo tenantNotificationInfo)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.InsertUserNotificationAsyncUserNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.InsertUserNotificationAsync(UserNotificationInfo userNotification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.IsSubscribedAsyncUserIdentifierStringStringString">
            <summary>Sets the shim of NullNotificationStore.IsSubscribedAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.UpdateAllUserNotificationStatesAsyncUserIdentifierUserNotificationState">
            <summary>Sets the shim of NullNotificationStore.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.AllInstances.UpdateUserNotificationStateAsyncNullableOfInt32GuidUserNotificationState">
            <summary>Sets the shim of NullNotificationStore.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; notificationId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullNotificationStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullNotificationStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullNotificationStore.Bind(Abp.Notifications.INotificationStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.Constructor">
            <summary>Sets the shim of NullNotificationStore.NullNotificationStore()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.DeleteAllUserNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of NullNotificationStore.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.DeleteNotificationAsyncNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.DeleteNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.DeleteSubscriptionAsyncUserIdentifierStringStringString">
            <summary>Sets the shim of NullNotificationStore.DeleteSubscriptionAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.DeleteUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the shim of NullNotificationStore.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; notificationId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.GetNotificationOrNullAsyncGuid">
            <summary>Sets the shim of NullNotificationStore.GetNotificationOrNullAsync(Guid notificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.GetSubscriptionsAsyncNullableOfInt32ArrayStringStringString">
            <summary>Sets the shim of NullNotificationStore.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt;[] tenantIds, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.GetSubscriptionsAsyncStringStringString">
            <summary>Sets the shim of NullNotificationStore.GetSubscriptionsAsync(String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.GetSubscriptionsAsyncUserIdentifier">
            <summary>Sets the shim of NullNotificationStore.GetSubscriptionsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.GetUserNotificationCountAsyncUserIdentifierNullableOfUserNotificationState">
            <summary>Sets the shim of NullNotificationStore.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.GetUserNotificationWithNotificationOrNullAsyncNullableOfInt32Guid">
            <summary>Sets the shim of NullNotificationStore.GetUserNotificationWithNotificationOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.GetUserNotificationsWithNotificationsAsyncUserIdentifierNullableOfUserNotificationStateInt32Int32">
            <summary>Sets the shim of NullNotificationStore.GetUserNotificationsWithNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.InsertNotificationAsyncNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.InsertNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.InsertSubscriptionAsyncNotificationSubscriptionInfo">
            <summary>Sets the shim of NullNotificationStore.InsertSubscriptionAsync(NotificationSubscriptionInfo subscription)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.InsertTenantNotificationAsyncTenantNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.InsertTenantNotificationAsync(TenantNotificationInfo tenantNotificationInfo)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.InsertUserNotificationAsyncUserNotificationInfo">
            <summary>Sets the shim of NullNotificationStore.InsertUserNotificationAsync(UserNotificationInfo userNotification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.IsSubscribedAsyncUserIdentifierStringStringString">
            <summary>Sets the shim of NullNotificationStore.IsSubscribedAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.UpdateAllUserNotificationStatesAsyncUserIdentifierUserNotificationState">
            <summary>Sets the shim of NullNotificationStore.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullNotificationStore.UpdateUserNotificationStateAsyncNullableOfInt32GuidUserNotificationState">
            <summary>Sets the shim of NullNotificationStore.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; notificationId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNullRealTimeNotifier">
            <summary>Shim type of Abp.Notifications.NullRealTimeNotifier</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.#ctor(Abp.Notifications.NullRealTimeNotifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.AllInstances.SendNotificationsAsyncUserNotificationArray">
            <summary>Sets the shim of NullRealTimeNotifier.SendNotificationsAsync(UserNotification[] userNotifications)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.Bind(Abp.Notifications.IRealTimeNotifier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.Constructor">
            <summary>Sets the shim of NullRealTimeNotifier.NullRealTimeNotifier()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.InstanceGet">
            <summary>Sets the shim of NullRealTimeNotifier.get_Instance()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.SendNotificationsAsyncUserNotificationArray">
            <summary>Sets the shim of NullRealTimeNotifier.SendNotificationsAsync(UserNotification[] userNotifications)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimNullRealTimeNotifier.StaticConstructor">
            <summary>Sets the shim of NullRealTimeNotifier.NullRealTimeNotifier()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimTenantNotification">
            <summary>Shim type of Abp.Notifications.TenantNotification</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotification.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotification.#ctor(Abp.Notifications.TenantNotification)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.CreationTimeGet">
            <summary>Sets the shim of TenantNotification.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of TenantNotification.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.DataGet">
            <summary>Sets the shim of TenantNotification.get_Data()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.DataSetNotificationData">
            <summary>Sets the shim of TenantNotification.set_Data(NotificationData value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.EntityIdGet">
            <summary>Sets the shim of TenantNotification.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.EntityIdSetObject">
            <summary>Sets the shim of TenantNotification.set_EntityId(Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.EntityTypeGet">
            <summary>Sets the shim of TenantNotification.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.EntityTypeNameGet">
            <summary>Sets the shim of TenantNotification.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.EntityTypeNameSetString">
            <summary>Sets the shim of TenantNotification.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.EntityTypeSetType">
            <summary>Sets the shim of TenantNotification.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.NotificationNameGet">
            <summary>Sets the shim of TenantNotification.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.NotificationNameSetString">
            <summary>Sets the shim of TenantNotification.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.SeverityGet">
            <summary>Sets the shim of TenantNotification.get_Severity()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.SeveritySetNotificationSeverity">
            <summary>Sets the shim of TenantNotification.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.TenantIdGet">
            <summary>Sets the shim of TenantNotification.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of TenantNotification.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotification.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotification.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotification.Bind(Abp.Application.Services.Dto.IEntityDto{System.Guid})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotification.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.Constructor">
            <summary>Sets the shim of TenantNotification.TenantNotification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.CreationTimeGet">
            <summary>Sets the shim of TenantNotification.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.CreationTimeSetDateTime">
            <summary>Sets the shim of TenantNotification.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.DataGet">
            <summary>Sets the shim of TenantNotification.get_Data()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.DataSetNotificationData">
            <summary>Sets the shim of TenantNotification.set_Data(NotificationData value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.EntityIdGet">
            <summary>Sets the shim of TenantNotification.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.EntityIdSetObject">
            <summary>Sets the shim of TenantNotification.set_EntityId(Object value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.EntityTypeGet">
            <summary>Sets the shim of TenantNotification.get_EntityType()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.EntityTypeNameGet">
            <summary>Sets the shim of TenantNotification.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.EntityTypeNameSetString">
            <summary>Sets the shim of TenantNotification.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.EntityTypeSetType">
            <summary>Sets the shim of TenantNotification.set_EntityType(Type value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.NotificationNameGet">
            <summary>Sets the shim of TenantNotification.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.NotificationNameSetString">
            <summary>Sets the shim of TenantNotification.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.SeverityGet">
            <summary>Sets the shim of TenantNotification.get_Severity()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.SeveritySetNotificationSeverity">
            <summary>Sets the shim of TenantNotification.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.TenantIdGet">
            <summary>Sets the shim of TenantNotification.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotification.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of TenantNotification.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimTenantNotificationInfo">
            <summary>Shim type of Abp.Notifications.TenantNotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.#ctor(Abp.Notifications.TenantNotificationInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.DataGet">
            <summary>Sets the shim of TenantNotificationInfo.get_Data()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.DataSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_Data(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.DataTypeNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.DataTypeNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_DataTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.EntityIdGet">
            <summary>Sets the shim of TenantNotificationInfo.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.EntityIdSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.EntityTypeNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.EntityTypeNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.NotificationNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.NotificationNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.SeverityGet">
            <summary>Sets the shim of TenantNotificationInfo.get_Severity()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.SeveritySetNotificationSeverity">
            <summary>Sets the shim of TenantNotificationInfo.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.TenantIdGet">
            <summary>Sets the shim of TenantNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of TenantNotificationInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.Bind(Abp.Domain.Entities.IMayHaveTenant)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.Bind(Abp.Domain.Entities.IEntity{System.Guid})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.Bind(Abp.Domain.Entities.Auditing.ICreationAudited)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfo.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.Constructor">
            <summary>Sets the shim of TenantNotificationInfo.TenantNotificationInfo()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.ConstructorGuidNullableOfInt32NotificationInfo">
            <summary>Sets the shim of TenantNotificationInfo.TenantNotificationInfo(Guid id, Nullable`1&lt;Int32&gt; tenantId, NotificationInfo notification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.DataGet">
            <summary>Sets the shim of TenantNotificationInfo.get_Data()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.DataSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_Data(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.DataTypeNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.DataTypeNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_DataTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.EntityIdGet">
            <summary>Sets the shim of TenantNotificationInfo.get_EntityId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.EntityIdSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.EntityTypeNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.EntityTypeNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.NotificationNameGet">
            <summary>Sets the shim of TenantNotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.NotificationNameSetString">
            <summary>Sets the shim of TenantNotificationInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.SeverityGet">
            <summary>Sets the shim of TenantNotificationInfo.get_Severity()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.SeveritySetNotificationSeverity">
            <summary>Sets the shim of TenantNotificationInfo.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.TenantIdGet">
            <summary>Sets the shim of TenantNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of TenantNotificationInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimTenantNotificationInfoExtensions">
            <summary>Shim type of Abp.Notifications.TenantNotificationInfoExtensions</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfoExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfoExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimTenantNotificationInfoExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfoExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimTenantNotificationInfoExtensions.ToTenantNotificationTenantNotificationInfo">
            <summary>Sets the shim of TenantNotificationInfoExtensions.ToTenantNotification(TenantNotificationInfo tenantNotificationInfo)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotification">
            <summary>Shim type of Abp.Notifications.UserNotification</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotification.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotification.#ctor(Abp.Notifications.UserNotification)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotification.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.NotificationGet">
            <summary>Sets the shim of UserNotification.get_Notification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.NotificationSetTenantNotification">
            <summary>Sets the shim of UserNotification.set_Notification(TenantNotification value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.StateGet">
            <summary>Sets the shim of UserNotification.get_State()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.StateSetUserNotificationState">
            <summary>Sets the shim of UserNotification.set_State(UserNotificationState value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.TenantIdGet">
            <summary>Sets the shim of UserNotification.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of UserNotification.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.UserIdGet">
            <summary>Sets the shim of UserNotification.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.AllInstances.UserIdSetInt64">
            <summary>Sets the shim of UserNotification.set_UserId(Int64 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotification.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotification.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotification.Bind(Abp.IUserIdentifier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotification.Bind(Abp.Application.Services.Dto.IEntityDto{System.Guid})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.Constructor">
            <summary>Sets the shim of UserNotification.UserNotification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.NotificationGet">
            <summary>Sets the shim of UserNotification.get_Notification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.NotificationSetTenantNotification">
            <summary>Sets the shim of UserNotification.set_Notification(TenantNotification value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.StateGet">
            <summary>Sets the shim of UserNotification.get_State()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.StateSetUserNotificationState">
            <summary>Sets the shim of UserNotification.set_State(UserNotificationState value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.TenantIdGet">
            <summary>Sets the shim of UserNotification.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of UserNotification.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.UserIdGet">
            <summary>Sets the shim of UserNotification.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotification.UserIdSetInt64">
            <summary>Sets the shim of UserNotification.set_UserId(Int64 value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationInfo">
            <summary>Shim type of Abp.Notifications.UserNotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfo.#ctor(Abp.Notifications.UserNotificationInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.CreationTimeGet">
            <summary>Sets the shim of UserNotificationInfo.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of UserNotificationInfo.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.StateGet">
            <summary>Sets the shim of UserNotificationInfo.get_State()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.StateSetUserNotificationState">
            <summary>Sets the shim of UserNotificationInfo.set_State(UserNotificationState value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.TenantIdGet">
            <summary>Sets the shim of UserNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of UserNotificationInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.TenantNotificationIdGet">
            <summary>Sets the shim of UserNotificationInfo.get_TenantNotificationId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.TenantNotificationIdSetGuid">
            <summary>Sets the shim of UserNotificationInfo.set_TenantNotificationId(Guid value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.UserIdGet">
            <summary>Sets the shim of UserNotificationInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.AllInstances.UserIdSetInt64">
            <summary>Sets the shim of UserNotificationInfo.set_UserId(Int64 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfo.Bind(Abp.Domain.Entities.IMayHaveTenant)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfo.Bind(Abp.Domain.Entities.IEntity{System.Guid})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfo.Bind(Abp.Domain.Entities.Auditing.IHasCreationTime)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.Constructor">
            <summary>Sets the shim of UserNotificationInfo.UserNotificationInfo()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.ConstructorGuid">
            <summary>Sets the shim of UserNotificationInfo.UserNotificationInfo(Guid id)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.CreationTimeGet">
            <summary>Sets the shim of UserNotificationInfo.get_CreationTime()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.CreationTimeSetDateTime">
            <summary>Sets the shim of UserNotificationInfo.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.StateGet">
            <summary>Sets the shim of UserNotificationInfo.get_State()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.StateSetUserNotificationState">
            <summary>Sets the shim of UserNotificationInfo.set_State(UserNotificationState value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.TenantIdGet">
            <summary>Sets the shim of UserNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of UserNotificationInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.TenantNotificationIdGet">
            <summary>Sets the shim of UserNotificationInfo.get_TenantNotificationId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.TenantNotificationIdSetGuid">
            <summary>Sets the shim of UserNotificationInfo.set_TenantNotificationId(Guid value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.UserIdGet">
            <summary>Sets the shim of UserNotificationInfo.get_UserId()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfo.UserIdSetInt64">
            <summary>Sets the shim of UserNotificationInfo.set_UserId(Int64 value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationInfoExtensions">
            <summary>Shim type of Abp.Notifications.UserNotificationInfoExtensions</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoExtensions.ToUserNotificationUserNotificationInfoTenantNotification">
            <summary>Sets the shim of UserNotificationInfoExtensions.ToUserNotification(UserNotificationInfo userNotificationInfo, TenantNotification tenantNotification)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo">
            <summary>Shim type of Abp.Notifications.UserNotificationInfoWithNotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.#ctor(Abp.Notifications.UserNotificationInfoWithNotificationInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.AllInstances.NotificationGet">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.get_Notification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.AllInstances.NotificationSetTenantNotificationInfo">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.set_Notification(TenantNotificationInfo value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.AllInstances.UserNotificationGet">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.get_UserNotification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.AllInstances.UserNotificationSetUserNotificationInfo">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.set_UserNotification(UserNotificationInfo value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.ConstructorUserNotificationInfoTenantNotificationInfo">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.UserNotificationInfoWithNotificationInfo(UserNotificationInfo userNotification, TenantNotificationInfo notification)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.NotificationGet">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.get_Notification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.NotificationSetTenantNotificationInfo">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.set_Notification(TenantNotificationInfo value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.UserNotificationGet">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.get_UserNotification()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfo.UserNotificationSetUserNotificationInfo">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfo.set_UserNotification(UserNotificationInfo value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfoExtensions">
            <summary>Shim type of Abp.Notifications.UserNotificationInfoWithNotificationInfoExtensions</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfoExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfoExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfoExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfoExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationInfoWithNotificationInfoExtensions.ToUserNotificationUserNotificationInfoWithNotificationInfo">
            <summary>Sets the shim of UserNotificationInfoWithNotificationInfoExtensions.ToUserNotification(UserNotificationInfoWithNotificationInfo userNotificationInfoWithNotificationInfo)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationManager">
            <summary>Shim type of Abp.Notifications.UserNotificationManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationManager.#ctor(Abp.Notifications.UserNotificationManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances.DeleteAllUserNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of UserNotificationManager.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances.DeleteUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the shim of UserNotificationManager.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances.GetUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the shim of UserNotificationManager.GetUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances.GetUserNotificationCountAsyncUserIdentifierNullableOfUserNotificationState">
            <summary>Sets the shim of UserNotificationManager.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances.GetUserNotificationsAsyncUserIdentifierNullableOfUserNotificationStateInt32Int32">
            <summary>Sets the shim of UserNotificationManager.GetUserNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances.UpdateAllUserNotificationStatesAsyncUserIdentifierUserNotificationState">
            <summary>Sets the shim of UserNotificationManager.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.AllInstances.UpdateUserNotificationStateAsyncNullableOfInt32GuidUserNotificationState">
            <summary>Sets the shim of UserNotificationManager.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationManager.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.ShimUserNotificationManager.Bind(Abp.Notifications.IUserNotificationManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.ConstructorINotificationStore">
            <summary>Sets the shim of UserNotificationManager.UserNotificationManager(INotificationStore store)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.DeleteAllUserNotificationsAsyncUserIdentifier">
            <summary>Sets the shim of UserNotificationManager.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.DeleteUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the shim of UserNotificationManager.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.GetUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the shim of UserNotificationManager.GetUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.GetUserNotificationCountAsyncUserIdentifierNullableOfUserNotificationState">
            <summary>Sets the shim of UserNotificationManager.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.GetUserNotificationsAsyncUserIdentifierNullableOfUserNotificationStateInt32Int32">
            <summary>Sets the shim of UserNotificationManager.GetUserNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.UpdateAllUserNotificationStatesAsyncUserIdentifierUserNotificationState">
            <summary>Sets the shim of UserNotificationManager.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.ShimUserNotificationManager.UpdateUserNotificationStateAsyncNullableOfInt32GuidUserNotificationState">
            <summary>Sets the shim of UserNotificationManager.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubINotificationConfiguration">
            <summary>Stub type of Abp.Notifications.INotificationConfiguration</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationConfiguration.#ctor">
            <summary>Initializes a new instance of type StubINotificationConfiguration</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubINotificationConfiguration.Abp#Notifications#INotificationConfiguration#Providers">
            <summary>Sets the stub of INotificationConfiguration.get_Providers()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationConfiguration.ProvidersGet">
            <summary>Sets the stub of INotificationConfiguration.get_Providers()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubINotificationDefinitionContext">
            <summary>Stub type of Abp.Notifications.INotificationDefinitionContext</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionContext.#ctor">
            <summary>Initializes a new instance of type StubINotificationDefinitionContext</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubINotificationDefinitionContext.Abp#Notifications#INotificationDefinitionContext#Manager">
            <summary>Sets the stub of INotificationDefinitionContext.get_Manager()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDefinitionContext.ManagerGet">
            <summary>Sets the stub of INotificationDefinitionContext.get_Manager()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubINotificationDefinitionManager">
            <summary>Stub type of Abp.Notifications.INotificationDefinitionManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionManager.#ctor">
            <summary>Initializes a new instance of type StubINotificationDefinitionManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionManager.Abp#Notifications#INotificationDefinitionManager#Add(Abp.Notifications.NotificationDefinition)">
            <summary>Sets the stub of INotificationDefinitionManager.Add(NotificationDefinition notificationDefinition)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionManager.Abp#Notifications#INotificationDefinitionManager#Get(System.String)">
            <summary>Sets the stub of INotificationDefinitionManager.Get(String name)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionManager.Abp#Notifications#INotificationDefinitionManager#GetAll">
            <summary>Sets the stub of INotificationDefinitionManager.GetAll()</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionManager.Abp#Notifications#INotificationDefinitionManager#GetAllAvailableAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of INotificationDefinitionManager.GetAllAvailableAsync(UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionManager.Abp#Notifications#INotificationDefinitionManager#GetOrNull(System.String)">
            <summary>Sets the stub of INotificationDefinitionManager.GetOrNull(String name)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDefinitionManager.Abp#Notifications#INotificationDefinitionManager#IsAvailableAsync(System.String,Abp.UserIdentifier)">
            <summary>Sets the stub of INotificationDefinitionManager.IsAvailableAsync(String name, UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDefinitionManager.AddNotificationDefinition">
            <summary>Sets the stub of INotificationDefinitionManager.Add(NotificationDefinition notificationDefinition)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDefinitionManager.GetAll">
            <summary>Sets the stub of INotificationDefinitionManager.GetAll()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDefinitionManager.GetAllAvailableAsyncUserIdentifier">
            <summary>Sets the stub of INotificationDefinitionManager.GetAllAvailableAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDefinitionManager.GetOrNullString">
            <summary>Sets the stub of INotificationDefinitionManager.GetOrNull(String name)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDefinitionManager.GetString">
            <summary>Sets the stub of INotificationDefinitionManager.Get(String name)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDefinitionManager.IsAvailableAsyncStringUserIdentifier">
            <summary>Sets the stub of INotificationDefinitionManager.IsAvailableAsync(String name, UserIdentifier user)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubINotificationDistributer">
            <summary>Stub type of Abp.Notifications.INotificationDistributer</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDistributer.#ctor">
            <summary>Initializes a new instance of type StubINotificationDistributer</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationDistributer.Abp#Notifications#INotificationDistributer#DistributeAsync(System.Guid)">
            <summary>Sets the stub of INotificationDistributer.DistributeAsync(Guid notificationId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationDistributer.DistributeAsyncGuid">
            <summary>Sets the stub of INotificationDistributer.DistributeAsync(Guid notificationId)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubINotificationPublisher">
            <summary>Stub type of Abp.Notifications.INotificationPublisher</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationPublisher.#ctor">
            <summary>Initializes a new instance of type StubINotificationPublisher</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationPublisher.Abp#Notifications#INotificationPublisher#PublishAsync(System.String,Abp.Notifications.NotificationData,Abp.Domain.Entities.EntityIdentifier,Abp.Notifications.NotificationSeverity,Abp.UserIdentifier[],Abp.UserIdentifier[],System.Nullable{System.Int32}[])">
            <summary>Sets the stub of INotificationPublisher.PublishAsync(String notificationName, NotificationData data, EntityIdentifier entityIdentifier, NotificationSeverity severity, UserIdentifier[] userIds, UserIdentifier[] excludedUserIds, Nullable`1&lt;Int32&gt;[] tenantIds)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationPublisher.PublishAsyncStringNotificationDataEntityIdentifierNotificationSeverityUserIdentifierArrayUserIdentifierArrayNullableOfInt32Array">
            <summary>Sets the stub of INotificationPublisher.PublishAsync(String notificationName, NotificationData data, EntityIdentifier entityIdentifier, NotificationSeverity severity, UserIdentifier[] userIds, UserIdentifier[] excludedUserIds, Nullable`1&lt;Int32&gt;[] tenantIds)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubINotificationStore">
            <summary>Stub type of Abp.Notifications.INotificationStore</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.#ctor">
            <summary>Initializes a new instance of type StubINotificationStore</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#DeleteAllUserNotificationsAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of INotificationStore.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#DeleteNotificationAsync(Abp.Notifications.NotificationInfo)">
            <summary>Sets the stub of INotificationStore.DeleteNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#DeleteSubscriptionAsync(Abp.UserIdentifier,System.String,System.String,System.String)">
            <summary>Sets the stub of INotificationStore.DeleteSubscriptionAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#DeleteUserNotificationAsync(System.Nullable{System.Int32},System.Guid)">
            <summary>Sets the stub of INotificationStore.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#GetNotificationOrNullAsync(System.Guid)">
            <summary>Sets the stub of INotificationStore.GetNotificationOrNullAsync(Guid notificationId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#GetSubscriptionsAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of INotificationStore.GetSubscriptionsAsync(UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#GetSubscriptionsAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of INotificationStore.GetSubscriptionsAsync(String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#GetSubscriptionsAsync(System.Nullable{System.Int32}[],System.String,System.String,System.String)">
            <summary>Sets the stub of INotificationStore.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt;[] tenantIds, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#GetUserNotificationCountAsync(Abp.UserIdentifier,System.Nullable{Abp.Notifications.UserNotificationState})">
            <summary>Sets the stub of INotificationStore.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#GetUserNotificationWithNotificationOrNullAsync(System.Nullable{System.Int32},System.Guid)">
            <summary>Sets the stub of INotificationStore.GetUserNotificationWithNotificationOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#GetUserNotificationsWithNotificationsAsync(Abp.UserIdentifier,System.Nullable{Abp.Notifications.UserNotificationState},System.Int32,System.Int32)">
            <summary>Sets the stub of INotificationStore.GetUserNotificationsWithNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#InsertNotificationAsync(Abp.Notifications.NotificationInfo)">
            <summary>Sets the stub of INotificationStore.InsertNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#InsertSubscriptionAsync(Abp.Notifications.NotificationSubscriptionInfo)">
            <summary>Sets the stub of INotificationStore.InsertSubscriptionAsync(NotificationSubscriptionInfo subscription)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#InsertTenantNotificationAsync(Abp.Notifications.TenantNotificationInfo)">
            <summary>Sets the stub of INotificationStore.InsertTenantNotificationAsync(TenantNotificationInfo tenantNotificationInfo)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#InsertUserNotificationAsync(Abp.Notifications.UserNotificationInfo)">
            <summary>Sets the stub of INotificationStore.InsertUserNotificationAsync(UserNotificationInfo userNotification)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#IsSubscribedAsync(Abp.UserIdentifier,System.String,System.String,System.String)">
            <summary>Sets the stub of INotificationStore.IsSubscribedAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#UpdateAllUserNotificationStatesAsync(Abp.UserIdentifier,Abp.Notifications.UserNotificationState)">
            <summary>Sets the stub of INotificationStore.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationStore.Abp#Notifications#INotificationStore#UpdateUserNotificationStateAsync(System.Nullable{System.Int32},System.Guid,Abp.Notifications.UserNotificationState)">
            <summary>Sets the stub of INotificationStore.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.DeleteAllUserNotificationsAsyncUserIdentifier">
            <summary>Sets the stub of INotificationStore.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.DeleteNotificationAsyncNotificationInfo">
            <summary>Sets the stub of INotificationStore.DeleteNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.DeleteSubscriptionAsyncUserIdentifierStringStringString">
            <summary>Sets the stub of INotificationStore.DeleteSubscriptionAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.DeleteUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the stub of INotificationStore.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.GetNotificationOrNullAsyncGuid">
            <summary>Sets the stub of INotificationStore.GetNotificationOrNullAsync(Guid notificationId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.GetSubscriptionsAsyncNullableOfInt32ArrayStringStringString">
            <summary>Sets the stub of INotificationStore.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt;[] tenantIds, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.GetSubscriptionsAsyncStringStringString">
            <summary>Sets the stub of INotificationStore.GetSubscriptionsAsync(String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.GetSubscriptionsAsyncUserIdentifier">
            <summary>Sets the stub of INotificationStore.GetSubscriptionsAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.GetUserNotificationCountAsyncUserIdentifierNullableOfUserNotificationState">
            <summary>Sets the stub of INotificationStore.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.GetUserNotificationWithNotificationOrNullAsyncNullableOfInt32Guid">
            <summary>Sets the stub of INotificationStore.GetUserNotificationWithNotificationOrNullAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.GetUserNotificationsWithNotificationsAsyncUserIdentifierNullableOfUserNotificationStateInt32Int32">
            <summary>Sets the stub of INotificationStore.GetUserNotificationsWithNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.InsertNotificationAsyncNotificationInfo">
            <summary>Sets the stub of INotificationStore.InsertNotificationAsync(NotificationInfo notification)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.InsertSubscriptionAsyncNotificationSubscriptionInfo">
            <summary>Sets the stub of INotificationStore.InsertSubscriptionAsync(NotificationSubscriptionInfo subscription)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.InsertTenantNotificationAsyncTenantNotificationInfo">
            <summary>Sets the stub of INotificationStore.InsertTenantNotificationAsync(TenantNotificationInfo tenantNotificationInfo)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.InsertUserNotificationAsyncUserNotificationInfo">
            <summary>Sets the stub of INotificationStore.InsertUserNotificationAsync(UserNotificationInfo userNotification)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.IsSubscribedAsyncUserIdentifierStringStringString">
            <summary>Sets the stub of INotificationStore.IsSubscribedAsync(UserIdentifier user, String notificationName, String entityTypeName, String entityId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.UpdateAllUserNotificationStatesAsyncUserIdentifierUserNotificationState">
            <summary>Sets the stub of INotificationStore.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationStore.UpdateUserNotificationStateAsyncNullableOfInt32GuidUserNotificationState">
            <summary>Sets the stub of INotificationStore.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubINotificationSubscriptionManager">
            <summary>Stub type of Abp.Notifications.INotificationSubscriptionManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.#ctor">
            <summary>Initializes a new instance of type StubINotificationSubscriptionManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.Abp#Notifications#INotificationSubscriptionManager#GetSubscribedNotificationsAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of INotificationSubscriptionManager.GetSubscribedNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.Abp#Notifications#INotificationSubscriptionManager#GetSubscriptionsAsync(System.String,Abp.Domain.Entities.EntityIdentifier)">
            <summary>Sets the stub of INotificationSubscriptionManager.GetSubscriptionsAsync(String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.Abp#Notifications#INotificationSubscriptionManager#GetSubscriptionsAsync(System.Nullable{System.Int32},System.String,Abp.Domain.Entities.EntityIdentifier)">
            <summary>Sets the stub of INotificationSubscriptionManager.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt; tenantId, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.Abp#Notifications#INotificationSubscriptionManager#IsSubscribedAsync(Abp.UserIdentifier,System.String,Abp.Domain.Entities.EntityIdentifier)">
            <summary>Sets the stub of INotificationSubscriptionManager.IsSubscribedAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.Abp#Notifications#INotificationSubscriptionManager#SubscribeAsync(Abp.UserIdentifier,System.String,Abp.Domain.Entities.EntityIdentifier)">
            <summary>Sets the stub of INotificationSubscriptionManager.SubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.Abp#Notifications#INotificationSubscriptionManager#SubscribeToAllAvailableNotificationsAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of INotificationSubscriptionManager.SubscribeToAllAvailableNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.Abp#Notifications#INotificationSubscriptionManager#UnsubscribeAsync(Abp.UserIdentifier,System.String,Abp.Domain.Entities.EntityIdentifier)">
            <summary>Sets the stub of INotificationSubscriptionManager.UnsubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.GetSubscribedNotificationsAsyncUserIdentifier">
            <summary>Sets the stub of INotificationSubscriptionManager.GetSubscribedNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.GetSubscriptionsAsyncNullableOfInt32StringEntityIdentifier">
            <summary>Sets the stub of INotificationSubscriptionManager.GetSubscriptionsAsync(Nullable`1&lt;Int32&gt; tenantId, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.GetSubscriptionsAsyncStringEntityIdentifier">
            <summary>Sets the stub of INotificationSubscriptionManager.GetSubscriptionsAsync(String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.IsSubscribedAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the stub of INotificationSubscriptionManager.IsSubscribedAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.SubscribeAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the stub of INotificationSubscriptionManager.SubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.SubscribeToAllAvailableNotificationsAsyncUserIdentifier">
            <summary>Sets the stub of INotificationSubscriptionManager.SubscribeToAllAvailableNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubINotificationSubscriptionManager.UnsubscribeAsyncUserIdentifierStringEntityIdentifier">
            <summary>Sets the stub of INotificationSubscriptionManager.UnsubscribeAsync(UserIdentifier user, String notificationName, EntityIdentifier entityIdentifier)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubIRealTimeNotifier">
            <summary>Stub type of Abp.Notifications.IRealTimeNotifier</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIRealTimeNotifier.#ctor">
            <summary>Initializes a new instance of type StubIRealTimeNotifier</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIRealTimeNotifier.Abp#Notifications#IRealTimeNotifier#SendNotificationsAsync(Abp.Notifications.UserNotification[])">
            <summary>Sets the stub of IRealTimeNotifier.SendNotificationsAsync(UserNotification[] userNotifications)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIRealTimeNotifier.SendNotificationsAsyncUserNotificationArray">
            <summary>Sets the stub of IRealTimeNotifier.SendNotificationsAsync(UserNotification[] userNotifications)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubIUserNotificationManager">
            <summary>Stub type of Abp.Notifications.IUserNotificationManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.#ctor">
            <summary>Initializes a new instance of type StubIUserNotificationManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.Abp#Notifications#IUserNotificationManager#DeleteAllUserNotificationsAsync(Abp.UserIdentifier)">
            <summary>Sets the stub of IUserNotificationManager.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.Abp#Notifications#IUserNotificationManager#DeleteUserNotificationAsync(System.Nullable{System.Int32},System.Guid)">
            <summary>Sets the stub of IUserNotificationManager.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.Abp#Notifications#IUserNotificationManager#GetUserNotificationAsync(System.Nullable{System.Int32},System.Guid)">
            <summary>Sets the stub of IUserNotificationManager.GetUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.Abp#Notifications#IUserNotificationManager#GetUserNotificationCountAsync(Abp.UserIdentifier,System.Nullable{Abp.Notifications.UserNotificationState})">
            <summary>Sets the stub of IUserNotificationManager.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.Abp#Notifications#IUserNotificationManager#GetUserNotificationsAsync(Abp.UserIdentifier,System.Nullable{Abp.Notifications.UserNotificationState},System.Int32,System.Int32)">
            <summary>Sets the stub of IUserNotificationManager.GetUserNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.Abp#Notifications#IUserNotificationManager#UpdateAllUserNotificationStatesAsync(Abp.UserIdentifier,Abp.Notifications.UserNotificationState)">
            <summary>Sets the stub of IUserNotificationManager.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubIUserNotificationManager.Abp#Notifications#IUserNotificationManager#UpdateUserNotificationStateAsync(System.Nullable{System.Int32},System.Guid,Abp.Notifications.UserNotificationState)">
            <summary>Sets the stub of IUserNotificationManager.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIUserNotificationManager.DeleteAllUserNotificationsAsyncUserIdentifier">
            <summary>Sets the stub of IUserNotificationManager.DeleteAllUserNotificationsAsync(UserIdentifier user)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIUserNotificationManager.DeleteUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the stub of IUserNotificationManager.DeleteUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIUserNotificationManager.GetUserNotificationAsyncNullableOfInt32Guid">
            <summary>Sets the stub of IUserNotificationManager.GetUserNotificationAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIUserNotificationManager.GetUserNotificationCountAsyncUserIdentifierNullableOfUserNotificationState">
            <summary>Sets the stub of IUserNotificationManager.GetUserNotificationCountAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIUserNotificationManager.GetUserNotificationsAsyncUserIdentifierNullableOfUserNotificationStateInt32Int32">
            <summary>Sets the stub of IUserNotificationManager.GetUserNotificationsAsync(UserIdentifier user, Nullable`1&lt;UserNotificationState&gt; state, Int32 skipCount, Int32 maxResultCount)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIUserNotificationManager.UpdateAllUserNotificationStatesAsyncUserIdentifierUserNotificationState">
            <summary>Sets the stub of IUserNotificationManager.UpdateAllUserNotificationStatesAsync(UserIdentifier user, UserNotificationState state)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubIUserNotificationManager.UpdateUserNotificationStateAsyncNullableOfInt32GuidUserNotificationState">
            <summary>Sets the stub of IUserNotificationManager.UpdateUserNotificationStateAsync(Nullable`1&lt;Int32&gt; tenantId, Guid userNotificationId, UserNotificationState state)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData">
            <summary>Stub type of Abp.Notifications.LocalizableMessageNotificationData</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.#ctor(Abp.Localization.LocalizableString)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizableMessageNotificationData</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.ToString">
            <summary>Sets the stub of NotificationData.ToString()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.ToString01">
            <summary>Sets the stub of NotificationData.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.Type">
            <summary>Sets the stub of NotificationData.get_Type()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubLocalizableMessageNotificationData.TypeGet">
            <summary>Sets the stub of NotificationData.get_Type()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubMessageNotificationData">
            <summary>Stub type of Abp.Notifications.MessageNotificationData</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubMessageNotificationData.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubMessageNotificationData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubMessageNotificationData.InitializeStub">
            <summary>Initializes a new instance of type StubMessageNotificationData</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubMessageNotificationData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubMessageNotificationData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubMessageNotificationData.ToString">
            <summary>Sets the stub of NotificationData.ToString()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubMessageNotificationData.ToString01">
            <summary>Sets the stub of NotificationData.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubMessageNotificationData.Type">
            <summary>Sets the stub of NotificationData.get_Type()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubMessageNotificationData.TypeGet">
            <summary>Sets the stub of NotificationData.get_Type()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationData">
            <summary>Stub type of Abp.Notifications.NotificationData</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationData.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationData</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationData.ToString">
            <summary>Sets the stub of NotificationData.ToString()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationData.ToString01">
            <summary>Sets the stub of NotificationData.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationData.Type">
            <summary>Sets the stub of NotificationData.get_Type()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationData.TypeGet">
            <summary>Sets the stub of NotificationData.get_Type()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationDefinition">
            <summary>Stub type of Abp.Notifications.NotificationDefinition</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDefinition.#ctor(System.String,System.Type,Abp.Localization.ILocalizableString,Abp.Localization.ILocalizableString,Abp.Authorization.IPermissionDependency,Abp.Application.Features.IFeatureDependency)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationDefinition</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationDistributer">
            <summary>Stub type of Abp.Notifications.NotificationDistributer</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributer.#ctor(Abp.Notifications.INotificationDefinitionManager,Abp.Notifications.INotificationStore,Abp.Domain.Uow.IUnitOfWorkManager,Abp.IGuidGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributer.GetUsers(Abp.Notifications.NotificationInfo)">
            <summary>Sets the stub of NotificationDistributer.GetUsers(NotificationInfo notificationInfo)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationDistributer.GetUsersNotificationInfo">
            <summary>Sets the stub of NotificationDistributer.GetUsers(NotificationInfo notificationInfo)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributer.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationDistributer</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributer.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributer.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationDistributer.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationDistributer.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributer.SaveUserNotifications(Abp.UserIdentifier[],Abp.Notifications.NotificationInfo)">
            <summary>Sets the stub of NotificationDistributer.SaveUserNotifications(UserIdentifier[] users, NotificationInfo notificationInfo)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationDistributer.SaveUserNotificationsUserIdentifierArrayNotificationInfo">
            <summary>Sets the stub of NotificationDistributer.SaveUserNotifications(UserIdentifier[] users, NotificationInfo notificationInfo)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationDistributionJob">
            <summary>Stub type of Abp.Notifications.NotificationDistributionJob</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributionJob.#ctor(Abp.Notifications.INotificationDistributer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributionJob.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributionJob.Execute(Abp.Notifications.NotificationDistributionJobArgs)">
            <summary>Sets the stub of NotificationDistributionJob.Execute(NotificationDistributionJobArgs args)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationDistributionJob.ExecuteNotificationDistributionJobArgs">
            <summary>Sets the stub of NotificationDistributionJob.Execute(NotificationDistributionJobArgs args)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributionJob.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationDistributionJob</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributionJob.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributionJob.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributionJob.L(System.String)">
            <summary>Sets the stub of BackgroundJob`1.L(String name)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributionJob.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of BackgroundJob`1.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationDistributionJob.LString">
            <summary>Sets the stub of BackgroundJob`1.L(String name)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationDistributionJob.LStringCultureInfo">
            <summary>Sets the stub of BackgroundJob`1.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationDistributionJobArgs">
            <summary>Stub type of Abp.Notifications.NotificationDistributionJobArgs</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributionJobArgs.#ctor(System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributionJobArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationDistributionJobArgs.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationDistributionJobArgs</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributionJobArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationDistributionJobArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationInfo">
            <summary>Stub type of Abp.Notifications.NotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.#ctor(System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubNotificationInfo.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubNotificationInfo.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToData">
            <summary>Attaches delegates to emulate StubNotificationInfo.Data as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToDataTypeName">
            <summary>Attaches delegates to emulate StubNotificationInfo.DataTypeName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToEntityId">
            <summary>Attaches delegates to emulate StubNotificationInfo.EntityId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToEntityTypeAssemblyQualifiedName">
            <summary>Attaches delegates to emulate StubNotificationInfo.EntityTypeAssemblyQualifiedName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToEntityTypeName">
            <summary>Attaches delegates to emulate StubNotificationInfo.EntityTypeName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToExcludedUserIds">
            <summary>Attaches delegates to emulate StubNotificationInfo.ExcludedUserIds as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubNotificationInfo.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToNotificationName">
            <summary>Attaches delegates to emulate StubNotificationInfo.NotificationName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToSeverity">
            <summary>Attaches delegates to emulate StubNotificationInfo.Severity as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToTenantIds">
            <summary>Attaches delegates to emulate StubNotificationInfo.TenantIds as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.AttachBackingFieldToUserIds">
            <summary>Attaches delegates to emulate StubNotificationInfo.UserIds as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.Data">
            <summary>Sets the stub of NotificationInfo.get_Data()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.DataGet">
            <summary>Sets the stub of NotificationInfo.get_Data()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.DataSetString">
            <summary>Sets the stub of NotificationInfo.set_Data(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.DataTypeName">
            <summary>Sets the stub of NotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.DataTypeNameGet">
            <summary>Sets the stub of NotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.DataTypeNameSetString">
            <summary>Sets the stub of NotificationInfo.set_DataTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.EntityId">
            <summary>Sets the stub of NotificationInfo.get_EntityId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.EntityIdGet">
            <summary>Sets the stub of NotificationInfo.get_EntityId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.EntityIdSetString">
            <summary>Sets the stub of NotificationInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.EntityTypeAssemblyQualifiedName">
            <summary>Sets the stub of NotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the stub of NotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the stub of NotificationInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.EntityTypeName">
            <summary>Sets the stub of NotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.EntityTypeNameGet">
            <summary>Sets the stub of NotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.EntityTypeNameSetString">
            <summary>Sets the stub of NotificationInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.ExcludedUserIds">
            <summary>Sets the stub of NotificationInfo.get_ExcludedUserIds()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.ExcludedUserIdsGet">
            <summary>Sets the stub of NotificationInfo.get_ExcludedUserIds()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.ExcludedUserIdsSetString">
            <summary>Sets the stub of NotificationInfo.set_ExcludedUserIds(String value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.IdSetGuid">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationInfo</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.NotificationName">
            <summary>Sets the stub of NotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.NotificationNameGet">
            <summary>Sets the stub of NotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.NotificationNameSetString">
            <summary>Sets the stub of NotificationInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.Severity">
            <summary>Sets the stub of NotificationInfo.get_Severity()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.SeverityGet">
            <summary>Sets the stub of NotificationInfo.get_Severity()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.SeveritySetNotificationSeverity">
            <summary>Sets the stub of NotificationInfo.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.TenantIds">
            <summary>Sets the stub of NotificationInfo.get_TenantIds()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.TenantIdsGet">
            <summary>Sets the stub of NotificationInfo.get_TenantIds()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.TenantIdsSetString">
            <summary>Sets the stub of NotificationInfo.set_TenantIds(String value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationInfo.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationInfo.UserIds">
            <summary>Sets the stub of NotificationInfo.get_UserIds()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.UserIdsGet">
            <summary>Sets the stub of NotificationInfo.get_UserIds()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationInfo.UserIdsSetString">
            <summary>Sets the stub of NotificationInfo.set_UserIds(String value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationProvider">
            <summary>Stub type of Abp.Notifications.NotificationProvider</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationProvider.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationProvider</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationProvider.SetNotifications(Abp.Notifications.INotificationDefinitionContext)">
            <summary>Sets the stub of NotificationProvider.SetNotifications(INotificationDefinitionContext context)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationProvider.SetNotificationsINotificationDefinitionContext">
            <summary>Sets the stub of NotificationProvider.SetNotifications(INotificationDefinitionContext context)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationPublisher">
            <summary>Stub type of Abp.Notifications.NotificationPublisher</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationPublisher.#ctor(Abp.Notifications.INotificationStore,Abp.BackgroundJobs.IBackgroundJobManager,Abp.Notifications.INotificationDistributer,Abp.IGuidGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationPublisher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationPublisher.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationPublisher</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationPublisher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationPublisher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationPublisher.L(System.String)">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationPublisher.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationPublisher.LString">
            <summary>Sets the stub of AbpServiceBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationPublisher.LStringCultureInfo">
            <summary>Sets the stub of AbpServiceBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationPublisher.PublishAsync(System.String,Abp.Notifications.NotificationData,Abp.Domain.Entities.EntityIdentifier,Abp.Notifications.NotificationSeverity,Abp.UserIdentifier[],Abp.UserIdentifier[],System.Nullable{System.Int32}[])">
            <summary>Sets the stub of NotificationPublisher.PublishAsync(String notificationName, NotificationData data, EntityIdentifier entityIdentifier, NotificationSeverity severity, UserIdentifier[] userIds, UserIdentifier[] excludedUserIds, Nullable`1&lt;Int32&gt;[] tenantIds)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationPublisher.PublishAsyncStringNotificationDataEntityIdentifierNotificationSeverityUserIdentifierArrayUserIdentifierArrayNullableOfInt32Array">
            <summary>Sets the stub of NotificationPublisher.PublishAsync(String notificationName, NotificationData data, EntityIdentifier entityIdentifier, NotificationSeverity severity, UserIdentifier[] userIds, UserIdentifier[] excludedUserIds, Nullable`1&lt;Int32&gt;[] tenantIds)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationSettingProvider">
            <summary>Stub type of Abp.Notifications.NotificationSettingProvider</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSettingProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSettingProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSettingProvider.GetSettingDefinitions(Abp.Configuration.SettingDefinitionProviderContext)">
            <summary>Sets the stub of NotificationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSettingProvider.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the stub of NotificationSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSettingProvider.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationSettingProvider</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSettingProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSettingProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationSubscription">
            <summary>Stub type of Abp.Notifications.NotificationSubscription</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscription.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationSubscription</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo">
            <summary>Stub type of Abp.Notifications.NotificationSubscriptionInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.#ctor(System.Guid,System.Nullable{System.Int32},System.Int64,System.String,Abp.Domain.Entities.EntityIdentifier)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToEntityId">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.EntityId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToEntityTypeAssemblyQualifiedName">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.EntityTypeAssemblyQualifiedName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToEntityTypeName">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.EntityTypeName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToNotificationName">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.NotificationName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToTenantId">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.TenantId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.AttachBackingFieldToUserId">
            <summary>Attaches delegates to emulate StubNotificationSubscriptionInfo.UserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityId">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_EntityId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityIdGet">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_EntityId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityIdSetString">
            <summary>Sets the stub of NotificationSubscriptionInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityTypeAssemblyQualifiedName">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the stub of NotificationSubscriptionInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityTypeName">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_EntityTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityTypeNameGet">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_EntityTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EntityTypeNameSetString">
            <summary>Sets the stub of NotificationSubscriptionInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.IdSetGuid">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationSubscriptionInfo</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.NotificationName">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_NotificationName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.NotificationNameGet">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_NotificationName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.NotificationNameSetString">
            <summary>Sets the stub of NotificationSubscriptionInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.TenantId">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.TenantIdGet">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the stub of NotificationSubscriptionInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.UserId">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_UserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.UserIdGet">
            <summary>Sets the stub of NotificationSubscriptionInfo.get_UserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubNotificationSubscriptionInfo.UserIdSetInt64">
            <summary>Sets the stub of NotificationSubscriptionInfo.set_UserId(Int64 value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNotificationSubscriptionManager">
            <summary>Stub type of Abp.Notifications.NotificationSubscriptionManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionManager.#ctor(Abp.Notifications.INotificationStore,Abp.Notifications.INotificationDefinitionManager,Abp.IGuidGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNotificationSubscriptionManager.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationSubscriptionManager</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNotificationSubscriptionManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNullNotificationStore">
            <summary>Stub type of Abp.Notifications.NullNotificationStore</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNullNotificationStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNullNotificationStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNullNotificationStore.InitializeStub">
            <summary>Initializes a new instance of type StubNullNotificationStore</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNullNotificationStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNullNotificationStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubNullRealTimeNotifier">
            <summary>Stub type of Abp.Notifications.NullRealTimeNotifier</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNullRealTimeNotifier.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNullRealTimeNotifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubNullRealTimeNotifier.InitializeStub">
            <summary>Initializes a new instance of type StubNullRealTimeNotifier</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNullRealTimeNotifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubNullRealTimeNotifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubTenantNotification">
            <summary>Stub type of Abp.Notifications.TenantNotification</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotification.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotification.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotification.InitializeStub">
            <summary>Initializes a new instance of type StubTenantNotification</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotification.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotification.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubTenantNotificationInfo">
            <summary>Stub type of Abp.Notifications.TenantNotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.#ctor(System.Guid,System.Nullable{System.Int32},Abp.Notifications.NotificationInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToCreatorUserId">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.CreatorUserId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToData">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.Data as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToDataTypeName">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.DataTypeName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToEntityId">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.EntityId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToEntityTypeAssemblyQualifiedName">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.EntityTypeAssemblyQualifiedName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToEntityTypeName">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.EntityTypeName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToNotificationName">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.NotificationName as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToSeverity">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.Severity as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.AttachBackingFieldToTenantId">
            <summary>Attaches delegates to emulate StubTenantNotificationInfo.TenantId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.CreationTime">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.CreationTimeGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.CreationTimeSetDateTime">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.CreatorUserId">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.CreatorUserIdGet">
            <summary>Sets the stub of CreationAuditedEntity`1.get_CreatorUserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.CreatorUserIdSetNullableOfInt64">
            <summary>Sets the stub of CreationAuditedEntity`1.set_CreatorUserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.Data">
            <summary>Sets the stub of TenantNotificationInfo.get_Data()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.DataGet">
            <summary>Sets the stub of TenantNotificationInfo.get_Data()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.DataSetString">
            <summary>Sets the stub of TenantNotificationInfo.set_Data(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.DataTypeName">
            <summary>Sets the stub of TenantNotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.DataTypeNameGet">
            <summary>Sets the stub of TenantNotificationInfo.get_DataTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.DataTypeNameSetString">
            <summary>Sets the stub of TenantNotificationInfo.set_DataTypeName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityId">
            <summary>Sets the stub of TenantNotificationInfo.get_EntityId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityIdGet">
            <summary>Sets the stub of TenantNotificationInfo.get_EntityId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityIdSetString">
            <summary>Sets the stub of TenantNotificationInfo.set_EntityId(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityTypeAssemblyQualifiedName">
            <summary>Sets the stub of TenantNotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityTypeAssemblyQualifiedNameGet">
            <summary>Sets the stub of TenantNotificationInfo.get_EntityTypeAssemblyQualifiedName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityTypeAssemblyQualifiedNameSetString">
            <summary>Sets the stub of TenantNotificationInfo.set_EntityTypeAssemblyQualifiedName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityTypeName">
            <summary>Sets the stub of TenantNotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityTypeNameGet">
            <summary>Sets the stub of TenantNotificationInfo.get_EntityTypeName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.EntityTypeNameSetString">
            <summary>Sets the stub of TenantNotificationInfo.set_EntityTypeName(String value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.IdSetGuid">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.InitializeStub">
            <summary>Initializes a new instance of type StubTenantNotificationInfo</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.NotificationName">
            <summary>Sets the stub of TenantNotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.NotificationNameGet">
            <summary>Sets the stub of TenantNotificationInfo.get_NotificationName()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.NotificationNameSetString">
            <summary>Sets the stub of TenantNotificationInfo.set_NotificationName(String value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.Severity">
            <summary>Sets the stub of TenantNotificationInfo.get_Severity()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.SeverityGet">
            <summary>Sets the stub of TenantNotificationInfo.get_Severity()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.SeveritySetNotificationSeverity">
            <summary>Sets the stub of TenantNotificationInfo.set_Severity(NotificationSeverity value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubTenantNotificationInfo.TenantId">
            <summary>Sets the stub of TenantNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.TenantIdGet">
            <summary>Sets the stub of TenantNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the stub of TenantNotificationInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubTenantNotificationInfo.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubTenantNotificationInfo.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubUserNotification">
            <summary>Stub type of Abp.Notifications.UserNotification</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotification.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotification.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotification.InitializeStub">
            <summary>Initializes a new instance of type StubUserNotification</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotification.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotification.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubUserNotificationInfo">
            <summary>Stub type of Abp.Notifications.UserNotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.#ctor(System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.AttachBackingFieldToCreationTime">
            <summary>Attaches delegates to emulate StubUserNotificationInfo.CreationTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubUserNotificationInfo.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.AttachBackingFieldToState">
            <summary>Attaches delegates to emulate StubUserNotificationInfo.State as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.AttachBackingFieldToTenantId">
            <summary>Attaches delegates to emulate StubUserNotificationInfo.TenantId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.AttachBackingFieldToTenantNotificationId">
            <summary>Attaches delegates to emulate StubUserNotificationInfo.TenantNotificationId as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.AttachBackingFieldToUserId">
            <summary>Attaches delegates to emulate StubUserNotificationInfo.UserId as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.CreationTime">
            <summary>Sets the stub of UserNotificationInfo.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.CreationTimeGet">
            <summary>Sets the stub of UserNotificationInfo.get_CreationTime()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.CreationTimeSetDateTime">
            <summary>Sets the stub of UserNotificationInfo.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.Equals(System.Object)">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.EqualsObject">
            <summary>Sets the stub of Entity`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.GetHashCode">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.GetHashCode01">
            <summary>Sets the stub of Entity`1.GetHashCode()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.Id">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.IdGet">
            <summary>Sets the stub of Entity`1.get_Id()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.IdSetGuid">
            <summary>Sets the stub of Entity`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.InitializeStub">
            <summary>Initializes a new instance of type StubUserNotificationInfo</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.IsTransient">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.IsTransient01">
            <summary>Sets the stub of Entity`1.IsTransient()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.State">
            <summary>Sets the stub of UserNotificationInfo.get_State()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.StateGet">
            <summary>Sets the stub of UserNotificationInfo.get_State()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.StateSetUserNotificationState">
            <summary>Sets the stub of UserNotificationInfo.set_State(UserNotificationState value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.TenantId">
            <summary>Sets the stub of UserNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.TenantIdGet">
            <summary>Sets the stub of UserNotificationInfo.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.TenantIdSetNullableOfInt32">
            <summary>Sets the stub of UserNotificationInfo.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.TenantNotificationId">
            <summary>Sets the stub of UserNotificationInfo.get_TenantNotificationId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.TenantNotificationIdGet">
            <summary>Sets the stub of UserNotificationInfo.get_TenantNotificationId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.TenantNotificationIdSetGuid">
            <summary>Sets the stub of UserNotificationInfo.set_TenantNotificationId(Guid value)</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfo.ToString">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.ToString01">
            <summary>Sets the stub of Entity`1.ToString()</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfo.UserId">
            <summary>Sets the stub of UserNotificationInfo.get_UserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.UserIdGet">
            <summary>Sets the stub of UserNotificationInfo.get_UserId()</summary>
        </member>
        <member name="F:Abp.Notifications.Fakes.StubUserNotificationInfo.UserIdSetInt64">
            <summary>Sets the stub of UserNotificationInfo.set_UserId(Int64 value)</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubUserNotificationInfoWithNotificationInfo">
            <summary>Stub type of Abp.Notifications.UserNotificationInfoWithNotificationInfo</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfoWithNotificationInfo.#ctor(Abp.Notifications.UserNotificationInfo,Abp.Notifications.TenantNotificationInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfoWithNotificationInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationInfoWithNotificationInfo.InitializeStub">
            <summary>Initializes a new instance of type StubUserNotificationInfoWithNotificationInfo</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfoWithNotificationInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationInfoWithNotificationInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Notifications.Fakes.StubUserNotificationManager">
            <summary>Stub type of Abp.Notifications.UserNotificationManager</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationManager.#ctor(Abp.Notifications.INotificationStore)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Notifications.Fakes.StubUserNotificationManager.InitializeStub">
            <summary>Initializes a new instance of type StubUserNotificationManager</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Notifications.Fakes.StubUserNotificationManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.ObjectMapping.Fakes.ShimNullObjectMapper">
            <summary>Shim type of Abp.ObjectMapping.NullObjectMapper</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.#ctor(Abp.ObjectMapping.NullObjectMapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.AllInstances.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.ObjectMapping.NullObjectMapper,System.Object,``0})">
            <summary>Sets the shim of NullObjectMapper.Map(Object source)</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.AllInstances.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.ObjectMapping.NullObjectMapper,``0,``1,``1})">
            <summary>Sets the shim of NullObjectMapper.Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.Bind(Abp.ObjectMapping.IObjectMapper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.Constructor">
            <summary>Sets the shim of NullObjectMapper.NullObjectMapper()</summary>
        </member>
        <member name="P:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.InstanceGet">
            <summary>Sets the shim of NullObjectMapper.get_Instance()</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of NullObjectMapper.Map(Object source)</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>Sets the shim of NullObjectMapper.Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="P:Abp.ObjectMapping.Fakes.ShimNullObjectMapper.StaticConstructor">
            <summary>Sets the shim of NullObjectMapper.NullObjectMapper()</summary>
        </member>
        <member name="T:Abp.ObjectMapping.Fakes.StubIObjectMapper">
            <summary>Stub type of Abp.ObjectMapping.IObjectMapper</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.StubIObjectMapper.#ctor">
            <summary>Initializes a new instance of type StubIObjectMapper</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.StubIObjectMapper.Abp#ObjectMapping#IObjectMapper#Map``1(System.Object)">
            <summary>Sets the stub of IObjectMapper.Map(Object source)</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.StubIObjectMapper.Abp#ObjectMapping#IObjectMapper#Map``2(``0,``1)">
            <summary>Sets the stub of IObjectMapper.Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.StubIObjectMapper.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets stubs of Map(Object source)</summary>
        </member>
        <member name="M:Abp.ObjectMapping.Fakes.StubIObjectMapper.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>Sets stubs of Map(!!0 source, !!1 destination)</summary>
        </member>
        <member name="T:Abp.Orm.Fakes.StubISecondaryOrmRegistrar">
            <summary>Stub type of Abp.Orm.ISecondaryOrmRegistrar</summary>
        </member>
        <member name="M:Abp.Orm.Fakes.StubISecondaryOrmRegistrar.#ctor">
            <summary>Initializes a new instance of type StubISecondaryOrmRegistrar</summary>
        </member>
        <member name="M:Abp.Orm.Fakes.StubISecondaryOrmRegistrar.Abp#Orm#ISecondaryOrmRegistrar#RegisterRepositories(Abp.Dependency.IIocManager,Abp.Domain.Repositories.AutoRepositoryTypesAttribute)">
            <summary>Sets the stub of ISecondaryOrmRegistrar.RegisterRepositories(IIocManager iocManager, AutoRepositoryTypesAttribute defaultRepositoryTypes)</summary>
        </member>
        <member name="P:Abp.Orm.Fakes.StubISecondaryOrmRegistrar.Abp#Orm#ISecondaryOrmRegistrar#OrmContextKey">
            <summary>Sets the stub of ISecondaryOrmRegistrar.get_OrmContextKey()</summary>
        </member>
        <member name="F:Abp.Orm.Fakes.StubISecondaryOrmRegistrar.OrmContextKeyGet">
            <summary>Sets the stub of ISecondaryOrmRegistrar.get_OrmContextKey()</summary>
        </member>
        <member name="F:Abp.Orm.Fakes.StubISecondaryOrmRegistrar.RegisterRepositoriesIIocManagerAutoRepositoryTypesAttribute">
            <summary>Sets the stub of ISecondaryOrmRegistrar.RegisterRepositories(IIocManager iocManager, AutoRepositoryTypesAttribute defaultRepositoryTypes)</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimAbpPlugInManager">
            <summary>Shim type of Abp.PlugIns.AbpPlugInManager</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAbpPlugInManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAbpPlugInManager.#ctor(Abp.PlugIns.AbpPlugInManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimAbpPlugInManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAbpPlugInManager.AllInstances.PlugInSourcesGet">
            <summary>Sets the shim of AbpPlugInManager.get_PlugInSources()</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAbpPlugInManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAbpPlugInManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAbpPlugInManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAbpPlugInManager.Bind(Abp.PlugIns.IAbpPlugInManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAbpPlugInManager.Constructor">
            <summary>Sets the shim of AbpPlugInManager.AbpPlugInManager()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAbpPlugInManager.PlugInSourcesGet">
            <summary>Sets the shim of AbpPlugInManager.get_PlugInSources()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAbpPlugInManager.RegisterToAssemblyResolvePlugInSourceList">
            <summary>Sets the shim of AbpPlugInManager.RegisterToAssemblyResolve(PlugInSourceList plugInSources)</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAbpPlugInManager.StaticConstructor">
            <summary>Sets the shim of AbpPlugInManager.AbpPlugInManager()</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource">
            <summary>Shim type of Abp.PlugIns.AssemblyFileListPlugInSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.#ctor(Abp.PlugIns.AssemblyFileListPlugInSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.AllInstances.FilePathsGet">
            <summary>Sets the shim of AssemblyFileListPlugInSource.get_FilePaths()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.AllInstances.GetAssemblies">
            <summary>Sets the shim of AssemblyFileListPlugInSource.GetAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.AllInstances.GetModules">
            <summary>Sets the shim of AssemblyFileListPlugInSource.GetModules()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.AllInstances.LoadAssemblies">
            <summary>Sets the shim of AssemblyFileListPlugInSource.LoadAssemblies()</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.Bind(Abp.PlugIns.IPlugInSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.ConstructorStringArray">
            <summary>Sets the shim of AssemblyFileListPlugInSource.AssemblyFileListPlugInSource(String[] filePaths)</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.FilePathsGet">
            <summary>Sets the shim of AssemblyFileListPlugInSource.get_FilePaths()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.GetAssemblies">
            <summary>Sets the shim of AssemblyFileListPlugInSource.GetAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.GetModules">
            <summary>Sets the shim of AssemblyFileListPlugInSource.GetModules()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimAssemblyFileListPlugInSource.LoadAssemblies">
            <summary>Sets the shim of AssemblyFileListPlugInSource.LoadAssemblies()</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimFolderPlugInSource">
            <summary>Shim type of Abp.PlugIns.FolderPlugInSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimFolderPlugInSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimFolderPlugInSource.#ctor(Abp.PlugIns.FolderPlugInSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimFolderPlugInSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.AllInstances.FolderGet">
            <summary>Sets the shim of FolderPlugInSource.get_Folder()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.AllInstances.GetAssemblies">
            <summary>Sets the shim of FolderPlugInSource.GetAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.AllInstances.GetModules">
            <summary>Sets the shim of FolderPlugInSource.GetModules()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.AllInstances.LoadAssemblies">
            <summary>Sets the shim of FolderPlugInSource.LoadAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.AllInstances.SearchOptionGet">
            <summary>Sets the shim of FolderPlugInSource.get_SearchOption()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.AllInstances.SearchOptionSetSearchOption">
            <summary>Sets the shim of FolderPlugInSource.set_SearchOption(SearchOption value)</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimFolderPlugInSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimFolderPlugInSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimFolderPlugInSource.Bind(Abp.PlugIns.IPlugInSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.ConstructorStringSearchOption">
            <summary>Sets the shim of FolderPlugInSource.FolderPlugInSource(String folder, SearchOption searchOption)</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.FolderGet">
            <summary>Sets the shim of FolderPlugInSource.get_Folder()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.GetAssemblies">
            <summary>Sets the shim of FolderPlugInSource.GetAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.GetModules">
            <summary>Sets the shim of FolderPlugInSource.GetModules()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.LoadAssemblies">
            <summary>Sets the shim of FolderPlugInSource.LoadAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.SearchOptionGet">
            <summary>Sets the shim of FolderPlugInSource.get_SearchOption()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimFolderPlugInSource.SearchOptionSetSearchOption">
            <summary>Sets the shim of FolderPlugInSource.set_SearchOption(SearchOption value)</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimPlugInSourceExtensions">
            <summary>Shim type of Abp.PlugIns.PlugInSourceExtensions</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceExtensions.GetModulesWithAllDependenciesIPlugInSource">
            <summary>Sets the shim of PlugInSourceExtensions.GetModulesWithAllDependencies(IPlugInSource plugInSource)</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimPlugInSourceList">
            <summary>Shim type of Abp.PlugIns.PlugInSourceList</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.#ctor(Abp.PlugIns.PlugInSourceList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimPlugInSourceList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceList.AllInstances.GetAllAssemblies">
            <summary>Sets the shim of PlugInSourceList.GetAllAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceList.AllInstances.GetAllModules">
            <summary>Sets the shim of PlugInSourceList.GetAllModules()</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.Generic.ICollection{Abp.PlugIns.IPlugInSource})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.Generic.IEnumerable{Abp.PlugIns.IPlugInSource})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.Generic.IList{Abp.PlugIns.IPlugInSource})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.Generic.IReadOnlyCollection{Abp.PlugIns.IPlugInSource})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceList.Bind(System.Collections.Generic.IReadOnlyList{Abp.PlugIns.IPlugInSource})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceList.Constructor">
            <summary>Sets the shim of PlugInSourceList.PlugInSourceList()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceList.GetAllAssemblies">
            <summary>Sets the shim of PlugInSourceList.GetAllAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceList.GetAllModules">
            <summary>Sets the shim of PlugInSourceList.GetAllModules()</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimPlugInSourceListExtensions">
            <summary>Shim type of Abp.PlugIns.PlugInSourceListExtensions</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceListExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceListExtensions.AddFolderPlugInSourceListStringSearchOption">
            <summary>Sets the shim of PlugInSourceListExtensions.AddFolder(PlugInSourceList list, String folder, SearchOption searchOption)</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceListExtensions.AddTypeListPlugInSourceListTypeArray">
            <summary>Sets the shim of PlugInSourceListExtensions.AddTypeList(PlugInSourceList list, Type[] moduleTypes)</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceListExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInSourceListExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInSourceListExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimPlugInTypeListSource">
            <summary>Shim type of Abp.PlugIns.PlugInTypeListSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.#ctor(Abp.PlugIns.PlugInTypeListSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.AllInstances.GetAssemblies">
            <summary>Sets the shim of PlugInTypeListSource.GetAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.AllInstances.GetModules">
            <summary>Sets the shim of PlugInTypeListSource.GetModules()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.AllInstances.LoadAssemblies">
            <summary>Sets the shim of PlugInTypeListSource.LoadAssemblies()</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.Bind(Abp.PlugIns.IPlugInSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.ConstructorTypeArray">
            <summary>Sets the shim of PlugInTypeListSource.PlugInTypeListSource(Type[] moduleTypes)</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.GetAssemblies">
            <summary>Sets the shim of PlugInTypeListSource.GetAssemblies()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.GetModules">
            <summary>Sets the shim of PlugInTypeListSource.GetModules()</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.ShimPlugInTypeListSource.LoadAssemblies">
            <summary>Sets the shim of PlugInTypeListSource.LoadAssemblies()</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.StubAbpPlugInManager">
            <summary>Stub type of Abp.PlugIns.AbpPlugInManager</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubAbpPlugInManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubAbpPlugInManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubAbpPlugInManager.InitializeStub">
            <summary>Initializes a new instance of type StubAbpPlugInManager</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubAbpPlugInManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubAbpPlugInManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.StubAssemblyFileListPlugInSource">
            <summary>Stub type of Abp.PlugIns.AssemblyFileListPlugInSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubAssemblyFileListPlugInSource.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubAssemblyFileListPlugInSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubAssemblyFileListPlugInSource.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyFileListPlugInSource</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubAssemblyFileListPlugInSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubAssemblyFileListPlugInSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.StubFolderPlugInSource">
            <summary>Stub type of Abp.PlugIns.FolderPlugInSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubFolderPlugInSource.#ctor(System.String,System.IO.SearchOption)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubFolderPlugInSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubFolderPlugInSource.InitializeStub">
            <summary>Initializes a new instance of type StubFolderPlugInSource</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubFolderPlugInSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubFolderPlugInSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.StubIAbpPlugInManager">
            <summary>Stub type of Abp.PlugIns.IAbpPlugInManager</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubIAbpPlugInManager.#ctor">
            <summary>Initializes a new instance of type StubIAbpPlugInManager</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubIAbpPlugInManager.Abp#PlugIns#IAbpPlugInManager#PlugInSources">
            <summary>Sets the stub of IAbpPlugInManager.get_PlugInSources()</summary>
        </member>
        <member name="F:Abp.PlugIns.Fakes.StubIAbpPlugInManager.PlugInSourcesGet">
            <summary>Sets the stub of IAbpPlugInManager.get_PlugInSources()</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.StubIPlugInSource">
            <summary>Stub type of Abp.PlugIns.IPlugInSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubIPlugInSource.#ctor">
            <summary>Initializes a new instance of type StubIPlugInSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubIPlugInSource.Abp#PlugIns#IPlugInSource#GetAssemblies">
            <summary>Sets the stub of IPlugInSource.GetAssemblies()</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubIPlugInSource.Abp#PlugIns#IPlugInSource#GetModules">
            <summary>Sets the stub of IPlugInSource.GetModules()</summary>
        </member>
        <member name="F:Abp.PlugIns.Fakes.StubIPlugInSource.GetAssemblies">
            <summary>Sets the stub of IPlugInSource.GetAssemblies()</summary>
        </member>
        <member name="F:Abp.PlugIns.Fakes.StubIPlugInSource.GetModules">
            <summary>Sets the stub of IPlugInSource.GetModules()</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.StubPlugInSourceList">
            <summary>Stub type of Abp.PlugIns.PlugInSourceList</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubPlugInSourceList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubPlugInSourceList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubPlugInSourceList.InitializeStub">
            <summary>Initializes a new instance of type StubPlugInSourceList</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubPlugInSourceList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubPlugInSourceList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.PlugIns.Fakes.StubPlugInTypeListSource">
            <summary>Stub type of Abp.PlugIns.PlugInTypeListSource</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubPlugInTypeListSource.#ctor(System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubPlugInTypeListSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.PlugIns.Fakes.StubPlugInTypeListSource.InitializeStub">
            <summary>Initializes a new instance of type StubPlugInTypeListSource</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubPlugInTypeListSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.PlugIns.Fakes.StubPlugInTypeListSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClient">
            <summary>Shim type of Abp.RealTime.OnlineClient</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClient.#ctor(Abp.RealTime.OnlineClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.ConnectTimeGet">
            <summary>Sets the shim of OnlineClient.get_ConnectTime()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.ConnectTimeSetDateTime">
            <summary>Sets the shim of OnlineClient.set_ConnectTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.ConnectionIdGet">
            <summary>Sets the shim of OnlineClient.get_ConnectionId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.ConnectionIdSetString">
            <summary>Sets the shim of OnlineClient.set_ConnectionId(String value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.IpAddressGet">
            <summary>Sets the shim of OnlineClient.get_IpAddress()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.IpAddressSetString">
            <summary>Sets the shim of OnlineClient.set_IpAddress(String value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.ItemGetString">
            <summary>Sets the shim of OnlineClient.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of OnlineClient.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.PropertiesGet">
            <summary>Sets the shim of OnlineClient.get_Properties()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.PropertiesSetDictionaryOfStringObject">
            <summary>Sets the shim of OnlineClient.set_Properties(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.TenantIdGet">
            <summary>Sets the shim of OnlineClient.get_TenantId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of OnlineClient.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.ToString01">
            <summary>Sets the shim of OnlineClient.ToString()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.UserIdGet">
            <summary>Sets the shim of OnlineClient.get_UserId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.AllInstances.UserIdSetNullableOfInt64">
            <summary>Sets the shim of OnlineClient.set_UserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClient.Bind(Abp.RealTime.IOnlineClient)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ConnectTimeGet">
            <summary>Sets the shim of OnlineClient.get_ConnectTime()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ConnectTimeSetDateTime">
            <summary>Sets the shim of OnlineClient.set_ConnectTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ConnectionIdGet">
            <summary>Sets the shim of OnlineClient.get_ConnectionId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ConnectionIdSetString">
            <summary>Sets the shim of OnlineClient.set_ConnectionId(String value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.Constructor">
            <summary>Sets the shim of OnlineClient.OnlineClient()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ConstructorStringStringNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of OnlineClient.OnlineClient(String connectionId, String ipAddress, Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.IpAddressGet">
            <summary>Sets the shim of OnlineClient.get_IpAddress()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.IpAddressSetString">
            <summary>Sets the shim of OnlineClient.set_IpAddress(String value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ItemGetString">
            <summary>Sets the shim of OnlineClient.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ItemSetStringObject">
            <summary>Sets the shim of OnlineClient.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.PropertiesGet">
            <summary>Sets the shim of OnlineClient.get_Properties()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.PropertiesSetDictionaryOfStringObject">
            <summary>Sets the shim of OnlineClient.set_Properties(Dictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.TenantIdGet">
            <summary>Sets the shim of OnlineClient.get_TenantId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.TenantIdSetNullableOfInt32">
            <summary>Sets the shim of OnlineClient.set_TenantId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.ToString">
            <summary>Sets the shim of OnlineClient.ToString()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.UserIdGet">
            <summary>Sets the shim of OnlineClient.get_UserId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClient.UserIdSetNullableOfInt64">
            <summary>Sets the shim of OnlineClient.set_UserId(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClientEventArgs">
            <summary>Shim type of Abp.RealTime.OnlineClientEventArgs</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.#ctor(Abp.RealTime.OnlineClientEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.AllInstances.ClientGet">
            <summary>Sets the shim of OnlineClientEventArgs.get_Client()</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.ClientGet">
            <summary>Sets the shim of OnlineClientEventArgs.get_Client()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientEventArgs.ConstructorIOnlineClient">
            <summary>Sets the shim of OnlineClientEventArgs.OnlineClientEventArgs(IOnlineClient client)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClientExtensions">
            <summary>Shim type of Abp.RealTime.OnlineClientExtensions</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientExtensions.ToUserIdentifierOrNullIOnlineClient">
            <summary>Sets the shim of OnlineClientExtensions.ToUserIdentifierOrNull(IOnlineClient onlineClient)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClientManager">
            <summary>Shim type of Abp.RealTime.OnlineClientManager</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManager.#ctor(Abp.RealTime.OnlineClientManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AddIOnlineClient">
            <summary>Sets the shim of OnlineClientManager.Add(IOnlineClient client)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.AddIOnlineClient">
            <summary>Sets the shim of OnlineClientManager.Add(IOnlineClient client)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.ClientConnectedAddEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_ClientConnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.ClientConnectedRemoveEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_ClientConnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.ClientDisconnectedAddEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_ClientDisconnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.ClientDisconnectedRemoveEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_ClientDisconnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.ClientsGet">
            <summary>Sets the shim of OnlineClientManager.get_Clients()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.GetAllByUserIdIUserIdentifier">
            <summary>Sets the shim of OnlineClientManager.GetAllByUserId(IUserIdentifier user)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.GetAllClients">
            <summary>Sets the shim of OnlineClientManager.GetAllClients()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.GetByConnectionIdOrNullString">
            <summary>Sets the shim of OnlineClientManager.GetByConnectionIdOrNull(String connectionId)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.RemoveString">
            <summary>Sets the shim of OnlineClientManager.Remove(String connectionId)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.UserConnectedAddEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_UserConnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.UserConnectedRemoveEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_UserConnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.UserDisconnectedAddEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_UserDisconnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.AllInstances.UserDisconnectedRemoveEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_UserDisconnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManager.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManager.Bind(Abp.RealTime.IOnlineClientManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.ClientConnectedAddEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_ClientConnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.ClientConnectedRemoveEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_ClientConnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.ClientDisconnectedAddEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_ClientDisconnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.ClientDisconnectedRemoveEventHandlerOfOnlineClientEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_ClientDisconnected(EventHandler`1&lt;OnlineClientEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.ClientsGet">
            <summary>Sets the shim of OnlineClientManager.get_Clients()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.Constructor">
            <summary>Sets the shim of OnlineClientManager.OnlineClientManager()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.GetAllByUserIdIUserIdentifier">
            <summary>Sets the shim of OnlineClientManager.GetAllByUserId(IUserIdentifier user)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.GetAllClients">
            <summary>Sets the shim of OnlineClientManager.GetAllClients()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.GetByConnectionIdOrNullString">
            <summary>Sets the shim of OnlineClientManager.GetByConnectionIdOrNull(String connectionId)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.RemoveString">
            <summary>Sets the shim of OnlineClientManager.Remove(String connectionId)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.UserConnectedAddEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_UserConnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.UserConnectedRemoveEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_UserConnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.UserDisconnectedAddEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.add_UserDisconnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManager.UserDisconnectedRemoveEventHandlerOfOnlineUserEventArgs">
            <summary>Sets the shim of OnlineClientManager.remove_UserDisconnected(EventHandler`1&lt;OnlineUserEventArgs&gt; value)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineClientManagerExtensions">
            <summary>Shim type of Abp.RealTime.OnlineClientManagerExtensions</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineClientManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManagerExtensions.IsOnlineIOnlineClientManagerUserIdentifier">
            <summary>Sets the shim of OnlineClientManagerExtensions.IsOnline(IOnlineClientManager onlineClientManager, UserIdentifier user)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineClientManagerExtensions.RemoveIOnlineClientManagerIOnlineClient">
            <summary>Sets the shim of OnlineClientManagerExtensions.Remove(IOnlineClientManager onlineClientManager, IOnlineClient client)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineUserEventArgs">
            <summary>Shim type of Abp.RealTime.OnlineUserEventArgs</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.#ctor(Abp.RealTime.OnlineUserEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.AllInstances.UserGet">
            <summary>Sets the shim of OnlineUserEventArgs.get_User()</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.ConstructorUserIdentifierIOnlineClient">
            <summary>Sets the shim of OnlineUserEventArgs.OnlineUserEventArgs(UserIdentifier user, IOnlineClient client)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.ShimOnlineUserEventArgs.UserGet">
            <summary>Sets the shim of OnlineUserEventArgs.get_User()</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.StubIOnlineClient">
            <summary>Stub type of Abp.RealTime.IOnlineClient</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubIOnlineClient.#ctor">
            <summary>Initializes a new instance of type StubIOnlineClient</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubIOnlineClient.Abp#RealTime#IOnlineClient#ConnectTime">
            <summary>Sets the stub of IOnlineClient.get_ConnectTime()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.ConnectTimeGet">
            <summary>Sets the stub of IOnlineClient.get_ConnectTime()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubIOnlineClient.Abp#RealTime#IOnlineClient#ConnectionId">
            <summary>Sets the stub of IOnlineClient.get_ConnectionId()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.ConnectionIdGet">
            <summary>Sets the stub of IOnlineClient.get_ConnectionId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubIOnlineClient.Abp#RealTime#IOnlineClient#IpAddress">
            <summary>Sets the stub of IOnlineClient.get_IpAddress()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.IpAddressGet">
            <summary>Sets the stub of IOnlineClient.get_IpAddress()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubIOnlineClient.Abp#RealTime#IOnlineClient#Item(System.String)">
            <summary>Sets the stub of IOnlineClient.get_Item(String key)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.ItemGetString">
            <summary>Sets the stub of IOnlineClient.get_Item(String key)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.ItemSetStringObject">
            <summary>Sets the stub of IOnlineClient.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubIOnlineClient.Abp#RealTime#IOnlineClient#Properties">
            <summary>Sets the stub of IOnlineClient.get_Properties()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.PropertiesGet">
            <summary>Sets the stub of IOnlineClient.get_Properties()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubIOnlineClient.Abp#RealTime#IOnlineClient#TenantId">
            <summary>Sets the stub of IOnlineClient.get_TenantId()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.TenantIdGet">
            <summary>Sets the stub of IOnlineClient.get_TenantId()</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubIOnlineClient.Abp#RealTime#IOnlineClient#UserId">
            <summary>Sets the stub of IOnlineClient.get_UserId()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClient.UserIdGet">
            <summary>Sets the stub of IOnlineClient.get_UserId()</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.StubIOnlineClientManager">
            <summary>Stub type of Abp.RealTime.IOnlineClientManager</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubIOnlineClientManager.#ctor">
            <summary>Initializes a new instance of type StubIOnlineClientManager</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubIOnlineClientManager.Abp#RealTime#IOnlineClientManager#Add(Abp.RealTime.IOnlineClient)">
            <summary>Sets the stub of IOnlineClientManager.Add(IOnlineClient client)</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubIOnlineClientManager.Abp#RealTime#IOnlineClientManager#GetAllByUserId(Abp.IUserIdentifier)">
            <summary>Sets the stub of IOnlineClientManager.GetAllByUserId(IUserIdentifier user)</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubIOnlineClientManager.Abp#RealTime#IOnlineClientManager#GetAllClients">
            <summary>Sets the stub of IOnlineClientManager.GetAllClients()</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubIOnlineClientManager.Abp#RealTime#IOnlineClientManager#GetByConnectionIdOrNull(System.String)">
            <summary>Sets the stub of IOnlineClientManager.GetByConnectionIdOrNull(String connectionId)</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubIOnlineClientManager.Abp#RealTime#IOnlineClientManager#Remove(System.String)">
            <summary>Sets the stub of IOnlineClientManager.Remove(String connectionId)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClientManager.AddIOnlineClient">
            <summary>Sets the stub of IOnlineClientManager.Add(IOnlineClient client)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClientManager.GetAllByUserIdIUserIdentifier">
            <summary>Sets the stub of IOnlineClientManager.GetAllByUserId(IUserIdentifier user)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClientManager.GetAllClients">
            <summary>Sets the stub of IOnlineClientManager.GetAllClients()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClientManager.GetByConnectionIdOrNullString">
            <summary>Sets the stub of IOnlineClientManager.GetByConnectionIdOrNull(String connectionId)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubIOnlineClientManager.RemoveString">
            <summary>Sets the stub of IOnlineClientManager.Remove(String connectionId)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.StubOnlineClient">
            <summary>Stub type of Abp.RealTime.OnlineClient</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClient.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClient.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClient.InitializeStub">
            <summary>Initializes a new instance of type StubOnlineClient</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClient.ToString">
            <summary>Sets the stub of OnlineClient.ToString()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubOnlineClient.ToString01">
            <summary>Sets the stub of OnlineClient.ToString()</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.StubOnlineClientEventArgs">
            <summary>Stub type of Abp.RealTime.OnlineClientEventArgs</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientEventArgs.#ctor(Abp.RealTime.IOnlineClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClientEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubOnlineClientEventArgs</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClientEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClientEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.StubOnlineClientManager">
            <summary>Stub type of Abp.RealTime.OnlineClientManager</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientManager.Add(Abp.RealTime.IOnlineClient)">
            <summary>Sets the stub of OnlineClientManager.Add(IOnlineClient client)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubOnlineClientManager.AddIOnlineClient">
            <summary>Sets the stub of OnlineClientManager.Add(IOnlineClient client)</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClientManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientManager.GetAllByUserId(Abp.IUserIdentifier)">
            <summary>Sets the stub of OnlineClientManager.GetAllByUserId(IUserIdentifier user)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubOnlineClientManager.GetAllByUserIdIUserIdentifier">
            <summary>Sets the stub of OnlineClientManager.GetAllByUserId(IUserIdentifier user)</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientManager.GetAllClients">
            <summary>Sets the stub of OnlineClientManager.GetAllClients()</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubOnlineClientManager.GetAllClients01">
            <summary>Sets the stub of OnlineClientManager.GetAllClients()</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientManager.GetByConnectionIdOrNull(System.String)">
            <summary>Sets the stub of OnlineClientManager.GetByConnectionIdOrNull(String connectionId)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubOnlineClientManager.GetByConnectionIdOrNullString">
            <summary>Sets the stub of OnlineClientManager.GetByConnectionIdOrNull(String connectionId)</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientManager.InitializeStub">
            <summary>Initializes a new instance of type StubOnlineClientManager</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClientManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineClientManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineClientManager.Remove(System.String)">
            <summary>Sets the stub of OnlineClientManager.Remove(String connectionId)</summary>
        </member>
        <member name="F:Abp.RealTime.Fakes.StubOnlineClientManager.RemoveString">
            <summary>Sets the stub of OnlineClientManager.Remove(String connectionId)</summary>
        </member>
        <member name="T:Abp.RealTime.Fakes.StubOnlineUserEventArgs">
            <summary>Stub type of Abp.RealTime.OnlineUserEventArgs</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineUserEventArgs.#ctor(Abp.UserIdentifier,Abp.RealTime.IOnlineClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineUserEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.RealTime.Fakes.StubOnlineUserEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubOnlineUserEventArgs</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineUserEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.RealTime.Fakes.StubOnlineUserEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Reflection.Extensions.Fakes.ShimAssemblyExtensions">
            <summary>Shim type of Abp.Reflection.Extensions.AssemblyExtensions</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimAssemblyExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimAssemblyExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimAssemblyExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Extensions.Fakes.ShimAssemblyExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Extensions.Fakes.ShimAssemblyExtensions.GetDirectoryPathOrNullAssembly">
            <summary>Sets the shim of AssemblyExtensions.GetDirectoryPathOrNull(Assembly assembly)</summary>
        </member>
        <member name="T:Abp.Reflection.Extensions.Fakes.ShimMemberInfoExtensions">
            <summary>Shim type of Abp.Reflection.Extensions.MemberInfoExtensions</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimMemberInfoExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimMemberInfoExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimMemberInfoExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Extensions.Fakes.ShimMemberInfoExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimMemberInfoExtensions.GetSingleAttributeOfTypeOrBaseTypesOrNullOf1TypeBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Boolean,``0})">
            <summary>Sets the shim of MemberInfoExtensions.GetSingleAttributeOfTypeOrBaseTypesOrNull(Type type, Boolean inherit)</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimMemberInfoExtensions.GetSingleAttributeOrNullOf1MemberInfoBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.MemberInfo,System.Boolean,``0})">
            <summary>Sets the shim of MemberInfoExtensions.GetSingleAttributeOrNull(MemberInfo memberInfo, Boolean inherit)</summary>
        </member>
        <member name="T:Abp.Reflection.Extensions.Fakes.ShimTypeExtensions">
            <summary>Shim type of Abp.Reflection.Extensions.TypeExtensions</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimTypeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimTypeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Extensions.Fakes.ShimTypeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Extensions.Fakes.ShimTypeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Extensions.Fakes.ShimTypeExtensions.GetAssemblyType">
            <summary>Sets the shim of TypeExtensions.GetAssembly(Type type)</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.ShimAbpAssemblyFinder">
            <summary>Shim type of Abp.Reflection.AbpAssemblyFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.#ctor(Abp.Reflection.AbpAssemblyFinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.AllInstances.GetAllAssemblies">
            <summary>Sets the shim of AbpAssemblyFinder.GetAllAssemblies()</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.Bind(Abp.Reflection.IAssemblyFinder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.ConstructorIAbpModuleManager">
            <summary>Sets the shim of AbpAssemblyFinder.AbpAssemblyFinder(IAbpModuleManager moduleManager)</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimAbpAssemblyFinder.GetAllAssemblies">
            <summary>Sets the shim of AbpAssemblyFinder.GetAllAssemblies()</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.ShimProxyHelper">
            <summary>Shim type of Abp.Reflection.ProxyHelper</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimProxyHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimProxyHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimProxyHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimProxyHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimProxyHelper.UnProxyObject">
            <summary>Sets the shim of ProxyHelper.UnProxy(Object obj)</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.ShimTypeFinder">
            <summary>Shim type of Abp.Reflection.TypeFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimTypeFinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimTypeFinder.#ctor(Abp.Reflection.TypeFinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.ShimTypeFinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.AllInstances.CreateTypeList">
            <summary>Sets the shim of TypeFinder.CreateTypeList()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.AllInstances.FindAll">
            <summary>Sets the shim of TypeFinder.FindAll()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.AllInstances.FindFuncOfTypeBoolean">
            <summary>Sets the shim of TypeFinder.Find(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.AllInstances.GetAllTypes">
            <summary>Sets the shim of TypeFinder.GetAllTypes()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.AllInstances.LoggerGet">
            <summary>Sets the shim of TypeFinder.get_Logger()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of TypeFinder.set_Logger(ILogger value)</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimTypeFinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimTypeFinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.ShimTypeFinder.Bind(Abp.Reflection.ITypeFinder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.ConstructorIAssemblyFinder">
            <summary>Sets the shim of TypeFinder.TypeFinder(IAssemblyFinder assemblyFinder)</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.CreateTypeList">
            <summary>Sets the shim of TypeFinder.CreateTypeList()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.FindAll">
            <summary>Sets the shim of TypeFinder.FindAll()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.FindFuncOfTypeBoolean">
            <summary>Sets the shim of TypeFinder.Find(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.GetAllTypes">
            <summary>Sets the shim of TypeFinder.GetAllTypes()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.LoggerGet">
            <summary>Sets the shim of TypeFinder.get_Logger()</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.ShimTypeFinder.LoggerSetILogger">
            <summary>Sets the shim of TypeFinder.set_Logger(ILogger value)</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.StubAbpAssemblyFinder">
            <summary>Stub type of Abp.Reflection.AbpAssemblyFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubAbpAssemblyFinder.#ctor(Abp.Modules.IAbpModuleManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.StubAbpAssemblyFinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubAbpAssemblyFinder.InitializeStub">
            <summary>Initializes a new instance of type StubAbpAssemblyFinder</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.StubAbpAssemblyFinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.StubAbpAssemblyFinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.StubIAssemblyFinder">
            <summary>Stub type of Abp.Reflection.IAssemblyFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubIAssemblyFinder.#ctor">
            <summary>Initializes a new instance of type StubIAssemblyFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubIAssemblyFinder.Abp#Reflection#IAssemblyFinder#GetAllAssemblies">
            <summary>Sets the stub of IAssemblyFinder.GetAllAssemblies()</summary>
        </member>
        <member name="F:Abp.Reflection.Fakes.StubIAssemblyFinder.GetAllAssemblies">
            <summary>Sets the stub of IAssemblyFinder.GetAllAssemblies()</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.StubITypeFinder">
            <summary>Stub type of Abp.Reflection.ITypeFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubITypeFinder.#ctor">
            <summary>Initializes a new instance of type StubITypeFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubITypeFinder.Abp#Reflection#ITypeFinder#Find(System.Func{System.Type,System.Boolean})">
            <summary>Sets the stub of ITypeFinder.Find(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubITypeFinder.Abp#Reflection#ITypeFinder#FindAll">
            <summary>Sets the stub of ITypeFinder.FindAll()</summary>
        </member>
        <member name="F:Abp.Reflection.Fakes.StubITypeFinder.FindAll">
            <summary>Sets the stub of ITypeFinder.FindAll()</summary>
        </member>
        <member name="F:Abp.Reflection.Fakes.StubITypeFinder.FindFuncOfTypeBoolean">
            <summary>Sets the stub of ITypeFinder.Find(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="T:Abp.Reflection.Fakes.StubTypeFinder">
            <summary>Stub type of Abp.Reflection.TypeFinder</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubTypeFinder.#ctor(Abp.Reflection.IAssemblyFinder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.StubTypeFinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Reflection.Fakes.StubTypeFinder.InitializeStub">
            <summary>Initializes a new instance of type StubTypeFinder</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.StubTypeFinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Reflection.Fakes.StubTypeFinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem">
            <summary>Shim type of Abp.Resources.Embedded.EmbeddedResourceItem</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.#ctor(Abp.Resources.Embedded.EmbeddedResourceItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances.AssemblyGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_Assembly()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances.AssemblySetAssembly">
            <summary>Sets the shim of EmbeddedResourceItem.set_Assembly(Assembly value)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances.ContentGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_Content()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances.ContentSetByteArray">
            <summary>Sets the shim of EmbeddedResourceItem.set_Content(Byte[] value)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances.FileExtensionGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_FileExtension()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances.FileNameGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_FileName()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AllInstances.LastModifiedUtcGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_LastModifiedUtc()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AssemblyGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_Assembly()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.AssemblySetAssembly">
            <summary>Sets the shim of EmbeddedResourceItem.set_Assembly(Assembly value)</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.CalculateFileExtensionString">
            <summary>Sets the shim of EmbeddedResourceItem.CalculateFileExtension(String fileName)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.ConstructorStringByteArrayAssembly">
            <summary>Sets the shim of EmbeddedResourceItem.EmbeddedResourceItem(String fileName, Byte[] content, Assembly assembly)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.ContentGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_Content()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.ContentSetByteArray">
            <summary>Sets the shim of EmbeddedResourceItem.set_Content(Byte[] value)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.FileExtensionGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_FileExtension()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.FileNameGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_FileName()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceItem.LastModifiedUtcGet">
            <summary>Sets the shim of EmbeddedResourceItem.get_LastModifiedUtc()</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager">
            <summary>Shim type of Abp.Resources.Embedded.EmbeddedResourceManager</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.#ctor(Abp.Resources.Embedded.EmbeddedResourceManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.AllInstances.CreateResourcesDictionary">
            <summary>Sets the shim of EmbeddedResourceManager.CreateResourcesDictionary()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.AllInstances.GetResourceString">
            <summary>Sets the shim of EmbeddedResourceManager.GetResource(String fullPath)</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.Bind(Abp.Resources.Embedded.IEmbeddedResourceManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.ConstructorIEmbeddedResourcesConfiguration">
            <summary>Sets the shim of EmbeddedResourceManager.EmbeddedResourceManager(IEmbeddedResourcesConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.CreateResourcesDictionary">
            <summary>Sets the shim of EmbeddedResourceManager.CreateResourcesDictionary()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceManager.GetResourceString">
            <summary>Sets the shim of EmbeddedResourceManager.GetResource(String fullPath)</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcePathHelper">
            <summary>Shim type of Abp.Resources.Embedded.EmbeddedResourcePathHelper</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcePathHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcePathHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcePathHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcePathHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcePathHelper.NormalizeCharsString">
            <summary>Sets the shim of EmbeddedResourcePathHelper.NormalizeChars(String fileName)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcePathHelper.NormalizePathString">
            <summary>Sets the shim of EmbeddedResourcePathHelper.NormalizePath(String fullPath)</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet">
            <summary>Shim type of Abp.Resources.Embedded.EmbeddedResourceSet</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.#ctor(Abp.Resources.Embedded.EmbeddedResourceSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AddResourcesDictionaryOfStringEmbeddedResourceItem">
            <summary>Sets the shim of EmbeddedResourceSet.AddResources(Dictionary`2&lt;String,EmbeddedResourceItem&gt; resources)</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AllInstances.AddResourcesDictionaryOfStringEmbeddedResourceItem">
            <summary>Sets the shim of EmbeddedResourceSet.AddResources(Dictionary`2&lt;String,EmbeddedResourceItem&gt; resources)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AllInstances.AssemblyGet">
            <summary>Sets the shim of EmbeddedResourceSet.get_Assembly()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AllInstances.ConvertToRelativePathString">
            <summary>Sets the shim of EmbeddedResourceSet.ConvertToRelativePath(String resourceName)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AllInstances.ResourceNamespaceGet">
            <summary>Sets the shim of EmbeddedResourceSet.get_ResourceNamespace()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AllInstances.RootPathGet">
            <summary>Sets the shim of EmbeddedResourceSet.get_RootPath()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.AssemblyGet">
            <summary>Sets the shim of EmbeddedResourceSet.get_Assembly()</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.CalculateFileNameString">
            <summary>Sets the shim of EmbeddedResourceSet.CalculateFileName(String filePath)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.ConstructorStringAssemblyString">
            <summary>Sets the shim of EmbeddedResourceSet.EmbeddedResourceSet(String rootPath, Assembly assembly, String resourceNamespace)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.ConvertToRelativePathString">
            <summary>Sets the shim of EmbeddedResourceSet.ConvertToRelativePath(String resourceName)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.NormalizeFolderNameString">
            <summary>Sets the shim of EmbeddedResourceSet.NormalizeFolderName(String pathPart)</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.ResourceNamespaceGet">
            <summary>Sets the shim of EmbeddedResourceSet.get_ResourceNamespace()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourceSet.RootPathGet">
            <summary>Sets the shim of EmbeddedResourceSet.get_RootPath()</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration">
            <summary>Shim type of Abp.Resources.Embedded.EmbeddedResourcesConfiguration</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.#ctor(Abp.Resources.Embedded.EmbeddedResourcesConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.AllInstances.SourcesGet">
            <summary>Sets the shim of EmbeddedResourcesConfiguration.get_Sources()</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.Bind(Abp.Resources.Embedded.IEmbeddedResourcesConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.Constructor">
            <summary>Sets the shim of EmbeddedResourcesConfiguration.EmbeddedResourcesConfiguration()</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.ShimEmbeddedResourcesConfiguration.SourcesGet">
            <summary>Sets the shim of EmbeddedResourcesConfiguration.get_Sources()</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceManager">
            <summary>Stub type of Abp.Resources.Embedded.EmbeddedResourceManager</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceManager.#ctor(Abp.Resources.Embedded.IEmbeddedResourcesConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceManager.InitializeStub">
            <summary>Initializes a new instance of type StubEmbeddedResourceManager</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceSet">
            <summary>Stub type of Abp.Resources.Embedded.EmbeddedResourceSet</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceSet.#ctor(System.String,System.Reflection.Assembly,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceSet.InitializeStub">
            <summary>Initializes a new instance of type StubEmbeddedResourceSet</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourceSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.StubEmbeddedResourcesConfiguration">
            <summary>Stub type of Abp.Resources.Embedded.EmbeddedResourcesConfiguration</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubEmbeddedResourcesConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourcesConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubEmbeddedResourcesConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubEmbeddedResourcesConfiguration</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourcesConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubEmbeddedResourcesConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourceManager">
            <summary>Stub type of Abp.Resources.Embedded.IEmbeddedResourceManager</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourceManager.#ctor">
            <summary>Initializes a new instance of type StubIEmbeddedResourceManager</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourceManager.Abp#Resources#Embedded#IEmbeddedResourceManager#GetResource(System.String)">
            <summary>Sets the stub of IEmbeddedResourceManager.GetResource(String fullResourcePath)</summary>
        </member>
        <member name="F:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourceManager.GetResourceString">
            <summary>Sets the stub of IEmbeddedResourceManager.GetResource(String fullResourcePath)</summary>
        </member>
        <member name="T:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourcesConfiguration">
            <summary>Stub type of Abp.Resources.Embedded.IEmbeddedResourcesConfiguration</summary>
        </member>
        <member name="M:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourcesConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIEmbeddedResourcesConfiguration</summary>
        </member>
        <member name="P:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourcesConfiguration.Abp#Resources#Embedded#IEmbeddedResourcesConfiguration#Sources">
            <summary>Sets the stub of IEmbeddedResourcesConfiguration.get_Sources()</summary>
        </member>
        <member name="F:Abp.Resources.Embedded.Fakes.StubIEmbeddedResourcesConfiguration.SourcesGet">
            <summary>Sets the stub of IEmbeddedResourcesConfiguration.get_Sources()</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Configuration.Fakes.StubICacheConfigurator">
            <summary>Stub type of Abp.Runtime.Caching.Configuration.ICacheConfigurator</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Configuration.Fakes.StubICacheConfigurator.#ctor">
            <summary>Initializes a new instance of type StubICacheConfigurator</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Configuration.Fakes.StubICacheConfigurator.Abp#Runtime#Caching#Configuration#ICacheConfigurator#CacheName">
            <summary>Sets the stub of ICacheConfigurator.get_CacheName()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Configuration.Fakes.StubICacheConfigurator.CacheNameGet">
            <summary>Sets the stub of ICacheConfigurator.get_CacheName()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Configuration.Fakes.StubICacheConfigurator.Abp#Runtime#Caching#Configuration#ICacheConfigurator#InitAction">
            <summary>Sets the stub of ICacheConfigurator.get_InitAction()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Configuration.Fakes.StubICacheConfigurator.InitActionGet">
            <summary>Sets the stub of ICacheConfigurator.get_InitAction()</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration">
            <summary>Stub type of Abp.Runtime.Caching.Configuration.ICachingConfiguration</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.#ctor">
            <summary>Initializes a new instance of type StubICachingConfiguration</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.Abp#Runtime#Caching#Configuration#ICachingConfiguration#Configure(System.String,System.Action{Abp.Runtime.Caching.ICache})">
            <summary>Sets the stub of ICachingConfiguration.Configure(String cacheName, Action`1&lt;ICache&gt; initAction)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.Abp#Runtime#Caching#Configuration#ICachingConfiguration#ConfigureAll(System.Action{Abp.Runtime.Caching.ICache})">
            <summary>Sets the stub of ICachingConfiguration.ConfigureAll(Action`1&lt;ICache&gt; initAction)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.Abp#Runtime#Caching#Configuration#ICachingConfiguration#AbpConfiguration">
            <summary>Sets the stub of ICachingConfiguration.get_AbpConfiguration()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.AbpConfigurationGet">
            <summary>Sets the stub of ICachingConfiguration.get_AbpConfiguration()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.Abp#Runtime#Caching#Configuration#ICachingConfiguration#Configurators">
            <summary>Sets the stub of ICachingConfiguration.get_Configurators()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.ConfiguratorsGet">
            <summary>Sets the stub of ICachingConfiguration.get_Configurators()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.ConfigureAllActionOfICache">
            <summary>Sets the stub of ICachingConfiguration.ConfigureAll(Action`1&lt;ICache&gt; initAction)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Configuration.Fakes.StubICachingConfiguration.ConfigureStringActionOfICache">
            <summary>Sets the stub of ICachingConfiguration.Configure(String cacheName, Action`1&lt;ICache&gt; initAction)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimAbpCacheNames">
            <summary>Shim type of Abp.Runtime.Caching.AbpCacheNames</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimAbpCacheNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimAbpCacheNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimAbpCacheNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimAbpCacheNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimCacheBase">
            <summary>Shim type of Abp.Runtime.Caching.CacheBase</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheBase.#ctor(Abp.Runtime.Caching.CacheBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.ClearAsync">
            <summary>Sets the shim of CacheBase.ClearAsync()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.DefaultAbsoluteExpireTimeGet">
            <summary>Sets the shim of CacheBase.get_DefaultAbsoluteExpireTime()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.DefaultAbsoluteExpireTimeSetNullableOfTimeSpan">
            <summary>Sets the shim of CacheBase.set_DefaultAbsoluteExpireTime(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.DefaultSlidingExpireTimeGet">
            <summary>Sets the shim of CacheBase.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.DefaultSlidingExpireTimeSetTimeSpan">
            <summary>Sets the shim of CacheBase.set_DefaultSlidingExpireTime(TimeSpan value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.Dispose">
            <summary>Sets the shim of CacheBase.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.GetAsyncStringFuncOfStringTaskOfObject">
            <summary>Sets the shim of CacheBase.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.GetOrDefaultAsyncString">
            <summary>Sets the shim of CacheBase.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.GetStringFuncOfStringObject">
            <summary>Sets the shim of CacheBase.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.LoggerGet">
            <summary>Sets the shim of CacheBase.get_Logger()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of CacheBase.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.NameGet">
            <summary>Sets the shim of CacheBase.get_Name()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.RemoveAsyncString">
            <summary>Sets the shim of CacheBase.RemoveAsync(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.AllInstances.SetAsyncStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of CacheBase.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheBase.Bind(Abp.Runtime.Caching.ICache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.ClearAsync">
            <summary>Sets the shim of CacheBase.ClearAsync()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.ConstructorString">
            <summary>Sets the shim of CacheBase.CacheBase(String name)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.DefaultAbsoluteExpireTimeGet">
            <summary>Sets the shim of CacheBase.get_DefaultAbsoluteExpireTime()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.DefaultAbsoluteExpireTimeSetNullableOfTimeSpan">
            <summary>Sets the shim of CacheBase.set_DefaultAbsoluteExpireTime(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.DefaultSlidingExpireTimeGet">
            <summary>Sets the shim of CacheBase.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.DefaultSlidingExpireTimeSetTimeSpan">
            <summary>Sets the shim of CacheBase.set_DefaultSlidingExpireTime(TimeSpan value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.Dispose">
            <summary>Sets the shim of CacheBase.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.GetAsyncStringFuncOfStringTaskOfObject">
            <summary>Sets the shim of CacheBase.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.GetOrDefaultAsyncString">
            <summary>Sets the shim of CacheBase.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.GetStringFuncOfStringObject">
            <summary>Sets the shim of CacheBase.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.LoggerGet">
            <summary>Sets the shim of CacheBase.get_Logger()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.LoggerSetILogger">
            <summary>Sets the shim of CacheBase.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.NameGet">
            <summary>Sets the shim of CacheBase.get_Name()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.RemoveAsyncString">
            <summary>Sets the shim of CacheBase.RemoveAsync(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheBase.SetAsyncStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of CacheBase.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimCacheExtensions">
            <summary>Shim type of Abp.Runtime.Caching.CacheExtensions</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.AsTypedOf2ICache``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICache,Abp.Runtime.Caching.ITypedCache{``0,``1}})">
            <summary>Sets the shim of CacheExtensions.AsTyped(ICache cache)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetAsyncICacheStringFuncOfTaskOfObject">
            <summary>Sets the shim of CacheExtensions.GetAsync(ICache cache, String key, Func`1&lt;Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetAsyncOf2ICacheM0FuncOfM0TaskOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICache,``0,System.Func{``0,System.Threading.Tasks.Task{``1}},System.Threading.Tasks.Task{``1}})">
            <summary>Sets the shim of CacheExtensions.GetAsync(ICache cache, !!0 key, Func`2&lt;!!0,Task`1&lt;!!1&gt;&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetAsyncOf2ICacheM0FuncOfTaskOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICache,``0,System.Func{System.Threading.Tasks.Task{``1}},System.Threading.Tasks.Task{``1}})">
            <summary>Sets the shim of CacheExtensions.GetAsync(ICache cache, !!0 key, Func`1&lt;Task`1&lt;!!1&gt;&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetICacheStringFuncOfObject">
            <summary>Sets the shim of CacheExtensions.Get(ICache cache, String key, Func`1&lt;Object&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetOf2ICacheM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICache,``0,System.Func{``0,``1},``1})">
            <summary>Sets the shim of CacheExtensions.Get(ICache cache, !!0 key, Func`2&lt;!!0,!!1&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetOf2ICacheM0FuncOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICache,``0,System.Func{``1},``1})">
            <summary>Sets the shim of CacheExtensions.Get(ICache cache, !!0 key, Func`1&lt;!!1&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetOrDefaultAsyncOf2ICacheM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICache,``0,System.Threading.Tasks.Task{``1}})">
            <summary>Sets the shim of CacheExtensions.GetOrDefaultAsync(ICache cache, !!0 key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheExtensions.GetOrDefaultOf2ICacheM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICache,``0,``1})">
            <summary>Sets the shim of CacheExtensions.GetOrDefault(ICache cache, !!0 key)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase">
            <summary>Shim type of Abp.Runtime.Caching.CacheManagerBase</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.#ctor(Abp.Runtime.Caching.CacheManagerBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.AllInstances.Dispose">
            <summary>Sets the shim of CacheManagerBase.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.AllInstances.GetAllCaches">
            <summary>Sets the shim of CacheManagerBase.GetAllCaches()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.AllInstances.GetCacheString">
            <summary>Sets the shim of CacheManagerBase.GetCache(String name)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.AllInstances._GetCacheb__5_0String">
            <summary>Sets the shim of CacheManagerBase.&lt;GetCache&gt;b__5_0(String cacheName)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.Bind(Abp.Runtime.Caching.ICacheManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.ConstructorIIocManagerICachingConfiguration">
            <summary>Sets the shim of CacheManagerBase.CacheManagerBase(IIocManager iocManager, ICachingConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.Dispose">
            <summary>Sets the shim of CacheManagerBase.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.GetAllCaches">
            <summary>Sets the shim of CacheManagerBase.GetAllCaches()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase.GetCacheString">
            <summary>Sets the shim of CacheManagerBase.GetCache(String name)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerBase._GetCacheb__5_0String">
            <summary>Sets the shim of CacheManagerBase.&lt;GetCache&gt;b__5_0(String cacheName)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimCacheManagerExtensions">
            <summary>Shim type of Abp.Runtime.Caching.CacheManagerExtensions</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimCacheManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimCacheManagerExtensions.GetCacheOf2ICacheManagerString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ICacheManager,System.String,Abp.Runtime.Caching.ITypedCache{``0,``1}})">
            <summary>Sets the shim of CacheManagerExtensions.GetCache(ICacheManager cacheManager, String name)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimTypedCacheExtensions">
            <summary>Shim type of Abp.Runtime.Caching.TypedCacheExtensions</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheExtensions.GetAsyncOf2ITypedCacheOfM0M1M0FuncOfTaskOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ITypedCache{``0,``1},``0,System.Func{System.Threading.Tasks.Task{``1}},System.Threading.Tasks.Task{``1}})">
            <summary>Sets the shim of TypedCacheExtensions.GetAsync(ITypedCache`2&lt;!!0,!!1&gt; cache, !!0 key, Func`1&lt;Task`1&lt;!!1&gt;&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheExtensions.GetOf2ITypedCacheOfM0M1M0FuncOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Runtime.Caching.ITypedCache{``0,``1},``0,System.Func{``1},``1})">
            <summary>Sets the shim of TypedCacheExtensions.Get(ITypedCache`2&lt;!!0,!!1&gt; cache, !!0 key, Func`1&lt;!!1&gt; factory)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2">
            <summary>Shim type of Abp.Runtime.Caching.TypedCacheWrapper`2</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.#ctor(Abp.Runtime.Caching.TypedCacheWrapper{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.Clear">
            <summary>Sets the shim of TypedCacheWrapper`2.Clear()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.ClearAsync">
            <summary>Sets the shim of TypedCacheWrapper`2.ClearAsync()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.DefaultSlidingExpireTimeGet">
            <summary>Sets the shim of TypedCacheWrapper`2.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.DefaultSlidingExpireTimeSetTimeSpan">
            <summary>Sets the shim of TypedCacheWrapper`2.set_DefaultSlidingExpireTime(TimeSpan value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.Dispose">
            <summary>Sets the shim of TypedCacheWrapper`2.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.GetAsyncT0FuncOfT0TaskOfT1">
            <summary>Sets the shim of TypedCacheWrapper`2.GetAsync(!0 key, Func`2&lt;!0,Task`1&lt;!1&gt;&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.GetOrDefaultAsyncT0">
            <summary>Sets the shim of TypedCacheWrapper`2.GetOrDefaultAsync(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.GetOrDefaultT0">
            <summary>Sets the shim of TypedCacheWrapper`2.GetOrDefault(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.GetT0FuncOfT0T1">
            <summary>Sets the shim of TypedCacheWrapper`2.Get(!0 key, Func`2&lt;!0,!1&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.InternalCacheGet">
            <summary>Sets the shim of TypedCacheWrapper`2.get_InternalCache()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.InternalCacheSetICache">
            <summary>Sets the shim of TypedCacheWrapper`2.set_InternalCache(ICache value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.NameGet">
            <summary>Sets the shim of TypedCacheWrapper`2.get_Name()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.RemoveAsyncT0">
            <summary>Sets the shim of TypedCacheWrapper`2.RemoveAsync(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.RemoveT0">
            <summary>Sets the shim of TypedCacheWrapper`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.SetAsyncT0T1NullableOfTimeSpan">
            <summary>Sets the shim of TypedCacheWrapper`2.SetAsync(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.AllInstances.SetT0T1NullableOfTimeSpan">
            <summary>Sets the shim of TypedCacheWrapper`2.Set(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.Bind(Abp.Runtime.Caching.ITypedCache{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.Clear">
            <summary>Sets the shim of TypedCacheWrapper`2.Clear()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.ClearAsync">
            <summary>Sets the shim of TypedCacheWrapper`2.ClearAsync()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.ConstructorICache">
            <summary>Sets the shim of TypedCacheWrapper`2.TypedCacheWrapper`2(ICache internalCache)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.DefaultSlidingExpireTimeGet">
            <summary>Sets the shim of TypedCacheWrapper`2.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.DefaultSlidingExpireTimeSetTimeSpan">
            <summary>Sets the shim of TypedCacheWrapper`2.set_DefaultSlidingExpireTime(TimeSpan value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.Dispose">
            <summary>Sets the shim of TypedCacheWrapper`2.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.GetAsyncT0FuncOfT0TaskOfT1">
            <summary>Sets the shim of TypedCacheWrapper`2.GetAsync(!0 key, Func`2&lt;!0,Task`1&lt;!1&gt;&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.GetOrDefaultAsyncT0">
            <summary>Sets the shim of TypedCacheWrapper`2.GetOrDefaultAsync(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.GetOrDefaultT0">
            <summary>Sets the shim of TypedCacheWrapper`2.GetOrDefault(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.GetT0FuncOfT0T1">
            <summary>Sets the shim of TypedCacheWrapper`2.Get(!0 key, Func`2&lt;!0,!1&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.InternalCacheGet">
            <summary>Sets the shim of TypedCacheWrapper`2.get_InternalCache()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.InternalCacheSetICache">
            <summary>Sets the shim of TypedCacheWrapper`2.set_InternalCache(ICache value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.NameGet">
            <summary>Sets the shim of TypedCacheWrapper`2.get_Name()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.RemoveAsyncT0">
            <summary>Sets the shim of TypedCacheWrapper`2.RemoveAsync(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.RemoveT0">
            <summary>Sets the shim of TypedCacheWrapper`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.SetAsyncT0T1NullableOfTimeSpan">
            <summary>Sets the shim of TypedCacheWrapper`2.SetAsync(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.ShimTypedCacheWrapper`2.SetT0T1NullableOfTimeSpan">
            <summary>Sets the shim of TypedCacheWrapper`2.Set(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.StubCacheBase">
            <summary>Stub type of Abp.Runtime.Caching.CacheBase</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubCacheBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.Clear">
            <summary>Sets the stub of CacheBase.Clear()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.Clear01">
            <summary>Sets the stub of CacheBase.Clear()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.ClearAsync">
            <summary>Sets the stub of CacheBase.ClearAsync()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.ClearAsync01">
            <summary>Sets the stub of CacheBase.ClearAsync()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.Dispose">
            <summary>Sets the stub of CacheBase.Dispose()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.Dispose01">
            <summary>Sets the stub of CacheBase.Dispose()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.Get(System.String,System.Func{System.String,System.Object})">
            <summary>Sets the stub of CacheBase.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.GetAsync(System.String,System.Func{System.String,System.Threading.Tasks.Task{System.Object}})">
            <summary>Sets the stub of CacheBase.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.GetAsyncStringFuncOfStringTaskOfObject">
            <summary>Sets the stub of CacheBase.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.GetOrDefault(System.String)">
            <summary>Sets the stub of CacheBase.GetOrDefault(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.GetOrDefaultAsync(System.String)">
            <summary>Sets the stub of CacheBase.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.GetOrDefaultAsyncString">
            <summary>Sets the stub of CacheBase.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.GetOrDefaultString">
            <summary>Sets the stub of CacheBase.GetOrDefault(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.GetStringFuncOfStringObject">
            <summary>Sets the stub of CacheBase.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.InitializeStub">
            <summary>Initializes a new instance of type StubCacheBase</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubCacheBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubCacheBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.Remove(System.String)">
            <summary>Sets the stub of CacheBase.Remove(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.RemoveAsync(System.String)">
            <summary>Sets the stub of CacheBase.RemoveAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.RemoveAsyncString">
            <summary>Sets the stub of CacheBase.RemoveAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.RemoveString">
            <summary>Sets the stub of CacheBase.Remove(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.Set(System.String,System.Object,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of CacheBase.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheBase.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of CacheBase.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.SetAsyncStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the stub of CacheBase.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheBase.SetStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the stub of CacheBase.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.StubCacheManagerBase">
            <summary>Stub type of Abp.Runtime.Caching.CacheManagerBase</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.#ctor(Abp.Dependency.IIocManager,Abp.Runtime.Caching.Configuration.ICachingConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.CreateCacheImplementation(System.String)">
            <summary>Sets the stub of CacheManagerBase.CreateCacheImplementation(String name)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.CreateCacheImplementationString">
            <summary>Sets the stub of CacheManagerBase.CreateCacheImplementation(String name)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.Dispose">
            <summary>Sets the stub of CacheManagerBase.Dispose()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.Dispose01">
            <summary>Sets the stub of CacheManagerBase.Dispose()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.GetCache(System.String)">
            <summary>Sets the stub of CacheManagerBase.GetCache(String name)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.GetCacheString">
            <summary>Sets the stub of CacheManagerBase.GetCache(String name)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.InitializeStub">
            <summary>Initializes a new instance of type StubCacheManagerBase</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubCacheManagerBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.StubICache">
            <summary>Stub type of Abp.Runtime.Caching.ICache</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.#ctor">
            <summary>Initializes a new instance of type StubICache</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#Clear">
            <summary>Sets the stub of ICache.Clear()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#ClearAsync">
            <summary>Sets the stub of ICache.ClearAsync()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#Get(System.String,System.Func{System.String,System.Object})">
            <summary>Sets the stub of ICache.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#GetAsync(System.String,System.Func{System.String,System.Threading.Tasks.Task{System.Object}})">
            <summary>Sets the stub of ICache.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#GetOrDefault(System.String)">
            <summary>Sets the stub of ICache.GetOrDefault(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#GetOrDefaultAsync(System.String)">
            <summary>Sets the stub of ICache.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#Remove(System.String)">
            <summary>Sets the stub of ICache.Remove(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#RemoveAsync(System.String)">
            <summary>Sets the stub of ICache.RemoveAsync(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#Set(System.String,System.Object,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of ICache.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of ICache.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.AttachBackingFieldToDefaultAbsoluteExpireTime">
            <summary>Attaches delegates to emulate StubICache.DefaultAbsoluteExpireTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.AttachBackingFieldToDefaultSlidingExpireTime">
            <summary>Attaches delegates to emulate StubICache.DefaultSlidingExpireTime as a property with a backing field.</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.Clear">
            <summary>Sets the stub of ICache.Clear()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.ClearAsync">
            <summary>Sets the stub of ICache.ClearAsync()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#DefaultAbsoluteExpireTime">
            <summary>Sets the stub of ICache.get_DefaultAbsoluteExpireTime()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.DefaultAbsoluteExpireTimeGet">
            <summary>Sets the stub of ICache.get_DefaultAbsoluteExpireTime()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.DefaultAbsoluteExpireTimeSetNullableOfTimeSpan">
            <summary>Sets the stub of ICache.set_DefaultAbsoluteExpireTime(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#DefaultSlidingExpireTime">
            <summary>Sets the stub of ICache.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.DefaultSlidingExpireTimeGet">
            <summary>Sets the stub of ICache.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.DefaultSlidingExpireTimeSetTimeSpan">
            <summary>Sets the stub of ICache.set_DefaultSlidingExpireTime(TimeSpan value)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.GetAsyncStringFuncOfStringTaskOfObject">
            <summary>Sets the stub of ICache.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.GetOrDefaultAsyncString">
            <summary>Sets the stub of ICache.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.GetOrDefaultString">
            <summary>Sets the stub of ICache.GetOrDefault(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.GetStringFuncOfStringObject">
            <summary>Sets the stub of ICache.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubICache.Abp#Runtime#Caching#ICache#Name">
            <summary>Sets the stub of ICache.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.NameGet">
            <summary>Sets the stub of ICache.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.RemoveAsyncString">
            <summary>Sets the stub of ICache.RemoveAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.RemoveString">
            <summary>Sets the stub of ICache.Remove(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.SetAsyncStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the stub of ICache.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICache.SetStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the stub of ICache.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICache.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.StubICacheManager">
            <summary>Stub type of Abp.Runtime.Caching.ICacheManager</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICacheManager.#ctor">
            <summary>Initializes a new instance of type StubICacheManager</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICacheManager.Abp#Runtime#Caching#ICacheManager#GetAllCaches">
            <summary>Sets the stub of ICacheManager.GetAllCaches()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICacheManager.Abp#Runtime#Caching#ICacheManager#GetCache(System.String)">
            <summary>Sets the stub of ICacheManager.GetCache(String name)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICacheManager.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICacheManager.GetAllCaches">
            <summary>Sets the stub of ICacheManager.GetAllCaches()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubICacheManager.GetCacheString">
            <summary>Sets the stub of ICacheManager.GetCache(String name)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubICacheManager.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.StubITypedCache`2">
            <summary>Stub type of Abp.Runtime.Caching.ITypedCache`2</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.#ctor">
            <summary>Initializes a new instance of type StubITypedCache</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#Clear">
            <summary>Sets the stub of ITypedCache`2.Clear()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#ClearAsync">
            <summary>Sets the stub of ITypedCache`2.ClearAsync()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#Get(`0,System.Func{`0,`1})">
            <summary>Sets the stub of ITypedCache`2.Get(!0 key, Func`2&lt;!0,!1&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#GetAsync(`0,System.Func{`0,System.Threading.Tasks.Task{`1}})">
            <summary>Sets the stub of ITypedCache`2.GetAsync(!0 key, Func`2&lt;!0,Task`1&lt;!1&gt;&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#GetOrDefault(`0)">
            <summary>Sets the stub of ITypedCache`2.GetOrDefault(!0 key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#GetOrDefaultAsync(`0)">
            <summary>Sets the stub of ITypedCache`2.GetOrDefaultAsync(!0 key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#Remove(`0)">
            <summary>Sets the stub of ITypedCache`2.Remove(!0 key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#RemoveAsync(`0)">
            <summary>Sets the stub of ITypedCache`2.RemoveAsync(!0 key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#Set(`0,`1,System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of ITypedCache`2.Set(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#SetAsync(`0,`1,System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of ITypedCache`2.SetAsync(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.AttachBackingFieldToDefaultSlidingExpireTime">
            <summary>Attaches delegates to emulate StubITypedCache.DefaultSlidingExpireTime as a property with a backing field.</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Clear">
            <summary>Sets the stub of ITypedCache`2.Clear()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.ClearAsync">
            <summary>Sets the stub of ITypedCache`2.ClearAsync()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#DefaultSlidingExpireTime">
            <summary>Sets the stub of ITypedCache`2.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.DefaultSlidingExpireTimeGet">
            <summary>Sets the stub of ITypedCache`2.get_DefaultSlidingExpireTime()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.DefaultSlidingExpireTimeSetTimeSpan">
            <summary>Sets the stub of ITypedCache`2.set_DefaultSlidingExpireTime(TimeSpan value)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.GetAsyncT0FuncOfT0TaskOfT1">
            <summary>Sets the stub of ITypedCache`2.GetAsync(!0 key, Func`2&lt;!0,Task`1&lt;!1&gt;&gt; factory)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.GetOrDefaultAsyncT0">
            <summary>Sets the stub of ITypedCache`2.GetOrDefaultAsync(!0 key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.GetOrDefaultT0">
            <summary>Sets the stub of ITypedCache`2.GetOrDefault(!0 key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.GetT0FuncOfT0T1">
            <summary>Sets the stub of ITypedCache`2.Get(!0 key, Func`2&lt;!0,!1&gt; factory)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#InternalCache">
            <summary>Sets the stub of ITypedCache`2.get_InternalCache()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.InternalCacheGet">
            <summary>Sets the stub of ITypedCache`2.get_InternalCache()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubITypedCache`2.Abp#Runtime#Caching#ITypedCache{TKey,TValue}#Name">
            <summary>Sets the stub of ITypedCache`2.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.NameGet">
            <summary>Sets the stub of ITypedCache`2.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.RemoveAsyncT0">
            <summary>Sets the stub of ITypedCache`2.RemoveAsync(!0 key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.RemoveT0">
            <summary>Sets the stub of ITypedCache`2.Remove(!0 key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.SetAsyncT0T1NullableOfTimeSpan">
            <summary>Sets the stub of ITypedCache`2.SetAsync(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Fakes.StubITypedCache`2.SetT0T1NullableOfTimeSpan">
            <summary>Sets the stub of ITypedCache`2.Set(!0 key, !1 value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubITypedCache`2.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Fakes.StubTypedCacheWrapper`2">
            <summary>Stub type of Abp.Runtime.Caching.TypedCacheWrapper`2</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubTypedCacheWrapper`2.#ctor(Abp.Runtime.Caching.ICache)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubTypedCacheWrapper`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Fakes.StubTypedCacheWrapper`2.InitializeStub">
            <summary>Initializes a new instance of type StubTypedCacheWrapper</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubTypedCacheWrapper`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Fakes.StubTypedCacheWrapper`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache">
            <summary>Shim type of Abp.Runtime.Caching.Memory.AbpMemoryCache</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.#ctor(Abp.Runtime.Caching.Memory.AbpMemoryCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.AllInstances.Clear">
            <summary>Sets the shim of AbpMemoryCache.Clear()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.AllInstances.Dispose">
            <summary>Sets the shim of AbpMemoryCache.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.AllInstances.GetOrDefaultString">
            <summary>Sets the shim of AbpMemoryCache.GetOrDefault(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.AllInstances.RemoveString">
            <summary>Sets the shim of AbpMemoryCache.Remove(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.AllInstances.SetStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of AbpMemoryCache.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.Bind(Abp.Runtime.Caching.ICache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.Clear">
            <summary>Sets the shim of AbpMemoryCache.Clear()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.ConstructorString">
            <summary>Sets the shim of AbpMemoryCache.AbpMemoryCache(String name)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.Dispose">
            <summary>Sets the shim of AbpMemoryCache.Dispose()</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.GetOrDefaultString">
            <summary>Sets the shim of AbpMemoryCache.GetOrDefault(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.RemoveString">
            <summary>Sets the shim of AbpMemoryCache.Remove(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCache.SetStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the shim of AbpMemoryCache.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager">
            <summary>Shim type of Abp.Runtime.Caching.Memory.AbpMemoryCacheManager</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.#ctor(Abp.Runtime.Caching.Memory.AbpMemoryCacheManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.AllInstances.CreateCacheImplementationString">
            <summary>Sets the shim of AbpMemoryCacheManager.CreateCacheImplementation(String name)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.Bind(Abp.Runtime.Caching.ICacheManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.ConstructorIIocManagerICachingConfiguration">
            <summary>Sets the shim of AbpMemoryCacheManager.AbpMemoryCacheManager(IIocManager iocManager, ICachingConfiguration configuration)</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.ShimAbpMemoryCacheManager.CreateCacheImplementationString">
            <summary>Sets the shim of AbpMemoryCacheManager.CreateCacheImplementation(String name)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache">
            <summary>Stub type of Abp.Runtime.Caching.Memory.AbpMemoryCache</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.Clear">
            <summary>Sets the stub of AbpMemoryCache.Clear()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.Clear01">
            <summary>Sets the stub of AbpMemoryCache.Clear()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.ClearAsync">
            <summary>Sets the stub of CacheBase.ClearAsync()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.ClearAsync01">
            <summary>Sets the stub of CacheBase.ClearAsync()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.Dispose">
            <summary>Sets the stub of AbpMemoryCache.Dispose()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.Dispose01">
            <summary>Sets the stub of AbpMemoryCache.Dispose()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.Get(System.String,System.Func{System.String,System.Object})">
            <summary>Sets the stub of CacheBase.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.GetAsync(System.String,System.Func{System.String,System.Threading.Tasks.Task{System.Object}})">
            <summary>Sets the stub of CacheBase.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.GetAsyncStringFuncOfStringTaskOfObject">
            <summary>Sets the stub of CacheBase.GetAsync(String key, Func`2&lt;String,Task`1&lt;Object&gt;&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.GetOrDefault(System.String)">
            <summary>Sets the stub of AbpMemoryCache.GetOrDefault(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.GetOrDefaultAsync(System.String)">
            <summary>Sets the stub of CacheBase.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.GetOrDefaultAsyncString">
            <summary>Sets the stub of CacheBase.GetOrDefaultAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.GetOrDefaultString">
            <summary>Sets the stub of AbpMemoryCache.GetOrDefault(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.GetStringFuncOfStringObject">
            <summary>Sets the stub of CacheBase.Get(String key, Func`2&lt;String,Object&gt; factory)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.InitializeStub">
            <summary>Initializes a new instance of type StubAbpMemoryCache</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.Remove(System.String)">
            <summary>Sets the stub of AbpMemoryCache.Remove(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.RemoveAsync(System.String)">
            <summary>Sets the stub of CacheBase.RemoveAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.RemoveAsyncString">
            <summary>Sets the stub of CacheBase.RemoveAsync(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.RemoveString">
            <summary>Sets the stub of AbpMemoryCache.Remove(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.Set(System.String,System.Object,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of AbpMemoryCache.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>Sets the stub of CacheBase.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.SetAsyncStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the stub of CacheBase.SetAsync(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCache.SetStringObjectNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Sets the stub of AbpMemoryCache.Set(String key, Object value, Nullable`1&lt;TimeSpan&gt; slidingExpireTime, Nullable`1&lt;TimeSpan&gt; absoluteExpireTime)</summary>
        </member>
        <member name="T:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager">
            <summary>Stub type of Abp.Runtime.Caching.Memory.AbpMemoryCacheManager</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.#ctor(Abp.Dependency.IIocManager,Abp.Runtime.Caching.Configuration.ICachingConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.CreateCacheImplementation(System.String)">
            <summary>Sets the stub of AbpMemoryCacheManager.CreateCacheImplementation(String name)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.CreateCacheImplementationString">
            <summary>Sets the stub of AbpMemoryCacheManager.CreateCacheImplementation(String name)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.Dispose">
            <summary>Sets the stub of CacheManagerBase.Dispose()</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.Dispose01">
            <summary>Sets the stub of CacheManagerBase.Dispose()</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.GetCache(System.String)">
            <summary>Sets the stub of CacheManagerBase.GetCache(String name)</summary>
        </member>
        <member name="F:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.GetCacheString">
            <summary>Sets the stub of CacheManagerBase.GetCache(String name)</summary>
        </member>
        <member name="M:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.InitializeStub">
            <summary>Initializes a new instance of type StubAbpMemoryCacheManager</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Caching.Memory.Fakes.StubAbpMemoryCacheManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Fakes.StubIAmbientDataContext">
            <summary>Stub type of Abp.Runtime.IAmbientDataContext</summary>
        </member>
        <member name="M:Abp.Runtime.Fakes.StubIAmbientDataContext.#ctor">
            <summary>Initializes a new instance of type StubIAmbientDataContext</summary>
        </member>
        <member name="M:Abp.Runtime.Fakes.StubIAmbientDataContext.Abp#Runtime#IAmbientDataContext#GetData(System.String)">
            <summary>Sets the stub of IAmbientDataContext.GetData(String key)</summary>
        </member>
        <member name="M:Abp.Runtime.Fakes.StubIAmbientDataContext.Abp#Runtime#IAmbientDataContext#SetData(System.String,System.Object)">
            <summary>Sets the stub of IAmbientDataContext.SetData(String key, Object value)</summary>
        </member>
        <member name="F:Abp.Runtime.Fakes.StubIAmbientDataContext.GetDataString">
            <summary>Sets the stub of IAmbientDataContext.GetData(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Fakes.StubIAmbientDataContext.SetDataStringObject">
            <summary>Sets the stub of IAmbientDataContext.SetData(String key, Object value)</summary>
        </member>
        <member name="T:Abp.Runtime.Fakes.StubIAmbientScopeProvider`1">
            <summary>Stub type of Abp.Runtime.IAmbientScopeProvider`1</summary>
        </member>
        <member name="M:Abp.Runtime.Fakes.StubIAmbientScopeProvider`1.#ctor">
            <summary>Initializes a new instance of type StubIAmbientScopeProvider</summary>
        </member>
        <member name="M:Abp.Runtime.Fakes.StubIAmbientScopeProvider`1.Abp#Runtime#IAmbientScopeProvider{T}#BeginScope(System.String,`0)">
            <summary>Sets the stub of IAmbientScopeProvider`1.BeginScope(String contextKey, !0 value)</summary>
        </member>
        <member name="M:Abp.Runtime.Fakes.StubIAmbientScopeProvider`1.Abp#Runtime#IAmbientScopeProvider{T}#GetValue(System.String)">
            <summary>Sets the stub of IAmbientScopeProvider`1.GetValue(String contextKey)</summary>
        </member>
        <member name="F:Abp.Runtime.Fakes.StubIAmbientScopeProvider`1.BeginScopeStringT0">
            <summary>Sets the stub of IAmbientScopeProvider`1.BeginScope(String contextKey, !0 value)</summary>
        </member>
        <member name="F:Abp.Runtime.Fakes.StubIAmbientScopeProvider`1.GetValueString">
            <summary>Sets the stub of IAmbientScopeProvider`1.GetValue(String contextKey)</summary>
        </member>
        <member name="T:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext">
            <summary>Shim type of Abp.Runtime.Remoting.AsyncLocalAmbientDataContext</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.#ctor(Abp.Runtime.Remoting.AsyncLocalAmbientDataContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.AllInstances.GetDataString">
            <summary>Sets the shim of AsyncLocalAmbientDataContext.GetData(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.AllInstances.SetDataStringObject">
            <summary>Sets the shim of AsyncLocalAmbientDataContext.SetData(String key, Object value)</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.Bind(Abp.Runtime.IAmbientDataContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.Constructor">
            <summary>Sets the shim of AsyncLocalAmbientDataContext.AsyncLocalAmbientDataContext()</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.GetDataString">
            <summary>Sets the shim of AsyncLocalAmbientDataContext.GetData(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.SetDataStringObject">
            <summary>Sets the shim of AsyncLocalAmbientDataContext.SetData(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimAsyncLocalAmbientDataContext.StaticConstructor">
            <summary>Sets the shim of AsyncLocalAmbientDataContext.AsyncLocalAmbientDataContext()</summary>
        </member>
        <member name="T:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1">
            <summary>Shim type of Abp.Runtime.Remoting.DataContextAmbientScopeProvider`1</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.#ctor(Abp.Runtime.Remoting.DataContextAmbientScopeProvider{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.AllInstances.BeginScopeStringT0">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.BeginScope(String contextKey, !0 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.AllInstances.GetValueString">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.GetValue(String contextKey)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.AllInstances.LoggerGet">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.get_Logger()</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.BeginScopeStringT0">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.BeginScope(String contextKey, !0 value)</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.Bind(Abp.Runtime.IAmbientScopeProvider{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.ConstructorIAmbientDataContext">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.DataContextAmbientScopeProvider`1(IAmbientDataContext dataContext)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.GetValueString">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.GetValue(String contextKey)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.LoggerGet">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.get_Logger()</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.LoggerSetILogger">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.ShimDataContextAmbientScopeProvider`1.StaticConstructor">
            <summary>Sets the shim of DataContextAmbientScopeProvider`1.DataContextAmbientScopeProvider`1()</summary>
        </member>
        <member name="T:Abp.Runtime.Remoting.Fakes.StubAsyncLocalAmbientDataContext">
            <summary>Stub type of Abp.Runtime.Remoting.AsyncLocalAmbientDataContext</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.StubAsyncLocalAmbientDataContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.StubAsyncLocalAmbientDataContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.StubAsyncLocalAmbientDataContext.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncLocalAmbientDataContext</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.StubAsyncLocalAmbientDataContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.StubAsyncLocalAmbientDataContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Remoting.Fakes.StubDataContextAmbientScopeProvider`1">
            <summary>Stub type of Abp.Runtime.Remoting.DataContextAmbientScopeProvider`1</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.StubDataContextAmbientScopeProvider`1.#ctor(Abp.Runtime.IAmbientDataContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.StubDataContextAmbientScopeProvider`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Remoting.Fakes.StubDataContextAmbientScopeProvider`1.InitializeStub">
            <summary>Initializes a new instance of type StubDataContextAmbientScopeProvider</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.StubDataContextAmbientScopeProvider`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Remoting.Fakes.StubDataContextAmbientScopeProvider`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes">
            <summary>Shim type of Abp.Runtime.Security.AbpClaimTypes</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.ImpersonatorTenantIdGet">
            <summary>Sets the shim of AbpClaimTypes.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.ImpersonatorTenantIdSetString">
            <summary>Sets the shim of AbpClaimTypes.set_ImpersonatorTenantId(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.ImpersonatorUserIdGet">
            <summary>Sets the shim of AbpClaimTypes.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.ImpersonatorUserIdSetString">
            <summary>Sets the shim of AbpClaimTypes.set_ImpersonatorUserId(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.RoleGet">
            <summary>Sets the shim of AbpClaimTypes.get_Role()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.RoleSetString">
            <summary>Sets the shim of AbpClaimTypes.set_Role(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.StaticConstructor">
            <summary>Sets the shim of AbpClaimTypes.AbpClaimTypes()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.TenantIdGet">
            <summary>Sets the shim of AbpClaimTypes.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.TenantIdSetString">
            <summary>Sets the shim of AbpClaimTypes.set_TenantId(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.UserIdGet">
            <summary>Sets the shim of AbpClaimTypes.get_UserId()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.UserIdSetString">
            <summary>Sets the shim of AbpClaimTypes.set_UserId(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.UserNameGet">
            <summary>Sets the shim of AbpClaimTypes.get_UserName()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimAbpClaimTypes.UserNameSetString">
            <summary>Sets the shim of AbpClaimTypes.set_UserName(String value)</summary>
        </member>
        <member name="T:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions">
            <summary>Shim type of Abp.Runtime.Security.ClaimsIdentityExtensions</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.GetImpersonatorTenantIdIIdentity">
            <summary>Sets the shim of ClaimsIdentityExtensions.GetImpersonatorTenantId(IIdentity identity)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.GetImpersonatorUserIdIIdentity">
            <summary>Sets the shim of ClaimsIdentityExtensions.GetImpersonatorUserId(IIdentity identity)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.GetTenantIdIIdentity">
            <summary>Sets the shim of ClaimsIdentityExtensions.GetTenantId(IIdentity identity)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.GetUserIdIIdentity">
            <summary>Sets the shim of ClaimsIdentityExtensions.GetUserId(IIdentity identity)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimClaimsIdentityExtensions.GetUserIdentifierOrNullIIdentity">
            <summary>Sets the shim of ClaimsIdentityExtensions.GetUserIdentifierOrNull(IIdentity identity)</summary>
        </member>
        <member name="T:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher">
            <summary>Shim type of Abp.Runtime.Security.SimpleStringCipher</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.#ctor(Abp.Runtime.Security.SimpleStringCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.AllInstances.DecryptStringStringByteArray">
            <summary>Sets the shim of SimpleStringCipher.Decrypt(String cipherText, String passPhrase, Byte[] salt)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.AllInstances.EncryptStringStringByteArray">
            <summary>Sets the shim of SimpleStringCipher.Encrypt(String plainText, String passPhrase, Byte[] salt)</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.Constructor">
            <summary>Sets the shim of SimpleStringCipher.SimpleStringCipher()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.DecryptStringStringByteArray">
            <summary>Sets the shim of SimpleStringCipher.Decrypt(String cipherText, String passPhrase, Byte[] salt)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.DefaultInitVectorBytesGet">
            <summary>Sets the shim of SimpleStringCipher.get_DefaultInitVectorBytes()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.DefaultInitVectorBytesSetByteArray">
            <summary>Sets the shim of SimpleStringCipher.set_DefaultInitVectorBytes(Byte[] value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.DefaultPassPhraseGet">
            <summary>Sets the shim of SimpleStringCipher.get_DefaultPassPhrase()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.DefaultPassPhraseSetString">
            <summary>Sets the shim of SimpleStringCipher.set_DefaultPassPhrase(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.DefaultSaltGet">
            <summary>Sets the shim of SimpleStringCipher.get_DefaultSalt()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.DefaultSaltSetByteArray">
            <summary>Sets the shim of SimpleStringCipher.set_DefaultSalt(Byte[] value)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.EncryptStringStringByteArray">
            <summary>Sets the shim of SimpleStringCipher.Encrypt(String plainText, String passPhrase, Byte[] salt)</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.InstanceGet">
            <summary>Sets the shim of SimpleStringCipher.get_Instance()</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.ShimSimpleStringCipher.StaticConstructor">
            <summary>Sets the shim of SimpleStringCipher.SimpleStringCipher()</summary>
        </member>
        <member name="T:Abp.Runtime.Security.Fakes.StubSimpleStringCipher">
            <summary>Stub type of Abp.Runtime.Security.SimpleStringCipher</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.StubSimpleStringCipher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.StubSimpleStringCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Security.Fakes.StubSimpleStringCipher.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleStringCipher</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.StubSimpleStringCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Security.Fakes.StubSimpleStringCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper">
            <summary>Shim type of Abp.Runtime.Serialization.BinarySerializationHelper</summary>
        </member>
        <member name="M:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.CreateBinaryFormatterBoolean">
            <summary>Sets the shim of BinarySerializationHelper.CreateBinaryFormatter(Boolean extended)</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.DeserializeByteArray">
            <summary>Sets the shim of BinarySerializationHelper.Deserialize(Byte[] bytes)</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.DeserializeExtendedByteArray">
            <summary>Sets the shim of BinarySerializationHelper.DeserializeExtended(Byte[] bytes)</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.DeserializeExtendedStream">
            <summary>Sets the shim of BinarySerializationHelper.DeserializeExtended(Stream stream)</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.DeserializeStream">
            <summary>Sets the shim of BinarySerializationHelper.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.SerializeObject">
            <summary>Sets the shim of BinarySerializationHelper.Serialize(Object obj)</summary>
        </member>
        <member name="P:Abp.Runtime.Serialization.Fakes.ShimBinarySerializationHelper.SerializeObjectStream">
            <summary>Sets the shim of BinarySerializationHelper.Serialize(Object obj, Stream stream)</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimAbpSessionBase">
            <summary>Shim type of Abp.Runtime.Session.AbpSessionBase</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.#ctor(Abp.Runtime.Session.AbpSessionBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.AllInstances.MultiTenancyGet">
            <summary>Sets the shim of AbpSessionBase.get_MultiTenancy()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.AllInstances.MultiTenancySideGet">
            <summary>Sets the shim of AbpSessionBase.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.AllInstances.OverridedValueGet">
            <summary>Sets the shim of AbpSessionBase.get_OverridedValue()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.AllInstances.SessionOverrideScopeProviderGet">
            <summary>Sets the shim of AbpSessionBase.get_SessionOverrideScopeProvider()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.AllInstances.UseNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of AbpSessionBase.Use(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.Bind(Abp.Runtime.Session.IAbpSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.ConstructorIMultiTenancyConfigIAmbientScopeProviderOfSessionOverride">
            <summary>Sets the shim of AbpSessionBase.AbpSessionBase(IMultiTenancyConfig multiTenancy, IAmbientScopeProvider`1&lt;SessionOverride&gt; sessionOverrideScopeProvider)</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.MultiTenancyGet">
            <summary>Sets the shim of AbpSessionBase.get_MultiTenancy()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.MultiTenancySideGet">
            <summary>Sets the shim of AbpSessionBase.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.OverridedValueGet">
            <summary>Sets the shim of AbpSessionBase.get_OverridedValue()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.SessionOverrideScopeProviderGet">
            <summary>Sets the shim of AbpSessionBase.get_SessionOverrideScopeProvider()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionBase.UseNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of AbpSessionBase.Use(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions">
            <summary>Shim type of Abp.Runtime.Session.AbpSessionExtensions</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions.GetTenantIdIAbpSession">
            <summary>Sets the shim of AbpSessionExtensions.GetTenantId(IAbpSession session)</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions.GetUserIdIAbpSession">
            <summary>Sets the shim of AbpSessionExtensions.GetUserId(IAbpSession session)</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimAbpSessionExtensions.ToUserIdentifierIAbpSession">
            <summary>Sets the shim of AbpSessionExtensions.ToUserIdentifier(IAbpSession session)</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession">
            <summary>Shim type of Abp.Runtime.Session.ClaimsAbpSession</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.#ctor(Abp.Runtime.Session.ClaimsAbpSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.AllInstances.ImpersonatorTenantIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.AllInstances.ImpersonatorUserIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.AllInstances.PrincipalAccessorGet">
            <summary>Sets the shim of ClaimsAbpSession.get_PrincipalAccessor()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.AllInstances.TenantIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.AllInstances.TenantResolverGet">
            <summary>Sets the shim of ClaimsAbpSession.get_TenantResolver()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.AllInstances.UserIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_UserId()</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.Bind(Abp.Runtime.Session.IAbpSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.ConstructorIPrincipalAccessorIMultiTenancyConfigITenantResolverIAmbientScopeProviderOfSessionOverride">
            <summary>Sets the shim of ClaimsAbpSession.ClaimsAbpSession(IPrincipalAccessor principalAccessor, IMultiTenancyConfig multiTenancy, ITenantResolver tenantResolver, IAmbientScopeProvider`1&lt;SessionOverride&gt; sessionOverrideScopeProvider)</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.ImpersonatorTenantIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.ImpersonatorUserIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.PrincipalAccessorGet">
            <summary>Sets the shim of ClaimsAbpSession.get_PrincipalAccessor()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.TenantIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.TenantResolverGet">
            <summary>Sets the shim of ClaimsAbpSession.get_TenantResolver()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimClaimsAbpSession.UserIdGet">
            <summary>Sets the shim of ClaimsAbpSession.get_UserId()</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor">
            <summary>Shim type of Abp.Runtime.Session.DefaultPrincipalAccessor</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.#ctor(Abp.Runtime.Session.DefaultPrincipalAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.Bind(Abp.Runtime.Session.IPrincipalAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.Constructor">
            <summary>Sets the shim of DefaultPrincipalAccessor.DefaultPrincipalAccessor()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimDefaultPrincipalAccessor.InstanceGet">
            <summary>Sets the shim of DefaultPrincipalAccessor.get_Instance()</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimNullAbpSession">
            <summary>Shim type of Abp.Runtime.Session.NullAbpSession</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimNullAbpSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimNullAbpSession.#ctor(Abp.Runtime.Session.NullAbpSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimNullAbpSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.AllInstances.ImpersonatorTenantIdGet">
            <summary>Sets the shim of NullAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.AllInstances.ImpersonatorUserIdGet">
            <summary>Sets the shim of NullAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.AllInstances.MultiTenancySideGet">
            <summary>Sets the shim of NullAbpSession.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.AllInstances.TenantIdGet">
            <summary>Sets the shim of NullAbpSession.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.AllInstances.UserIdGet">
            <summary>Sets the shim of NullAbpSession.get_UserId()</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimNullAbpSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimNullAbpSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimNullAbpSession.Bind(Abp.Runtime.Session.IAbpSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.Constructor">
            <summary>Sets the shim of NullAbpSession.NullAbpSession()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.ImpersonatorTenantIdGet">
            <summary>Sets the shim of NullAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.ImpersonatorUserIdGet">
            <summary>Sets the shim of NullAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.InstanceGet">
            <summary>Sets the shim of NullAbpSession.get_Instance()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.MultiTenancySideGet">
            <summary>Sets the shim of NullAbpSession.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.StaticConstructor">
            <summary>Sets the shim of NullAbpSession.NullAbpSession()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.TenantIdGet">
            <summary>Sets the shim of NullAbpSession.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimNullAbpSession.UserIdGet">
            <summary>Sets the shim of NullAbpSession.get_UserId()</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimSessionOverride">
            <summary>Shim type of Abp.Runtime.Session.SessionOverride</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimSessionOverride.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimSessionOverride.#ctor(Abp.Runtime.Session.SessionOverride)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.ShimSessionOverride.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimSessionOverride.AllInstances.TenantIdGet">
            <summary>Sets the shim of SessionOverride.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimSessionOverride.AllInstances.UserIdGet">
            <summary>Sets the shim of SessionOverride.get_UserId()</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimSessionOverride.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.ShimSessionOverride.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimSessionOverride.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimSessionOverride.ConstructorNullableOfInt32NullableOfInt64">
            <summary>Sets the shim of SessionOverride.SessionOverride(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimSessionOverride.TenantIdGet">
            <summary>Sets the shim of SessionOverride.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.ShimSessionOverride.UserIdGet">
            <summary>Sets the shim of SessionOverride.get_UserId()</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.StubAbpSessionBase">
            <summary>Stub type of Abp.Runtime.Session.AbpSessionBase</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubAbpSessionBase.#ctor(Abp.Configuration.Startup.IMultiTenancyConfig,Abp.Runtime.IAmbientScopeProvider{Abp.Runtime.Session.SessionOverride})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.ImpersonatorTenantId">
            <summary>Sets the stub of AbpSessionBase.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubAbpSessionBase.ImpersonatorTenantIdGet">
            <summary>Sets the stub of AbpSessionBase.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.ImpersonatorUserId">
            <summary>Sets the stub of AbpSessionBase.get_ImpersonatorUserId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubAbpSessionBase.ImpersonatorUserIdGet">
            <summary>Sets the stub of AbpSessionBase.get_ImpersonatorUserId()</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubAbpSessionBase.InitializeStub">
            <summary>Initializes a new instance of type StubAbpSessionBase</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.MultiTenancySide">
            <summary>Sets the stub of AbpSessionBase.get_MultiTenancySide()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubAbpSessionBase.MultiTenancySideGet">
            <summary>Sets the stub of AbpSessionBase.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.TenantId">
            <summary>Sets the stub of AbpSessionBase.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubAbpSessionBase.TenantIdGet">
            <summary>Sets the stub of AbpSessionBase.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubAbpSessionBase.UserId">
            <summary>Sets the stub of AbpSessionBase.get_UserId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubAbpSessionBase.UserIdGet">
            <summary>Sets the stub of AbpSessionBase.get_UserId()</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.StubClaimsAbpSession">
            <summary>Stub type of Abp.Runtime.Session.ClaimsAbpSession</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.#ctor(Abp.Runtime.Session.IPrincipalAccessor,Abp.Configuration.Startup.IMultiTenancyConfig,Abp.MultiTenancy.ITenantResolver,Abp.Runtime.IAmbientScopeProvider{Abp.Runtime.Session.SessionOverride})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.ImpersonatorTenantId">
            <summary>Sets the stub of ClaimsAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.ImpersonatorTenantIdGet">
            <summary>Sets the stub of ClaimsAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.ImpersonatorUserId">
            <summary>Sets the stub of ClaimsAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.ImpersonatorUserIdGet">
            <summary>Sets the stub of ClaimsAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.InitializeStub">
            <summary>Initializes a new instance of type StubClaimsAbpSession</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.MultiTenancySide">
            <summary>Sets the stub of AbpSessionBase.get_MultiTenancySide()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.MultiTenancySideGet">
            <summary>Sets the stub of AbpSessionBase.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.TenantId">
            <summary>Sets the stub of ClaimsAbpSession.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.TenantIdGet">
            <summary>Sets the stub of ClaimsAbpSession.get_TenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.UserId">
            <summary>Sets the stub of ClaimsAbpSession.get_UserId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubClaimsAbpSession.UserIdGet">
            <summary>Sets the stub of ClaimsAbpSession.get_UserId()</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.StubDefaultPrincipalAccessor">
            <summary>Stub type of Abp.Runtime.Session.DefaultPrincipalAccessor</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubDefaultPrincipalAccessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubDefaultPrincipalAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubDefaultPrincipalAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultPrincipalAccessor</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubDefaultPrincipalAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubDefaultPrincipalAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.StubIAbpSession">
            <summary>Stub type of Abp.Runtime.Session.IAbpSession</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubIAbpSession.#ctor">
            <summary>Initializes a new instance of type StubIAbpSession</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubIAbpSession.Abp#Runtime#Session#IAbpSession#Use(System.Nullable{System.Int32},System.Nullable{System.Int64})">
            <summary>Sets the stub of IAbpSession.Use(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubIAbpSession.Abp#Runtime#Session#IAbpSession#ImpersonatorTenantId">
            <summary>Sets the stub of IAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubIAbpSession.ImpersonatorTenantIdGet">
            <summary>Sets the stub of IAbpSession.get_ImpersonatorTenantId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubIAbpSession.Abp#Runtime#Session#IAbpSession#ImpersonatorUserId">
            <summary>Sets the stub of IAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubIAbpSession.ImpersonatorUserIdGet">
            <summary>Sets the stub of IAbpSession.get_ImpersonatorUserId()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubIAbpSession.Abp#Runtime#Session#IAbpSession#MultiTenancySide">
            <summary>Sets the stub of IAbpSession.get_MultiTenancySide()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubIAbpSession.MultiTenancySideGet">
            <summary>Sets the stub of IAbpSession.get_MultiTenancySide()</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubIAbpSession.Abp#Runtime#Session#IAbpSession#TenantId">
            <summary>Sets the stub of IAbpSession.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubIAbpSession.TenantIdGet">
            <summary>Sets the stub of IAbpSession.get_TenantId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubIAbpSession.UseNullableOfInt32NullableOfInt64">
            <summary>Sets the stub of IAbpSession.Use(Nullable`1&lt;Int32&gt; tenantId, Nullable`1&lt;Int64&gt; userId)</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubIAbpSession.Abp#Runtime#Session#IAbpSession#UserId">
            <summary>Sets the stub of IAbpSession.get_UserId()</summary>
        </member>
        <member name="F:Abp.Runtime.Session.Fakes.StubIAbpSession.UserIdGet">
            <summary>Sets the stub of IAbpSession.get_UserId()</summary>
        </member>
        <member name="T:Abp.Runtime.Session.Fakes.StubSessionOverride">
            <summary>Stub type of Abp.Runtime.Session.SessionOverride</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubSessionOverride.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int64})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubSessionOverride.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Session.Fakes.StubSessionOverride.InitializeStub">
            <summary>Initializes a new instance of type StubSessionOverride</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubSessionOverride.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Session.Fakes.StubSessionOverride.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimAbpValidationException">
            <summary>Shim type of Abp.Runtime.Validation.AbpValidationException</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.#ctor(Abp.Runtime.Validation.AbpValidationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.AllInstances.SeverityGet">
            <summary>Sets the shim of AbpValidationException.get_Severity()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.AllInstances.SeveritySetLogSeverity">
            <summary>Sets the shim of AbpValidationException.set_Severity(LogSeverity value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.AllInstances.ValidationErrorsGet">
            <summary>Sets the shim of AbpValidationException.get_ValidationErrors()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.AllInstances.ValidationErrorsSetIListOfValidationResult">
            <summary>Sets the shim of AbpValidationException.set_ValidationErrors(IList`1&lt;ValidationResult&gt; value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.Bind(Abp.Logging.IHasLogSeverity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.Constructor">
            <summary>Sets the shim of AbpValidationException.AbpValidationException()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AbpValidationException.AbpValidationException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.ConstructorString">
            <summary>Sets the shim of AbpValidationException.AbpValidationException(String message)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.ConstructorStringException">
            <summary>Sets the shim of AbpValidationException.AbpValidationException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.ConstructorStringIListOfValidationResult">
            <summary>Sets the shim of AbpValidationException.AbpValidationException(String message, IList`1&lt;ValidationResult&gt; validationErrors)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.SeverityGet">
            <summary>Sets the shim of AbpValidationException.get_Severity()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.SeveritySetLogSeverity">
            <summary>Sets the shim of AbpValidationException.set_Severity(LogSeverity value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.ValidationErrorsGet">
            <summary>Sets the shim of AbpValidationException.get_ValidationErrors()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAbpValidationException.ValidationErrorsSetIListOfValidationResult">
            <summary>Sets the shim of AbpValidationException.set_ValidationErrors(IList`1&lt;ValidationResult&gt; value)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator">
            <summary>Shim type of Abp.Runtime.Validation.AlwaysValidValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.#ctor(Abp.Runtime.Validation.AlwaysValidValueValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.AllInstances.IsValidObject">
            <summary>Sets the shim of AlwaysValidValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.Bind(Abp.Runtime.Validation.IValueValidator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.Constructor">
            <summary>Sets the shim of AlwaysValidValueValidator.AlwaysValidValueValidator()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimAlwaysValidValueValidator.IsValidObject">
            <summary>Sets the shim of AlwaysValidValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator">
            <summary>Shim type of Abp.Runtime.Validation.BooleanValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.#ctor(Abp.Runtime.Validation.BooleanValueValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.AllInstances.IsValidObject">
            <summary>Sets the shim of BooleanValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.Bind(Abp.Runtime.Validation.IValueValidator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.Constructor">
            <summary>Sets the shim of BooleanValueValidator.BooleanValueValidator()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimBooleanValueValidator.IsValidObject">
            <summary>Sets the shim of BooleanValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext">
            <summary>Shim type of Abp.Runtime.Validation.CustomValidationContext</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.#ctor(Abp.Runtime.Validation.CustomValidationContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.AllInstances.IocResolverGet">
            <summary>Sets the shim of CustomValidationContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.AllInstances.ResultsGet">
            <summary>Sets the shim of CustomValidationContext.get_Results()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.ConstructorListOfValidationResultIIocResolver">
            <summary>Sets the shim of CustomValidationContext.CustomValidationContext(List`1&lt;ValidationResult&gt; results, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.IocResolverGet">
            <summary>Sets the shim of CustomValidationContext.get_IocResolver()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimCustomValidationContext.ResultsGet">
            <summary>Sets the shim of CustomValidationContext.get_Results()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute">
            <summary>Shim type of Abp.Runtime.Validation.DisableValidationAttribute</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute.#ctor(Abp.Runtime.Validation.DisableValidationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimDisableValidationAttribute.Constructor">
            <summary>Sets the shim of DisableValidationAttribute.DisableValidationAttribute()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute">
            <summary>Shim type of Abp.Runtime.Validation.EnableValidationAttribute</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute.#ctor(Abp.Runtime.Validation.EnableValidationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimEnableValidationAttribute.Constructor">
            <summary>Sets the shim of EnableValidationAttribute.EnableValidationAttribute()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator">
            <summary>Shim type of Abp.Runtime.Validation.NumericValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.#ctor(Abp.Runtime.Validation.NumericValueValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.AllInstances.IsValidInternalInt32">
            <summary>Sets the shim of NumericValueValidator.IsValidInternal(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.AllInstances.IsValidObject">
            <summary>Sets the shim of NumericValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.AllInstances.MaxValueGet">
            <summary>Sets the shim of NumericValueValidator.get_MaxValue()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.AllInstances.MaxValueSetInt32">
            <summary>Sets the shim of NumericValueValidator.set_MaxValue(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.AllInstances.MinValueGet">
            <summary>Sets the shim of NumericValueValidator.get_MinValue()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.AllInstances.MinValueSetInt32">
            <summary>Sets the shim of NumericValueValidator.set_MinValue(Int32 value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.Bind(Abp.Runtime.Validation.IValueValidator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.Constructor">
            <summary>Sets the shim of NumericValueValidator.NumericValueValidator()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.ConstructorInt32Int32">
            <summary>Sets the shim of NumericValueValidator.NumericValueValidator(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.IsValidInternalInt32">
            <summary>Sets the shim of NumericValueValidator.IsValidInternal(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.IsValidObject">
            <summary>Sets the shim of NumericValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.MaxValueGet">
            <summary>Sets the shim of NumericValueValidator.get_MaxValue()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.MaxValueSetInt32">
            <summary>Sets the shim of NumericValueValidator.set_MaxValue(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.MinValueGet">
            <summary>Sets the shim of NumericValueValidator.get_MinValue()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimNumericValueValidator.MinValueSetInt32">
            <summary>Sets the shim of NumericValueValidator.set_MinValue(Int32 value)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimStringValueValidator">
            <summary>Shim type of Abp.Runtime.Validation.StringValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.#ctor(Abp.Runtime.Validation.StringValueValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.AllowNullGet">
            <summary>Sets the shim of StringValueValidator.get_AllowNull()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.AllowNullSetBoolean">
            <summary>Sets the shim of StringValueValidator.set_AllowNull(Boolean value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.IsValidObject">
            <summary>Sets the shim of StringValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.MaxLengthGet">
            <summary>Sets the shim of StringValueValidator.get_MaxLength()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.MaxLengthSetInt32">
            <summary>Sets the shim of StringValueValidator.set_MaxLength(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.MinLengthGet">
            <summary>Sets the shim of StringValueValidator.get_MinLength()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.MinLengthSetInt32">
            <summary>Sets the shim of StringValueValidator.set_MinLength(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.RegularExpressionGet">
            <summary>Sets the shim of StringValueValidator.get_RegularExpression()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllInstances.RegularExpressionSetString">
            <summary>Sets the shim of StringValueValidator.set_RegularExpression(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllowNullGet">
            <summary>Sets the shim of StringValueValidator.get_AllowNull()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.AllowNullSetBoolean">
            <summary>Sets the shim of StringValueValidator.set_AllowNull(Boolean value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.Bind(Abp.Runtime.Validation.IValueValidator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.Constructor">
            <summary>Sets the shim of StringValueValidator.StringValueValidator()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.ConstructorInt32Int32StringBoolean">
            <summary>Sets the shim of StringValueValidator.StringValueValidator(Int32 minLength, Int32 maxLength, String regularExpression, Boolean allowNull)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.IsValidObject">
            <summary>Sets the shim of StringValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.MaxLengthGet">
            <summary>Sets the shim of StringValueValidator.get_MaxLength()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.MaxLengthSetInt32">
            <summary>Sets the shim of StringValueValidator.set_MaxLength(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.MinLengthGet">
            <summary>Sets the shim of StringValueValidator.get_MinLength()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.MinLengthSetInt32">
            <summary>Sets the shim of StringValueValidator.set_MinLength(Int32 value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.RegularExpressionGet">
            <summary>Sets the shim of StringValueValidator.get_RegularExpression()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimStringValueValidator.RegularExpressionSetString">
            <summary>Sets the shim of StringValueValidator.set_RegularExpression(String value)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute">
            <summary>Shim type of Abp.Runtime.Validation.ValidatorAttribute</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.#ctor(Abp.Runtime.Validation.ValidatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ValidatorAttribute.get_Name()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of ValidatorAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.ConstructorString">
            <summary>Sets the shim of ValidatorAttribute.ValidatorAttribute(String name)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.NameGet">
            <summary>Sets the shim of ValidatorAttribute.get_Name()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValidatorAttribute.NameSetString">
            <summary>Sets the shim of ValidatorAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase">
            <summary>Shim type of Abp.Runtime.Validation.ValueValidatorBase</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.#ctor(Abp.Runtime.Validation.ValueValidatorBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AllInstances.AttributesGet">
            <summary>Sets the shim of ValueValidatorBase.get_Attributes()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AllInstances.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of ValueValidatorBase.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AllInstances.ItemGetString">
            <summary>Sets the shim of ValueValidatorBase.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of ValueValidatorBase.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AllInstances.NameGet">
            <summary>Sets the shim of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AttributesGet">
            <summary>Sets the shim of ValueValidatorBase.get_Attributes()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of ValueValidatorBase.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.Bind(Abp.Runtime.Validation.IValueValidator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.Constructor">
            <summary>Sets the shim of ValueValidatorBase.ValueValidatorBase()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.ItemGetString">
            <summary>Sets the shim of ValueValidatorBase.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.ItemSetStringObject">
            <summary>Sets the shim of ValueValidatorBase.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.ShimValueValidatorBase.NameGet">
            <summary>Sets the shim of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubAbpValidationException">
            <summary>Stub type of Abp.Runtime.Validation.AbpValidationException</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.#ctor(System.String,System.Collections.Generic.IList{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAbpValidationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAbpValidationException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.InitializeStub">
            <summary>Initializes a new instance of type StubAbpValidationException</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAbpValidationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAbpValidationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAbpValidationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator">
            <summary>Stub type of Abp.Runtime.Validation.AlwaysValidValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.InitializeStub">
            <summary>Initializes a new instance of type StubAlwaysValidValueValidator</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.IsValid(System.Object)">
            <summary>Sets the stub of AlwaysValidValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.IsValidObject">
            <summary>Sets the stub of AlwaysValidValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.Name">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubAlwaysValidValueValidator.NameGet">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator">
            <summary>Stub type of Abp.Runtime.Validation.BooleanValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.InitializeStub">
            <summary>Initializes a new instance of type StubBooleanValueValidator</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.IsValid(System.Object)">
            <summary>Sets the stub of BooleanValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.IsValidObject">
            <summary>Sets the stub of BooleanValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.Name">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubBooleanValueValidator.NameGet">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubCustomValidationContext">
            <summary>Stub type of Abp.Runtime.Validation.CustomValidationContext</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubCustomValidationContext.#ctor(System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult},Abp.Dependency.IIocResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubCustomValidationContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubCustomValidationContext.InitializeStub">
            <summary>Initializes a new instance of type StubCustomValidationContext</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubCustomValidationContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubCustomValidationContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute">
            <summary>Stub type of Abp.Runtime.Validation.DisableValidationAttribute</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDisableValidationAttribute</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubDisableValidationAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute">
            <summary>Stub type of Abp.Runtime.Validation.EnableValidationAttribute</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubEnableValidationAttribute</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubEnableValidationAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubICustomValidate">
            <summary>Stub type of Abp.Runtime.Validation.ICustomValidate</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubICustomValidate.#ctor">
            <summary>Initializes a new instance of type StubICustomValidate</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubICustomValidate.Abp#Runtime#Validation#ICustomValidate#AddValidationErrors(Abp.Runtime.Validation.CustomValidationContext)">
            <summary>Sets the stub of ICustomValidate.AddValidationErrors(CustomValidationContext context)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubICustomValidate.AddValidationErrorsCustomValidationContext">
            <summary>Sets the stub of ICustomValidate.AddValidationErrors(CustomValidationContext context)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubIShouldNormalize">
            <summary>Stub type of Abp.Runtime.Validation.IShouldNormalize</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubIShouldNormalize.#ctor">
            <summary>Initializes a new instance of type StubIShouldNormalize</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubIShouldNormalize.Abp#Runtime#Validation#IShouldNormalize#Normalize">
            <summary>Sets the stub of IShouldNormalize.Normalize()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubIShouldNormalize.Normalize">
            <summary>Sets the stub of IShouldNormalize.Normalize()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubIValueValidator">
            <summary>Stub type of Abp.Runtime.Validation.IValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubIValueValidator.#ctor">
            <summary>Initializes a new instance of type StubIValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubIValueValidator.Abp#Runtime#Validation#IValueValidator#IsValid(System.Object)">
            <summary>Sets the stub of IValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubIValueValidator.Abp#Runtime#Validation#IValueValidator#Attributes">
            <summary>Sets the stub of IValueValidator.get_Attributes()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubIValueValidator.AttributesGet">
            <summary>Sets the stub of IValueValidator.get_Attributes()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubIValueValidator.IsValidObject">
            <summary>Sets the stub of IValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubIValueValidator.Abp#Runtime#Validation#IValueValidator#Item(System.String)">
            <summary>Sets the stub of IValueValidator.get_Item(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubIValueValidator.ItemGetString">
            <summary>Sets the stub of IValueValidator.get_Item(String key)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubIValueValidator.ItemSetStringObject">
            <summary>Sets the stub of IValueValidator.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubIValueValidator.Abp#Runtime#Validation#IValueValidator#Name">
            <summary>Sets the stub of IValueValidator.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubIValueValidator.NameGet">
            <summary>Sets the stub of IValueValidator.get_Name()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubNumericValueValidator">
            <summary>Stub type of Abp.Runtime.Validation.NumericValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.InitializeStub">
            <summary>Initializes a new instance of type StubNumericValueValidator</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.IsValid(System.Object)">
            <summary>Sets the stub of NumericValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.IsValidInternal(System.Int32)">
            <summary>Sets the stub of NumericValueValidator.IsValidInternal(Int32 value)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.IsValidInternalInt32">
            <summary>Sets the stub of NumericValueValidator.IsValidInternal(Int32 value)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.IsValidObject">
            <summary>Sets the stub of NumericValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.Name">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubNumericValueValidator.NameGet">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubStringValueValidator">
            <summary>Stub type of Abp.Runtime.Validation.StringValueValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubStringValueValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubStringValueValidator.#ctor(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubStringValueValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubStringValueValidator.InitializeStub">
            <summary>Initializes a new instance of type StubStringValueValidator</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubStringValueValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubStringValueValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubStringValueValidator.IsValid(System.Object)">
            <summary>Sets the stub of StringValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubStringValueValidator.IsValidObject">
            <summary>Sets the stub of StringValueValidator.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubStringValueValidator.Name">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubStringValueValidator.NameGet">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubValidatorAttribute">
            <summary>Stub type of Abp.Runtime.Validation.ValidatorAttribute</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubValidatorAttribute</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubValidatorAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Fakes.StubValueValidatorBase">
            <summary>Stub type of Abp.Runtime.Validation.ValueValidatorBase</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.InitializeStub">
            <summary>Initializes a new instance of type StubValueValidatorBase</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.IsValid(System.Object)">
            <summary>Sets the stub of ValueValidatorBase.IsValid(Object value)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.IsValidObject">
            <summary>Sets the stub of ValueValidatorBase.IsValid(Object value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.Name">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Fakes.StubValueValidatorBase.NameGet">
            <summary>Sets the stub of ValueValidatorBase.get_Name()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator">
            <summary>Shim type of Abp.Runtime.Validation.Interception.MethodInvocationValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.#ctor(Abp.Runtime.Validation.Interception.MethodInvocationValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.CheckInitialized">
            <summary>Sets the shim of MethodInvocationValidator.CheckInitialized()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.HasSingleNullArgument">
            <summary>Sets the shim of MethodInvocationValidator.HasSingleNullArgument()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.InitializeMethodInfoObjectArray">
            <summary>Sets the shim of MethodInvocationValidator.Initialize(MethodInfo method, Object[] parameterValues)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.IsValidationDisabled">
            <summary>Sets the shim of MethodInvocationValidator.IsValidationDisabled()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.MethodGet">
            <summary>Sets the shim of MethodInvocationValidator.get_Method()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.MethodSetMethodInfo">
            <summary>Sets the shim of MethodInvocationValidator.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ObjectsToBeNormalizedGet">
            <summary>Sets the shim of MethodInvocationValidator.get_ObjectsToBeNormalized()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ParameterValuesGet">
            <summary>Sets the shim of MethodInvocationValidator.get_ParameterValues()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ParameterValuesSetObjectArray">
            <summary>Sets the shim of MethodInvocationValidator.set_ParameterValues(Object[] value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ParametersGet">
            <summary>Sets the shim of MethodInvocationValidator.get_Parameters()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ParametersSetParameterInfoArray">
            <summary>Sets the shim of MethodInvocationValidator.set_Parameters(ParameterInfo[] value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.SetDataAnnotationAttributeErrorsObject">
            <summary>Sets the shim of MethodInvocationValidator.SetDataAnnotationAttributeErrors(Object validatingObject)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ThrowValidationError">
            <summary>Sets the shim of MethodInvocationValidator.ThrowValidationError()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.Validate">
            <summary>Sets the shim of MethodInvocationValidator.Validate()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ValidateMethodParameterParameterInfoObject">
            <summary>Sets the shim of MethodInvocationValidator.ValidateMethodParameter(ParameterInfo parameterInfo, Object parameterValue)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ValidateObjectRecursivelyObjectInt32">
            <summary>Sets the shim of MethodInvocationValidator.ValidateObjectRecursively(Object validatingObject, Int32 currentDepth)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.AllInstances.ValidationErrorsGet">
            <summary>Sets the shim of MethodInvocationValidator.get_ValidationErrors()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.CheckInitialized">
            <summary>Sets the shim of MethodInvocationValidator.CheckInitialized()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ConstructorIValidationConfigurationIIocResolver">
            <summary>Sets the shim of MethodInvocationValidator.MethodInvocationValidator(IValidationConfiguration configuration, IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.HasSingleNullArgument">
            <summary>Sets the shim of MethodInvocationValidator.HasSingleNullArgument()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.InitializeMethodInfoObjectArray">
            <summary>Sets the shim of MethodInvocationValidator.Initialize(MethodInfo method, Object[] parameterValues)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.IsValidationDisabled">
            <summary>Sets the shim of MethodInvocationValidator.IsValidationDisabled()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.MethodGet">
            <summary>Sets the shim of MethodInvocationValidator.get_Method()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.MethodSetMethodInfo">
            <summary>Sets the shim of MethodInvocationValidator.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ObjectsToBeNormalizedGet">
            <summary>Sets the shim of MethodInvocationValidator.get_ObjectsToBeNormalized()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ParameterValuesGet">
            <summary>Sets the shim of MethodInvocationValidator.get_ParameterValues()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ParameterValuesSetObjectArray">
            <summary>Sets the shim of MethodInvocationValidator.set_ParameterValues(Object[] value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ParametersGet">
            <summary>Sets the shim of MethodInvocationValidator.get_Parameters()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ParametersSetParameterInfoArray">
            <summary>Sets the shim of MethodInvocationValidator.set_Parameters(ParameterInfo[] value)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.SetDataAnnotationAttributeErrorsObject">
            <summary>Sets the shim of MethodInvocationValidator.SetDataAnnotationAttributeErrors(Object validatingObject)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ThrowValidationError">
            <summary>Sets the shim of MethodInvocationValidator.ThrowValidationError()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.Validate">
            <summary>Sets the shim of MethodInvocationValidator.Validate()</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ValidateMethodParameterParameterInfoObject">
            <summary>Sets the shim of MethodInvocationValidator.ValidateMethodParameter(ParameterInfo parameterInfo, Object parameterValue)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ValidateObjectRecursivelyObjectInt32">
            <summary>Sets the shim of MethodInvocationValidator.ValidateObjectRecursively(Object validatingObject, Int32 currentDepth)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimMethodInvocationValidator.ValidationErrorsGet">
            <summary>Sets the shim of MethodInvocationValidator.get_ValidationErrors()</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor">
            <summary>Shim type of Abp.Runtime.Validation.Interception.ValidationInterceptor</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.#ctor(Abp.Runtime.Validation.Interception.ValidationInterceptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.AllInstances.InterceptIInvocation">
            <summary>Sets the shim of ValidationInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.Bind(Castle.DynamicProxy.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.ConstructorIIocResolver">
            <summary>Sets the shim of ValidationInterceptor.ValidationInterceptor(IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.ShimValidationInterceptor.InterceptIInvocation">
            <summary>Sets the shim of ValidationInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator">
            <summary>Stub type of Abp.Runtime.Validation.Interception.MethodInvocationValidator</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.#ctor(Abp.Configuration.Startup.IValidationConfiguration,Abp.Dependency.IIocResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.CheckInitialized">
            <summary>Sets the stub of MethodInvocationValidator.CheckInitialized()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.CheckInitialized01">
            <summary>Sets the stub of MethodInvocationValidator.CheckInitialized()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.HasSingleNullArgument">
            <summary>Sets the stub of MethodInvocationValidator.HasSingleNullArgument()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.HasSingleNullArgument01">
            <summary>Sets the stub of MethodInvocationValidator.HasSingleNullArgument()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.Initialize(System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of MethodInvocationValidator.Initialize(MethodInfo method, Object[] parameterValues)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.InitializeMethodInfoObjectArray">
            <summary>Sets the stub of MethodInvocationValidator.Initialize(MethodInfo method, Object[] parameterValues)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.InitializeStub">
            <summary>Initializes a new instance of type StubMethodInvocationValidator</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.IsValidationDisabled">
            <summary>Sets the stub of MethodInvocationValidator.IsValidationDisabled()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.IsValidationDisabled01">
            <summary>Sets the stub of MethodInvocationValidator.IsValidationDisabled()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.SetDataAnnotationAttributeErrors(System.Object)">
            <summary>Sets the stub of MethodInvocationValidator.SetDataAnnotationAttributeErrors(Object validatingObject)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.SetDataAnnotationAttributeErrorsObject">
            <summary>Sets the stub of MethodInvocationValidator.SetDataAnnotationAttributeErrors(Object validatingObject)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.ThrowValidationError">
            <summary>Sets the stub of MethodInvocationValidator.ThrowValidationError()</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.ThrowValidationError01">
            <summary>Sets the stub of MethodInvocationValidator.ThrowValidationError()</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.ValidateMethodParameter(System.Reflection.ParameterInfo,System.Object)">
            <summary>Sets the stub of MethodInvocationValidator.ValidateMethodParameter(ParameterInfo parameterInfo, Object parameterValue)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.ValidateMethodParameterParameterInfoObject">
            <summary>Sets the stub of MethodInvocationValidator.ValidateMethodParameter(ParameterInfo parameterInfo, Object parameterValue)</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.ValidateObjectRecursively(System.Object,System.Int32)">
            <summary>Sets the stub of MethodInvocationValidator.ValidateObjectRecursively(Object validatingObject, Int32 currentDepth)</summary>
        </member>
        <member name="F:Abp.Runtime.Validation.Interception.Fakes.StubMethodInvocationValidator.ValidateObjectRecursivelyObjectInt32">
            <summary>Sets the stub of MethodInvocationValidator.ValidateObjectRecursively(Object validatingObject, Int32 currentDepth)</summary>
        </member>
        <member name="T:Abp.Runtime.Validation.Interception.Fakes.StubValidationInterceptor">
            <summary>Stub type of Abp.Runtime.Validation.Interception.ValidationInterceptor</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubValidationInterceptor.#ctor(Abp.Dependency.IIocResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.StubValidationInterceptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Runtime.Validation.Interception.Fakes.StubValidationInterceptor.InitializeStub">
            <summary>Initializes a new instance of type StubValidationInterceptor</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.StubValidationInterceptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Runtime.Validation.Interception.Fakes.StubValidationInterceptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimAndNotSpecification`1">
            <summary>Shim type of Abp.Specifications.AndNotSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndNotSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndNotSpecification`1.#ctor(Abp.Specifications.AndNotSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimAndNotSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndNotSpecification`1.AllInstances.ToExpression">
            <summary>Sets the shim of AndNotSpecification`1.ToExpression()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndNotSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndNotSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndNotSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndNotSpecification`1.Bind(Abp.Specifications.ICompositeSpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndNotSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndNotSpecification`1.ConstructorISpecificationOfT0ISpecificationOfT0">
            <summary>Sets the shim of AndNotSpecification`1.AndNotSpecification`1(ISpecification`1&lt;!0&gt; left, ISpecification`1&lt;!0&gt; right)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndNotSpecification`1.ToExpression">
            <summary>Sets the shim of AndNotSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimAndSpecification`1">
            <summary>Shim type of Abp.Specifications.AndSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndSpecification`1.#ctor(Abp.Specifications.AndSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimAndSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndSpecification`1.AllInstances.ToExpression">
            <summary>Sets the shim of AndSpecification`1.ToExpression()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndSpecification`1.Bind(Abp.Specifications.ICompositeSpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAndSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndSpecification`1.ConstructorISpecificationOfT0ISpecificationOfT0">
            <summary>Sets the shim of AndSpecification`1.AndSpecification`1(ISpecification`1&lt;!0&gt; left, ISpecification`1&lt;!0&gt; right)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAndSpecification`1.ToExpression">
            <summary>Sets the shim of AndSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimAnySpecification`1">
            <summary>Shim type of Abp.Specifications.AnySpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAnySpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAnySpecification`1.#ctor(Abp.Specifications.AnySpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimAnySpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAnySpecification`1.AllInstances.ToExpression">
            <summary>Sets the shim of AnySpecification`1.ToExpression()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAnySpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAnySpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAnySpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimAnySpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAnySpecification`1.Constructor">
            <summary>Sets the shim of AnySpecification`1.AnySpecification`1()</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimAnySpecification`1.ToExpression">
            <summary>Sets the shim of AnySpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimCompositeSpecification`1">
            <summary>Shim type of Abp.Specifications.CompositeSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimCompositeSpecification`1.#ctor(Abp.Specifications.CompositeSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimCompositeSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimCompositeSpecification`1.AllInstances.LeftGet">
            <summary>Sets the shim of CompositeSpecification`1.get_Left()</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimCompositeSpecification`1.AllInstances.RightGet">
            <summary>Sets the shim of CompositeSpecification`1.get_Right()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimCompositeSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimCompositeSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimCompositeSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimCompositeSpecification`1.Bind(Abp.Specifications.ICompositeSpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimCompositeSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimCompositeSpecification`1.ConstructorISpecificationOfT0ISpecificationOfT0">
            <summary>Sets the shim of CompositeSpecification`1.CompositeSpecification`1(ISpecification`1&lt;!0&gt; left, ISpecification`1&lt;!0&gt; right)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimCompositeSpecification`1.LeftGet">
            <summary>Sets the shim of CompositeSpecification`1.get_Left()</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimCompositeSpecification`1.RightGet">
            <summary>Sets the shim of CompositeSpecification`1.get_Right()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimExpressionFuncExtender">
            <summary>Shim type of Abp.Specifications.ExpressionFuncExtender</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionFuncExtender.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionFuncExtender.AndOf1ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Sets the shim of ExpressionFuncExtender.And(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; first, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; second)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionFuncExtender.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionFuncExtender.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimExpressionFuncExtender.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionFuncExtender.ComposeOf1ExpressionOfM0ExpressionOfM0FuncOfExpressionExpressionExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression},System.Linq.Expressions.Expression{``0}})">
            <summary>Sets the shim of ExpressionFuncExtender.Compose(Expression`1&lt;!!0&gt; first, Expression`1&lt;!!0&gt; second, Func`3&lt;Expression,Expression,Expression&gt; merge)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionFuncExtender.OrOf1ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Sets the shim of ExpressionFuncExtender.Or(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; first, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; second)</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimExpressionSpecification`1">
            <summary>Shim type of Abp.Specifications.ExpressionSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionSpecification`1.#ctor(Abp.Specifications.ExpressionSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimExpressionSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimExpressionSpecification`1.AllInstances.ToExpression">
            <summary>Sets the shim of ExpressionSpecification`1.ToExpression()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimExpressionSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimExpressionSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimExpressionSpecification`1.ConstructorExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of ExpressionSpecification`1.ExpressionSpecification`1(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; expression)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimExpressionSpecification`1.ToExpression">
            <summary>Sets the shim of ExpressionSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimNoneSpecification`1">
            <summary>Shim type of Abp.Specifications.NoneSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNoneSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNoneSpecification`1.#ctor(Abp.Specifications.NoneSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimNoneSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNoneSpecification`1.AllInstances.ToExpression">
            <summary>Sets the shim of NoneSpecification`1.ToExpression()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNoneSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNoneSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNoneSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNoneSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNoneSpecification`1.Constructor">
            <summary>Sets the shim of NoneSpecification`1.NoneSpecification`1()</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNoneSpecification`1.ToExpression">
            <summary>Sets the shim of NoneSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimNotSpecification`1">
            <summary>Shim type of Abp.Specifications.NotSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNotSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNotSpecification`1.#ctor(Abp.Specifications.NotSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimNotSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNotSpecification`1.AllInstances.ToExpression">
            <summary>Sets the shim of NotSpecification`1.ToExpression()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNotSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNotSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNotSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimNotSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNotSpecification`1.ConstructorISpecificationOfT0">
            <summary>Sets the shim of NotSpecification`1.NotSpecification`1(ISpecification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimNotSpecification`1.ToExpression">
            <summary>Sets the shim of NotSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimOrSpecification`1">
            <summary>Shim type of Abp.Specifications.OrSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimOrSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimOrSpecification`1.#ctor(Abp.Specifications.OrSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimOrSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimOrSpecification`1.AllInstances.ToExpression">
            <summary>Sets the shim of OrSpecification`1.ToExpression()</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimOrSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimOrSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimOrSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimOrSpecification`1.Bind(Abp.Specifications.ICompositeSpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimOrSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimOrSpecification`1.ConstructorISpecificationOfT0ISpecificationOfT0">
            <summary>Sets the shim of OrSpecification`1.OrSpecification`1(ISpecification`1&lt;!0&gt; left, ISpecification`1&lt;!0&gt; right)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimOrSpecification`1.ToExpression">
            <summary>Sets the shim of OrSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimSpecification`1">
            <summary>Shim type of Abp.Specifications.Specification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecification`1.#ctor(Abp.Specifications.Specification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecification`1.Bind(Abp.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimSpecification`1.Constructor">
            <summary>Sets the shim of Specification`1.Specification`1()</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimSpecification`1.ImplicitOpSpecificationOfT0ExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of Specification`1.op_Implicit(Specification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.ShimSpecificationExtensions">
            <summary>Shim type of Abp.Specifications.SpecificationExtensions</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecificationExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecificationExtensions.AndNotOf1ISpecificationOfM0ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Specifications.ISpecification{``0},Abp.Specifications.ISpecification{``0},Abp.Specifications.ISpecification{``0}})">
            <summary>Sets the shim of SpecificationExtensions.AndNot(ISpecification`1&lt;!!0&gt; specification, ISpecification`1&lt;!!0&gt; other)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecificationExtensions.AndOf1ISpecificationOfM0ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Specifications.ISpecification{``0},Abp.Specifications.ISpecification{``0},Abp.Specifications.ISpecification{``0}})">
            <summary>Sets the shim of SpecificationExtensions.And(ISpecification`1&lt;!!0&gt; specification, ISpecification`1&lt;!!0&gt; other)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecificationExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecificationExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.ShimSpecificationExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecificationExtensions.NotOf1ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Specifications.ISpecification{``0},Abp.Specifications.ISpecification{``0}})">
            <summary>Sets the shim of SpecificationExtensions.Not(ISpecification`1&lt;!!0&gt; specification)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.ShimSpecificationExtensions.OrOf1ISpecificationOfM0ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Specifications.ISpecification{``0},Abp.Specifications.ISpecification{``0},Abp.Specifications.ISpecification{``0}})">
            <summary>Sets the shim of SpecificationExtensions.Or(ISpecification`1&lt;!!0&gt; specification, ISpecification`1&lt;!!0&gt; other)</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubAndNotSpecification`1">
            <summary>Stub type of Abp.Specifications.AndNotSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndNotSpecification`1.#ctor(Abp.Specifications.ISpecification{`0},Abp.Specifications.ISpecification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubAndNotSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndNotSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubAndNotSpecification</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubAndNotSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubAndNotSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndNotSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubAndNotSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndNotSpecification`1.ToExpression">
            <summary>Sets the stub of AndNotSpecification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubAndNotSpecification`1.ToExpression01">
            <summary>Sets the stub of AndNotSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubAndSpecification`1">
            <summary>Stub type of Abp.Specifications.AndSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndSpecification`1.#ctor(Abp.Specifications.ISpecification{`0},Abp.Specifications.ISpecification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubAndSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubAndSpecification</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubAndSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubAndSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubAndSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubAndSpecification`1.ToExpression">
            <summary>Sets the stub of AndSpecification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubAndSpecification`1.ToExpression01">
            <summary>Sets the stub of AndSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubCompositeSpecification`1">
            <summary>Stub type of Abp.Specifications.CompositeSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubCompositeSpecification`1.#ctor(Abp.Specifications.ISpecification{`0},Abp.Specifications.ISpecification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubCompositeSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubCompositeSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubCompositeSpecification</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubCompositeSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubCompositeSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubCompositeSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubCompositeSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubCompositeSpecification`1.ToExpression">
            <summary>Sets the stub of Specification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubCompositeSpecification`1.ToExpression01">
            <summary>Sets the stub of Specification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubExpressionSpecification`1">
            <summary>Stub type of Abp.Specifications.ExpressionSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubExpressionSpecification`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubExpressionSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubExpressionSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubExpressionSpecification</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubExpressionSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubExpressionSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubExpressionSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubExpressionSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubExpressionSpecification`1.ToExpression">
            <summary>Sets the stub of ExpressionSpecification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubExpressionSpecification`1.ToExpression01">
            <summary>Sets the stub of ExpressionSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubICompositeSpecification`1">
            <summary>Stub type of Abp.Specifications.ICompositeSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubICompositeSpecification`1.#ctor">
            <summary>Initializes a new instance of type StubICompositeSpecification</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubICompositeSpecification`1.Abp#Specifications#ISpecification{T}#IsSatisfiedBy(`0)">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubICompositeSpecification`1.Abp#Specifications#ISpecification{T}#ToExpression">
            <summary>Sets the stub of ISpecification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubICompositeSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubICompositeSpecification`1.Abp#Specifications#ICompositeSpecification{T}#Left">
            <summary>Sets the stub of ICompositeSpecification`1.get_Left()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubICompositeSpecification`1.LeftGet">
            <summary>Sets the stub of ICompositeSpecification`1.get_Left()</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubICompositeSpecification`1.Abp#Specifications#ICompositeSpecification{T}#Right">
            <summary>Sets the stub of ICompositeSpecification`1.get_Right()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubICompositeSpecification`1.RightGet">
            <summary>Sets the stub of ICompositeSpecification`1.get_Right()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubICompositeSpecification`1.ToExpression">
            <summary>Sets the stub of ISpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubISpecification`1">
            <summary>Stub type of Abp.Specifications.ISpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubISpecification`1.#ctor">
            <summary>Initializes a new instance of type StubISpecification</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubISpecification`1.Abp#Specifications#ISpecification{T}#IsSatisfiedBy(`0)">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubISpecification`1.Abp#Specifications#ISpecification{T}#ToExpression">
            <summary>Sets the stub of ISpecification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubISpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubISpecification`1.ToExpression">
            <summary>Sets the stub of ISpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubISpecificationParser`1">
            <summary>Stub type of Abp.Specifications.ISpecificationParser`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubISpecificationParser`1.#ctor">
            <summary>Initializes a new instance of type StubISpecificationParser</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubISpecificationParser`1.Abp#Specifications#ISpecificationParser{TCriteria}#Parse``1(Abp.Specifications.ISpecification{``0})">
            <summary>Sets the stub of ISpecificationParser`1.Parse(ISpecification`1&lt;!!0&gt; specification)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubISpecificationParser`1.ParseOf1ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Abp.Specifications.ISpecification{``0},`0})">
            <summary>Sets stubs of Parse(ISpecification`1&lt;!!0&gt; specification)</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubNotSpecification`1">
            <summary>Stub type of Abp.Specifications.NotSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubNotSpecification`1.#ctor(Abp.Specifications.ISpecification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubNotSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubNotSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubNotSpecification</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubNotSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubNotSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubNotSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubNotSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubNotSpecification`1.ToExpression">
            <summary>Sets the stub of NotSpecification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubNotSpecification`1.ToExpression01">
            <summary>Sets the stub of NotSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubOrSpecification`1">
            <summary>Stub type of Abp.Specifications.OrSpecification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubOrSpecification`1.#ctor(Abp.Specifications.ISpecification{`0},Abp.Specifications.ISpecification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubOrSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubOrSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubOrSpecification</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubOrSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubOrSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubOrSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubOrSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubOrSpecification`1.ToExpression">
            <summary>Sets the stub of OrSpecification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubOrSpecification`1.ToExpression01">
            <summary>Sets the stub of OrSpecification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Specifications.Fakes.StubSpecification`1">
            <summary>Stub type of Abp.Specifications.Specification`1</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubSpecification`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubSpecification</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Specifications.Fakes.StubSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Abp.Specifications.Fakes.StubSpecification`1.ToExpression">
            <summary>Sets the stub of Specification`1.ToExpression()</summary>
        </member>
        <member name="F:Abp.Specifications.Fakes.StubSpecification`1.ToExpression01">
            <summary>Sets the stub of Specification`1.ToExpression()</summary>
        </member>
        <member name="T:Abp.Text.Fakes.ShimFormattedStringValueExtracter">
            <summary>Shim type of Abp.Text.FormattedStringValueExtracter</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.#ctor(Abp.Text.FormattedStringValueExtracter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Text.Fakes.ShimFormattedStringValueExtracter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.AllInstances.ExtractStringStringBoolean">
            <summary>Sets the shim of FormattedStringValueExtracter.Extract(String str, String format, Boolean ignoreCase)</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.Constructor">
            <summary>Sets the shim of FormattedStringValueExtracter.FormattedStringValueExtracter()</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ExtractStringStringBoolean">
            <summary>Sets the shim of FormattedStringValueExtracter.Extract(String str, String format, Boolean ignoreCase)</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.IsMatchStringStringStringArrayOutBoolean">
            <summary>Sets the shim of FormattedStringValueExtracter.IsMatch(String str, String format, String[]&amp; values, Boolean ignoreCase)</summary>
        </member>
        <member name="T:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult">
            <summary>Shim type of Abp.Text.FormattedStringValueExtracter+ExtractionResult</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.#ctor(Abp.Text.FormattedStringValueExtracter.ExtractionResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.AllInstances.IsMatchGet">
            <summary>Sets the shim of ExtractionResult.get_IsMatch()</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.AllInstances.IsMatchSetBoolean">
            <summary>Sets the shim of ExtractionResult.set_IsMatch(Boolean value)</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.AllInstances.MatchesGet">
            <summary>Sets the shim of ExtractionResult.get_Matches()</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.AllInstances.MatchesSetListOfNameValue">
            <summary>Sets the shim of ExtractionResult.set_Matches(List`1&lt;NameValue&gt; value)</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.ConstructorBoolean">
            <summary>Sets the shim of ExtractionResult.ExtractionResult(Boolean isMatch)</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.IsMatchGet">
            <summary>Sets the shim of ExtractionResult.get_IsMatch()</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.IsMatchSetBoolean">
            <summary>Sets the shim of ExtractionResult.set_IsMatch(Boolean value)</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.MatchesGet">
            <summary>Sets the shim of ExtractionResult.get_Matches()</summary>
        </member>
        <member name="P:Abp.Text.Fakes.ShimFormattedStringValueExtracter.ShimExtractionResult.MatchesSetListOfNameValue">
            <summary>Sets the shim of ExtractionResult.set_Matches(List`1&lt;NameValue&gt; value)</summary>
        </member>
        <member name="T:Abp.Text.Fakes.StubFormattedStringValueExtracter">
            <summary>Stub type of Abp.Text.FormattedStringValueExtracter</summary>
        </member>
        <member name="M:Abp.Text.Fakes.StubFormattedStringValueExtracter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Text.Fakes.StubFormattedStringValueExtracter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Text.Fakes.StubFormattedStringValueExtracter.InitializeStub">
            <summary>Initializes a new instance of type StubFormattedStringValueExtracter</summary>
        </member>
        <member name="P:Abp.Text.Fakes.StubFormattedStringValueExtracter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Text.Fakes.StubFormattedStringValueExtracter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase">
            <summary>Shim type of Abp.Threading.BackgroundWorkers.BackgroundWorkerBase</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.#ctor(Abp.Threading.BackgroundWorkers.BackgroundWorkerBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.CurrentUnitOfWorkGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_CurrentUnitOfWork()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LString">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LStringCultureInfo">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LStringCultureInfoObjectArray">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name, CultureInfo culture, Object[] args)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LStringObjectArray">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name, Object[] args)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LocalizationManagerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_LocalizationManager()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LocalizationManagerSetILocalizationManager">
            <summary>Sets the shim of BackgroundWorkerBase.set_LocalizationManager(ILocalizationManager value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LocalizationSourceGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_LocalizationSource()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LocalizationSourceNameGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_LocalizationSourceName()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LocalizationSourceNameSetString">
            <summary>Sets the shim of BackgroundWorkerBase.set_LocalizationSourceName(String value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LoggerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_Logger()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of BackgroundWorkerBase.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.SettingManagerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_SettingManager()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.SettingManagerSetISettingManager">
            <summary>Sets the shim of BackgroundWorkerBase.set_SettingManager(ISettingManager value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.Start">
            <summary>Sets the shim of BackgroundWorkerBase.Start()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.Stop">
            <summary>Sets the shim of BackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.ToString01">
            <summary>Sets the shim of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.UnitOfWorkManagerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of BackgroundWorkerBase.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.AllInstances.WaitToStop">
            <summary>Sets the shim of BackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.Bind(Abp.Threading.IRunnable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.Bind(Abp.Threading.BackgroundWorkers.IBackgroundWorker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.Constructor">
            <summary>Sets the shim of BackgroundWorkerBase.BackgroundWorkerBase()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.CurrentUnitOfWorkGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_CurrentUnitOfWork()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LString">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LStringCultureInfo">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LStringCultureInfoObjectArray">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name, CultureInfo culture, Object[] args)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LStringObjectArray">
            <summary>Sets the shim of BackgroundWorkerBase.L(String name, Object[] args)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LocalizationManagerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_LocalizationManager()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LocalizationManagerSetILocalizationManager">
            <summary>Sets the shim of BackgroundWorkerBase.set_LocalizationManager(ILocalizationManager value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LocalizationSourceGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_LocalizationSource()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LocalizationSourceNameGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_LocalizationSourceName()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LocalizationSourceNameSetString">
            <summary>Sets the shim of BackgroundWorkerBase.set_LocalizationSourceName(String value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LoggerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_Logger()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.LoggerSetILogger">
            <summary>Sets the shim of BackgroundWorkerBase.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.SettingManagerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_SettingManager()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.SettingManagerSetISettingManager">
            <summary>Sets the shim of BackgroundWorkerBase.set_SettingManager(ISettingManager value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.Start">
            <summary>Sets the shim of BackgroundWorkerBase.Start()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.Stop">
            <summary>Sets the shim of BackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.ToString">
            <summary>Sets the shim of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.UnitOfWorkManagerGet">
            <summary>Sets the shim of BackgroundWorkerBase.get_UnitOfWorkManager()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.UnitOfWorkManagerSetIUnitOfWorkManager">
            <summary>Sets the shim of BackgroundWorkerBase.set_UnitOfWorkManager(IUnitOfWorkManager value)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerBase.WaitToStop">
            <summary>Sets the shim of BackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager">
            <summary>Shim type of Abp.Threading.BackgroundWorkers.BackgroundWorkerManager</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.#ctor(Abp.Threading.BackgroundWorkers.BackgroundWorkerManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.AddIBackgroundWorker">
            <summary>Sets the shim of BackgroundWorkerManager.Add(IBackgroundWorker worker)</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.AllInstances.AddIBackgroundWorker">
            <summary>Sets the shim of BackgroundWorkerManager.Add(IBackgroundWorker worker)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.AllInstances.Dispose">
            <summary>Sets the shim of BackgroundWorkerManager.Dispose()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.AllInstances.Start">
            <summary>Sets the shim of BackgroundWorkerManager.Start()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.AllInstances.Stop">
            <summary>Sets the shim of BackgroundWorkerManager.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.AllInstances.WaitToStop">
            <summary>Sets the shim of BackgroundWorkerManager.WaitToStop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Bind(Abp.Dependency.ISingletonDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Bind(Abp.Threading.IRunnable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Bind(Abp.Threading.BackgroundWorkers.IBackgroundWorkerManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.ConstructorIIocResolver">
            <summary>Sets the shim of BackgroundWorkerManager.BackgroundWorkerManager(IIocResolver iocResolver)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Dispose">
            <summary>Sets the shim of BackgroundWorkerManager.Dispose()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Start">
            <summary>Sets the shim of BackgroundWorkerManager.Start()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.Stop">
            <summary>Sets the shim of BackgroundWorkerManager.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimBackgroundWorkerManager.WaitToStop">
            <summary>Sets the shim of BackgroundWorkerManager.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase">
            <summary>Shim type of Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.#ctor(Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.AllInstances.Start">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.Start()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.AllInstances.Stop">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.AllInstances.Timer_ElapsedObjectEventArgs">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.AllInstances.WaitToStop">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.Bind(Abp.Threading.IRunnable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.Bind(Abp.Threading.BackgroundWorkers.IBackgroundWorker)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.ConstructorAbpTimer">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.PeriodicBackgroundWorkerBase(AbpTimer timer)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.Start">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.Start()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.Stop">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.Timer_ElapsedObjectEventArgs">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.ShimPeriodicBackgroundWorkerBase.WaitToStop">
            <summary>Sets the shim of PeriodicBackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase">
            <summary>Stub type of Abp.Threading.BackgroundWorkers.BackgroundWorkerBase</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.InitializeStub">
            <summary>Initializes a new instance of type StubBackgroundWorkerBase</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.L(System.String)">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.LString">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.LStringCultureInfo">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.Start">
            <summary>Sets the stub of BackgroundWorkerBase.Start()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.Start01">
            <summary>Sets the stub of BackgroundWorkerBase.Start()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.Stop">
            <summary>Sets the stub of BackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.Stop01">
            <summary>Sets the stub of BackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.ToString">
            <summary>Sets the stub of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.ToString01">
            <summary>Sets the stub of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.WaitToStop">
            <summary>Sets the stub of BackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerBase.WaitToStop01">
            <summary>Sets the stub of BackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager">
            <summary>Stub type of Abp.Threading.BackgroundWorkers.BackgroundWorkerManager</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.#ctor(Abp.Dependency.IIocResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.InitializeStub">
            <summary>Initializes a new instance of type StubBackgroundWorkerManager</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.Start">
            <summary>Sets the stub of BackgroundWorkerManager.Start()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.Start01">
            <summary>Sets the stub of BackgroundWorkerManager.Start()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.Stop">
            <summary>Sets the stub of BackgroundWorkerManager.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.Stop01">
            <summary>Sets the stub of BackgroundWorkerManager.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.WaitToStop">
            <summary>Sets the stub of BackgroundWorkerManager.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubBackgroundWorkerManager.WaitToStop01">
            <summary>Sets the stub of BackgroundWorkerManager.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker">
            <summary>Stub type of Abp.Threading.BackgroundWorkers.IBackgroundWorker</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker.#ctor">
            <summary>Initializes a new instance of type StubIBackgroundWorker</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker.Abp#Threading#IRunnable#Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker.Abp#Threading#IRunnable#Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker.Abp#Threading#IRunnable#WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker.Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker.Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorker.WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager">
            <summary>Stub type of Abp.Threading.BackgroundWorkers.IBackgroundWorkerManager</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.#ctor">
            <summary>Initializes a new instance of type StubIBackgroundWorkerManager</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.Abp#Threading#BackgroundWorkers#IBackgroundWorkerManager#Add(Abp.Threading.BackgroundWorkers.IBackgroundWorker)">
            <summary>Sets the stub of IBackgroundWorkerManager.Add(IBackgroundWorker worker)</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.Abp#Threading#IRunnable#Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.Abp#Threading#IRunnable#Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.Abp#Threading#IRunnable#WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.AddIBackgroundWorker">
            <summary>Sets the stub of IBackgroundWorkerManager.Add(IBackgroundWorker worker)</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubIBackgroundWorkerManager.WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase">
            <summary>Stub type of Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.#ctor(Abp.Threading.Timers.AbpTimer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.DoWork">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.DoWork()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.DoWork01">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.DoWork()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.InitializeStub">
            <summary>Initializes a new instance of type StubPeriodicBackgroundWorkerBase</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.L(System.String)">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.L(System.String,System.Globalization.CultureInfo)">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.LString">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name)</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.LStringCultureInfo">
            <summary>Sets the stub of BackgroundWorkerBase.L(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.Start">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Start()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.Start01">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Start()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.Stop">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.Stop01">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.ToString">
            <summary>Sets the stub of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.ToString01">
            <summary>Sets the stub of BackgroundWorkerBase.ToString()</summary>
        </member>
        <member name="M:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.WaitToStop">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.BackgroundWorkers.Fakes.StubPeriodicBackgroundWorkerBase.WaitToStop01">
            <summary>Sets the stub of PeriodicBackgroundWorkerBase.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.Extensions.Fakes.ShimLockExtensions">
            <summary>Shim type of Abp.Threading.Extensions.LockExtensions</summary>
        </member>
        <member name="M:Abp.Threading.Extensions.Fakes.ShimLockExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Threading.Extensions.Fakes.ShimLockExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Extensions.Fakes.ShimLockExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Extensions.Fakes.ShimLockExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Extensions.Fakes.ShimLockExtensions.LockingObjectAction">
            <summary>Sets the shim of LockExtensions.Locking(Object source, Action action)</summary>
        </member>
        <member name="M:Abp.Threading.Extensions.Fakes.ShimLockExtensions.LockingOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0}})">
            <summary>Sets the shim of LockExtensions.Locking(!!0 source, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Abp.Threading.Extensions.Fakes.ShimLockExtensions.LockingOf1ObjectFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Func{``0},``0})">
            <summary>Sets the shim of LockExtensions.Locking(Object source, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:Abp.Threading.Extensions.Fakes.ShimLockExtensions.LockingOf2M0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Func{``0,``1},``1})">
            <summary>Sets the shim of LockExtensions.Locking(!!0 source, Func`2&lt;!!0,!!1&gt; func)</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.ShimAbpTaskCache">
            <summary>Shim type of Abp.Threading.AbpTaskCache</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimAbpTaskCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimAbpTaskCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimAbpTaskCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimAbpTaskCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimAbpTaskCache.CompletedTaskGet">
            <summary>Sets the shim of AbpTaskCache.get_CompletedTask()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimAbpTaskCache.StaticConstructor">
            <summary>Sets the shim of AbpTaskCache.AbpTaskCache()</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.ShimAsyncHelper">
            <summary>Shim type of Abp.Threading.AsyncHelper</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimAsyncHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimAsyncHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimAsyncHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimAsyncHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimAsyncHelper.IsAsyncMethodMethodInfo">
            <summary>Sets the shim of AsyncHelper.IsAsyncMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimAsyncHelper.RunSyncFuncOfTask">
            <summary>Sets the shim of AsyncHelper.RunSync(Func`1&lt;Task&gt; action)</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimAsyncHelper.RunSyncOf1FuncOfTaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Threading.Tasks.Task{``0}},``0})">
            <summary>Sets the shim of AsyncHelper.RunSync(Func`1&lt;Task`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.ShimRunnableBase">
            <summary>Shim type of Abp.Threading.RunnableBase</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimRunnableBase.#ctor(Abp.Threading.RunnableBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.ShimRunnableBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.AllInstances.IsRunningGet">
            <summary>Sets the shim of RunnableBase.get_IsRunning()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.AllInstances.Start">
            <summary>Sets the shim of RunnableBase.Start()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.AllInstances.Stop">
            <summary>Sets the shim of RunnableBase.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.AllInstances.WaitToStop">
            <summary>Sets the shim of RunnableBase.WaitToStop()</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimRunnableBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimRunnableBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimRunnableBase.Bind(Abp.Threading.IRunnable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.Constructor">
            <summary>Sets the shim of RunnableBase.RunnableBase()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.IsRunningGet">
            <summary>Sets the shim of RunnableBase.get_IsRunning()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.Start">
            <summary>Sets the shim of RunnableBase.Start()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.Stop">
            <summary>Sets the shim of RunnableBase.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableBase.WaitToStop">
            <summary>Sets the shim of RunnableBase.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.ShimRunnableExtensions">
            <summary>Shim type of Abp.Threading.RunnableExtensions</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimRunnableExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimRunnableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimRunnableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimRunnableExtensions.StopAndWaitToStopIRunnable">
            <summary>Sets the shim of RunnableExtensions.StopAndWaitToStop(IRunnable runnable)</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.ShimThreadCultureSanitizer">
            <summary>Shim type of Abp.Threading.ThreadCultureSanitizer</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimThreadCultureSanitizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimThreadCultureSanitizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.ShimThreadCultureSanitizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimThreadCultureSanitizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.ShimThreadCultureSanitizer.Sanitize">
            <summary>Sets the shim of ThreadCultureSanitizer.Sanitize()</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.StubIRunnable">
            <summary>Stub type of Abp.Threading.IRunnable</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubIRunnable.#ctor">
            <summary>Initializes a new instance of type StubIRunnable</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubIRunnable.Abp#Threading#IRunnable#Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubIRunnable.Abp#Threading#IRunnable#Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubIRunnable.Abp#Threading#IRunnable#WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.Fakes.StubIRunnable.Start">
            <summary>Sets the stub of IRunnable.Start()</summary>
        </member>
        <member name="F:Abp.Threading.Fakes.StubIRunnable.Stop">
            <summary>Sets the stub of IRunnable.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.Fakes.StubIRunnable.WaitToStop">
            <summary>Sets the stub of IRunnable.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.Fakes.StubRunnableBase">
            <summary>Stub type of Abp.Threading.RunnableBase</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubRunnableBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.StubRunnableBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubRunnableBase.InitializeStub">
            <summary>Initializes a new instance of type StubRunnableBase</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.StubRunnableBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Threading.Fakes.StubRunnableBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubRunnableBase.Start">
            <summary>Sets the stub of RunnableBase.Start()</summary>
        </member>
        <member name="F:Abp.Threading.Fakes.StubRunnableBase.Start01">
            <summary>Sets the stub of RunnableBase.Start()</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubRunnableBase.Stop">
            <summary>Sets the stub of RunnableBase.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.Fakes.StubRunnableBase.Stop01">
            <summary>Sets the stub of RunnableBase.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.Fakes.StubRunnableBase.WaitToStop">
            <summary>Sets the stub of RunnableBase.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.Fakes.StubRunnableBase.WaitToStop01">
            <summary>Sets the stub of RunnableBase.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.Timers.Fakes.ShimAbpTimer">
            <summary>Shim type of Abp.Threading.Timers.AbpTimer</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.ShimAbpTimer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.ShimAbpTimer.#ctor(Abp.Threading.Timers.AbpTimer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.ElapsedAddEventHandler">
            <summary>Sets the shim of AbpTimer.add_Elapsed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.ElapsedRemoveEventHandler">
            <summary>Sets the shim of AbpTimer.remove_Elapsed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.PeriodGet">
            <summary>Sets the shim of AbpTimer.get_Period()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.PeriodSetInt32">
            <summary>Sets the shim of AbpTimer.set_Period(Int32 value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.RunOnStartGet">
            <summary>Sets the shim of AbpTimer.get_RunOnStart()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.RunOnStartSetBoolean">
            <summary>Sets the shim of AbpTimer.set_RunOnStart(Boolean value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.Start">
            <summary>Sets the shim of AbpTimer.Start()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.Stop">
            <summary>Sets the shim of AbpTimer.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.TimerCallBackObject">
            <summary>Sets the shim of AbpTimer.TimerCallBack(Object state)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.AllInstances.WaitToStop">
            <summary>Sets the shim of AbpTimer.WaitToStop()</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.ShimAbpTimer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.ShimAbpTimer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.ShimAbpTimer.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.ShimAbpTimer.Bind(Abp.Threading.IRunnable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.Constructor">
            <summary>Sets the shim of AbpTimer.AbpTimer()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.ConstructorInt32Boolean">
            <summary>Sets the shim of AbpTimer.AbpTimer(Int32 period, Boolean runOnStart)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.ElapsedAddEventHandler">
            <summary>Sets the shim of AbpTimer.add_Elapsed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.ElapsedRemoveEventHandler">
            <summary>Sets the shim of AbpTimer.remove_Elapsed(EventHandler value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.PeriodGet">
            <summary>Sets the shim of AbpTimer.get_Period()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.PeriodSetInt32">
            <summary>Sets the shim of AbpTimer.set_Period(Int32 value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.RunOnStartGet">
            <summary>Sets the shim of AbpTimer.get_RunOnStart()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.RunOnStartSetBoolean">
            <summary>Sets the shim of AbpTimer.set_RunOnStart(Boolean value)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.Start">
            <summary>Sets the shim of AbpTimer.Start()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.Stop">
            <summary>Sets the shim of AbpTimer.Stop()</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.TimerCallBackObject">
            <summary>Sets the shim of AbpTimer.TimerCallBack(Object state)</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.ShimAbpTimer.WaitToStop">
            <summary>Sets the shim of AbpTimer.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Threading.Timers.Fakes.StubAbpTimer">
            <summary>Stub type of Abp.Threading.Timers.AbpTimer</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.StubAbpTimer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.StubAbpTimer.#ctor(System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.StubAbpTimer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.StubAbpTimer.InitializeStub">
            <summary>Initializes a new instance of type StubAbpTimer</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.StubAbpTimer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Threading.Timers.Fakes.StubAbpTimer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.StubAbpTimer.Start">
            <summary>Sets the stub of AbpTimer.Start()</summary>
        </member>
        <member name="F:Abp.Threading.Timers.Fakes.StubAbpTimer.Start01">
            <summary>Sets the stub of AbpTimer.Start()</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.StubAbpTimer.Stop">
            <summary>Sets the stub of AbpTimer.Stop()</summary>
        </member>
        <member name="F:Abp.Threading.Timers.Fakes.StubAbpTimer.Stop01">
            <summary>Sets the stub of AbpTimer.Stop()</summary>
        </member>
        <member name="M:Abp.Threading.Timers.Fakes.StubAbpTimer.WaitToStop">
            <summary>Sets the stub of AbpTimer.WaitToStop()</summary>
        </member>
        <member name="F:Abp.Threading.Timers.Fakes.StubAbpTimer.WaitToStop01">
            <summary>Sets the stub of AbpTimer.WaitToStop()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimClock">
            <summary>Shim type of Abp.Timing.Clock</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimClock.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimClock.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimClock.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.KindGet">
            <summary>Sets the shim of Clock.get_Kind()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.NormalizeDateTime">
            <summary>Sets the shim of Clock.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.NowGet">
            <summary>Sets the shim of Clock.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.ProviderGet">
            <summary>Sets the shim of Clock.get_Provider()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.ProviderSetIClockProvider">
            <summary>Sets the shim of Clock.set_Provider(IClockProvider value)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.StaticConstructor">
            <summary>Sets the shim of Clock.Clock()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClock.SupportsMultipleTimezoneGet">
            <summary>Sets the shim of Clock.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimClockProviders">
            <summary>Shim type of Abp.Timing.ClockProviders</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimClockProviders.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimClockProviders.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimClockProviders.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClockProviders.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClockProviders.LocalGet">
            <summary>Sets the shim of ClockProviders.get_Local()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClockProviders.StaticConstructor">
            <summary>Sets the shim of ClockProviders.ClockProviders()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClockProviders.UnspecifiedGet">
            <summary>Sets the shim of ClockProviders.get_Unspecified()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimClockProviders.UtcGet">
            <summary>Sets the shim of ClockProviders.get_Utc()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimDateTimeRange">
            <summary>Shim type of Abp.Timing.DateTimeRange</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimDateTimeRange.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimDateTimeRange.#ctor(Abp.Timing.DateTimeRange)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimDateTimeRange.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.AllInstances.EndTimeGet">
            <summary>Sets the shim of DateTimeRange.get_EndTime()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.AllInstances.EndTimeSetDateTime">
            <summary>Sets the shim of DateTimeRange.set_EndTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.AllInstances.StartTimeGet">
            <summary>Sets the shim of DateTimeRange.get_StartTime()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.AllInstances.StartTimeSetDateTime">
            <summary>Sets the shim of DateTimeRange.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.AllInstances.ToString01">
            <summary>Sets the shim of DateTimeRange.ToString()</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimDateTimeRange.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimDateTimeRange.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimDateTimeRange.Bind(Abp.Timing.IDateTimeRange)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.Constructor">
            <summary>Sets the shim of DateTimeRange.DateTimeRange()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.ConstructorDateTimeDateTime">
            <summary>Sets the shim of DateTimeRange.DateTimeRange(DateTime startTime, DateTime endTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.ConstructorIDateTimeRange">
            <summary>Sets the shim of DateTimeRange.DateTimeRange(IDateTimeRange dateTimeRange)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.EndTimeGet">
            <summary>Sets the shim of DateTimeRange.get_EndTime()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.EndTimeSetDateTime">
            <summary>Sets the shim of DateTimeRange.set_EndTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.Last30DaysExceptTodayGet">
            <summary>Sets the shim of DateTimeRange.get_Last30DaysExceptToday()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.Last30DaysGet">
            <summary>Sets the shim of DateTimeRange.get_Last30Days()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.Last7DaysExceptTodayGet">
            <summary>Sets the shim of DateTimeRange.get_Last7DaysExceptToday()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.Last7DaysGet">
            <summary>Sets the shim of DateTimeRange.get_Last7Days()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.LastMonthGet">
            <summary>Sets the shim of DateTimeRange.get_LastMonth()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.LastYearGet">
            <summary>Sets the shim of DateTimeRange.get_LastYear()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.NextMonthGet">
            <summary>Sets the shim of DateTimeRange.get_NextMonth()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.NextYearGet">
            <summary>Sets the shim of DateTimeRange.get_NextYear()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.NowGet">
            <summary>Sets the shim of DateTimeRange.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.StartTimeGet">
            <summary>Sets the shim of DateTimeRange.get_StartTime()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.StartTimeSetDateTime">
            <summary>Sets the shim of DateTimeRange.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.ThisMonthGet">
            <summary>Sets the shim of DateTimeRange.get_ThisMonth()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.ThisYearGet">
            <summary>Sets the shim of DateTimeRange.get_ThisYear()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.ToString">
            <summary>Sets the shim of DateTimeRange.ToString()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.TodayGet">
            <summary>Sets the shim of DateTimeRange.get_Today()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.TomorrowGet">
            <summary>Sets the shim of DateTimeRange.get_Tomorrow()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimDateTimeRange.YesterdayGet">
            <summary>Sets the shim of DateTimeRange.get_Yesterday()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimLocalClockProvider">
            <summary>Shim type of Abp.Timing.LocalClockProvider</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimLocalClockProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimLocalClockProvider.#ctor(Abp.Timing.LocalClockProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimLocalClockProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.AllInstances.KindGet">
            <summary>Sets the shim of LocalClockProvider.get_Kind()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.AllInstances.NormalizeDateTime">
            <summary>Sets the shim of LocalClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.AllInstances.NowGet">
            <summary>Sets the shim of LocalClockProvider.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.AllInstances.SupportsMultipleTimezoneGet">
            <summary>Sets the shim of LocalClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimLocalClockProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimLocalClockProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimLocalClockProvider.Bind(Abp.Timing.IClockProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.Constructor">
            <summary>Sets the shim of LocalClockProvider.LocalClockProvider()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.KindGet">
            <summary>Sets the shim of LocalClockProvider.get_Kind()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.NormalizeDateTime">
            <summary>Sets the shim of LocalClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.NowGet">
            <summary>Sets the shim of LocalClockProvider.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimLocalClockProvider.SupportsMultipleTimezoneGet">
            <summary>Sets the shim of LocalClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimTimingSettingNames">
            <summary>Shim type of Abp.Timing.TimingSettingNames</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimTimingSettingNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimTimingSettingProvider">
            <summary>Shim type of Abp.Timing.TimingSettingProvider</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingProvider.#ctor(Abp.Timing.TimingSettingProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimTimingSettingProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimTimingSettingProvider.AllInstances.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the shim of TimingSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimTimingSettingProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimTimingSettingProvider.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimTimingSettingProvider.Constructor">
            <summary>Sets the shim of TimingSettingProvider.TimingSettingProvider()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimTimingSettingProvider.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the shim of TimingSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimTimingSettingProvider.LString">
            <summary>Sets the shim of TimingSettingProvider.L(String name)</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimUnspecifiedClockProvider">
            <summary>Shim type of Abp.Timing.UnspecifiedClockProvider</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.#ctor(Abp.Timing.UnspecifiedClockProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.AllInstances.KindGet">
            <summary>Sets the shim of UnspecifiedClockProvider.get_Kind()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.AllInstances.NormalizeDateTime">
            <summary>Sets the shim of UnspecifiedClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.AllInstances.NowGet">
            <summary>Sets the shim of UnspecifiedClockProvider.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.AllInstances.SupportsMultipleTimezoneGet">
            <summary>Sets the shim of UnspecifiedClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.Bind(Abp.Timing.IClockProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.Constructor">
            <summary>Sets the shim of UnspecifiedClockProvider.UnspecifiedClockProvider()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.KindGet">
            <summary>Sets the shim of UnspecifiedClockProvider.get_Kind()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.NormalizeDateTime">
            <summary>Sets the shim of UnspecifiedClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.NowGet">
            <summary>Sets the shim of UnspecifiedClockProvider.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUnspecifiedClockProvider.SupportsMultipleTimezoneGet">
            <summary>Sets the shim of UnspecifiedClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimUtcClockProvider">
            <summary>Shim type of Abp.Timing.UtcClockProvider</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUtcClockProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUtcClockProvider.#ctor(Abp.Timing.UtcClockProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.ShimUtcClockProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.AllInstances.KindGet">
            <summary>Sets the shim of UtcClockProvider.get_Kind()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.AllInstances.NormalizeDateTime">
            <summary>Sets the shim of UtcClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.AllInstances.NowGet">
            <summary>Sets the shim of UtcClockProvider.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.AllInstances.SupportsMultipleTimezoneGet">
            <summary>Sets the shim of UtcClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUtcClockProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUtcClockProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.ShimUtcClockProvider.Bind(Abp.Timing.IClockProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.Constructor">
            <summary>Sets the shim of UtcClockProvider.UtcClockProvider()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.KindGet">
            <summary>Sets the shim of UtcClockProvider.get_Kind()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.NormalizeDateTime">
            <summary>Sets the shim of UtcClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.NowGet">
            <summary>Sets the shim of UtcClockProvider.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.ShimUtcClockProvider.SupportsMultipleTimezoneGet">
            <summary>Sets the shim of UtcClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.StubDateTimeRange">
            <summary>Stub type of Abp.Timing.DateTimeRange</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubDateTimeRange.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubDateTimeRange.#ctor(Abp.Timing.IDateTimeRange)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubDateTimeRange.#ctor(System.DateTime,System.DateTime)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubDateTimeRange.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubDateTimeRange.InitializeStub">
            <summary>Initializes a new instance of type StubDateTimeRange</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubDateTimeRange.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubDateTimeRange.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubDateTimeRange.ToString">
            <summary>Sets the stub of DateTimeRange.ToString()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubDateTimeRange.ToString01">
            <summary>Sets the stub of DateTimeRange.ToString()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.StubIClockProvider">
            <summary>Stub type of Abp.Timing.IClockProvider</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubIClockProvider.#ctor">
            <summary>Initializes a new instance of type StubIClockProvider</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubIClockProvider.Abp#Timing#IClockProvider#Normalize(System.DateTime)">
            <summary>Sets the stub of IClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubIClockProvider.Abp#Timing#IClockProvider#Kind">
            <summary>Sets the stub of IClockProvider.get_Kind()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIClockProvider.KindGet">
            <summary>Sets the stub of IClockProvider.get_Kind()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIClockProvider.NormalizeDateTime">
            <summary>Sets the stub of IClockProvider.Normalize(DateTime dateTime)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubIClockProvider.Abp#Timing#IClockProvider#Now">
            <summary>Sets the stub of IClockProvider.get_Now()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIClockProvider.NowGet">
            <summary>Sets the stub of IClockProvider.get_Now()</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubIClockProvider.Abp#Timing#IClockProvider#SupportsMultipleTimezone">
            <summary>Sets the stub of IClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIClockProvider.SupportsMultipleTimezoneGet">
            <summary>Sets the stub of IClockProvider.get_SupportsMultipleTimezone()</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.StubIDateTimeRange">
            <summary>Stub type of Abp.Timing.IDateTimeRange</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubIDateTimeRange.#ctor">
            <summary>Initializes a new instance of type StubIDateTimeRange</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubIDateTimeRange.AttachBackingFieldToEndTime">
            <summary>Attaches delegates to emulate StubIDateTimeRange.EndTime as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubIDateTimeRange.AttachBackingFieldToStartTime">
            <summary>Attaches delegates to emulate StubIDateTimeRange.StartTime as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubIDateTimeRange.Abp#Timing#IDateTimeRange#EndTime">
            <summary>Sets the stub of IDateTimeRange.get_EndTime()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIDateTimeRange.EndTimeGet">
            <summary>Sets the stub of IDateTimeRange.get_EndTime()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIDateTimeRange.EndTimeSetDateTime">
            <summary>Sets the stub of IDateTimeRange.set_EndTime(DateTime value)</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubIDateTimeRange.Abp#Timing#IDateTimeRange#StartTime">
            <summary>Sets the stub of IDateTimeRange.get_StartTime()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIDateTimeRange.StartTimeGet">
            <summary>Sets the stub of IDateTimeRange.get_StartTime()</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubIDateTimeRange.StartTimeSetDateTime">
            <summary>Sets the stub of IDateTimeRange.set_StartTime(DateTime value)</summary>
        </member>
        <member name="T:Abp.Timing.Fakes.StubTimingSettingProvider">
            <summary>Stub type of Abp.Timing.TimingSettingProvider</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubTimingSettingProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubTimingSettingProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubTimingSettingProvider.GetSettingDefinitions(Abp.Configuration.SettingDefinitionProviderContext)">
            <summary>Sets the stub of TimingSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="F:Abp.Timing.Fakes.StubTimingSettingProvider.GetSettingDefinitionsSettingDefinitionProviderContext">
            <summary>Sets the stub of TimingSettingProvider.GetSettingDefinitions(SettingDefinitionProviderContext context)</summary>
        </member>
        <member name="M:Abp.Timing.Fakes.StubTimingSettingProvider.InitializeStub">
            <summary>Initializes a new instance of type StubTimingSettingProvider</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubTimingSettingProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Timing.Fakes.StubTimingSettingProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter">
            <summary>Shim type of Abp.Timing.Timezone.TimeZoneConverter</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.#ctor(Abp.Timing.Timezone.TimeZoneConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.AllInstances.ConvertNullableOfDateTime">
            <summary>Sets the shim of TimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.AllInstances.ConvertNullableOfDateTimeInt32">
            <summary>Sets the shim of TimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.AllInstances.ConvertNullableOfDateTimeNullableOfInt32Int64">
            <summary>Sets the shim of TimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.Bind(Abp.Dependency.ITransientDependency)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.Bind(Abp.Timing.Timezone.ITimeZoneConverter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.ConstructorISettingManager">
            <summary>Sets the shim of TimeZoneConverter.TimeZoneConverter(ISettingManager settingManager)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.ConvertNullableOfDateTime">
            <summary>Sets the shim of TimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.ConvertNullableOfDateTimeInt32">
            <summary>Sets the shim of TimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Int32 tenantId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimeZoneConverter.ConvertNullableOfDateTimeNullableOfInt32Int64">
            <summary>Sets the shim of TimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="T:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper">
            <summary>Shim type of Abp.Timing.Timezone.TimezoneHelper</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.AddIanaMappingsToDictionaryDictionaryOfStringStringXmlNodeList">
            <summary>Sets the shim of TimezoneHelper.AddIanaMappingsToDictionary(Dictionary`2&lt;String,String&gt; timeZoneMappings, XmlNodeList defaultMappingNodes)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.AddWindowsMappingsToDictionaryDictionaryOfStringStringXmlNodeList">
            <summary>Sets the shim of TimezoneHelper.AddWindowsMappingsToDictionary(Dictionary`2&lt;String,String&gt; timeZoneMappings, XmlNodeList defaultMappingNodes)</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.ConvertFromUtcNullableOfDateTimeString">
            <summary>Sets the shim of TimezoneHelper.ConvertFromUtc(Nullable`1&lt;DateTime&gt; date, String toTimeZoneId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.ConvertNullableOfDateTimeStringString">
            <summary>Sets the shim of TimezoneHelper.Convert(Nullable`1&lt;DateTime&gt; date, String fromTimeZoneId, String toTimeZoneId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.ConvertTimeByIanaTimeZoneIdNullableOfDateTimeStringString">
            <summary>Sets the shim of TimezoneHelper.ConvertTimeByIanaTimeZoneId(Nullable`1&lt;DateTime&gt; date, String fromIanaTimeZoneId, String toIanaTimeZoneId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.ConvertTimeFromUtcByIanaTimeZoneIdNullableOfDateTimeString">
            <summary>Sets the shim of TimezoneHelper.ConvertTimeFromUtcByIanaTimeZoneId(Nullable`1&lt;DateTime&gt; date, String toIanaTimeZoneId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.ConvertTimeToUtcByIanaTimeZoneIdNullableOfDateTimeString">
            <summary>Sets the shim of TimezoneHelper.ConvertTimeToUtcByIanaTimeZoneId(Nullable`1&lt;DateTime&gt; date, String fromIanaTimeZoneId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.GetTimezoneMappings">
            <summary>Sets the shim of TimezoneHelper.GetTimezoneMappings()</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.IanaToWindowsString">
            <summary>Sets the shim of TimezoneHelper.IanaToWindows(String ianaTimezoneId)</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.StaticConstructor">
            <summary>Sets the shim of TimezoneHelper.TimezoneHelper()</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.ShimTimezoneHelper.WindowsToIanaString">
            <summary>Sets the shim of TimezoneHelper.WindowsToIana(String windowsTimezoneId)</summary>
        </member>
        <member name="T:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter">
            <summary>Stub type of Abp.Timing.Timezone.ITimeZoneConverter</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter.#ctor">
            <summary>Initializes a new instance of type StubITimeZoneConverter</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter.Abp#Timing#Timezone#ITimeZoneConverter#Convert(System.Nullable{System.DateTime})">
            <summary>Sets the stub of ITimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter.Abp#Timing#Timezone#ITimeZoneConverter#Convert(System.Nullable{System.DateTime},System.Int32)">
            <summary>Sets the stub of ITimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Int32 tenantId)</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter.Abp#Timing#Timezone#ITimeZoneConverter#Convert(System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Int64)">
            <summary>Sets the stub of ITimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="F:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter.ConvertNullableOfDateTime">
            <summary>Sets the stub of ITimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="F:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter.ConvertNullableOfDateTimeInt32">
            <summary>Sets the stub of ITimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Int32 tenantId)</summary>
        </member>
        <member name="F:Abp.Timing.Timezone.Fakes.StubITimeZoneConverter.ConvertNullableOfDateTimeNullableOfInt32Int64">
            <summary>Sets the stub of ITimeZoneConverter.Convert(Nullable`1&lt;DateTime&gt; date, Nullable`1&lt;Int32&gt; tenantId, Int64 userId)</summary>
        </member>
        <member name="T:Abp.Timing.Timezone.Fakes.StubTimeZoneConverter">
            <summary>Stub type of Abp.Timing.Timezone.TimeZoneConverter</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.StubTimeZoneConverter.#ctor(Abp.Configuration.ISettingManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.StubTimeZoneConverter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Timing.Timezone.Fakes.StubTimeZoneConverter.InitializeStub">
            <summary>Initializes a new instance of type StubTimeZoneConverter</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.StubTimeZoneConverter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Timing.Timezone.Fakes.StubTimeZoneConverter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Transactions.Extensions.Fakes.ShimIsolationLevelExtensions">
            <summary>Shim type of Abp.Transactions.Extensions.IsolationLevelExtensions</summary>
        </member>
        <member name="M:Abp.Transactions.Extensions.Fakes.ShimIsolationLevelExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Transactions.Extensions.Fakes.ShimIsolationLevelExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Transactions.Extensions.Fakes.ShimIsolationLevelExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Transactions.Extensions.Fakes.ShimIsolationLevelExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Transactions.Extensions.Fakes.ShimIsolationLevelExtensions.ToSystemDataIsolationLevelIsolationLevel">
            <summary>Sets the shim of IsolationLevelExtensions.ToSystemDataIsolationLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="T:Abp.UI.Fakes.ShimUserFriendlyException">
            <summary>Shim type of Abp.UI.UserFriendlyException</summary>
        </member>
        <member name="M:Abp.UI.Fakes.ShimUserFriendlyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.ShimUserFriendlyException.#ctor(Abp.UI.UserFriendlyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Fakes.ShimUserFriendlyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.AllInstances.CodeGet">
            <summary>Sets the shim of UserFriendlyException.get_Code()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.AllInstances.CodeSetInt32">
            <summary>Sets the shim of UserFriendlyException.set_Code(Int32 value)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.AllInstances.DetailsGet">
            <summary>Sets the shim of UserFriendlyException.get_Details()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.AllInstances.DetailsSetString">
            <summary>Sets the shim of UserFriendlyException.set_Details(String value)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.AllInstances.SeverityGet">
            <summary>Sets the shim of UserFriendlyException.get_Severity()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.AllInstances.SeveritySetLogSeverity">
            <summary>Sets the shim of UserFriendlyException.set_Severity(LogSeverity value)</summary>
        </member>
        <member name="M:Abp.UI.Fakes.ShimUserFriendlyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Fakes.ShimUserFriendlyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Fakes.ShimUserFriendlyException.Bind(Abp.IHasErrorCode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.UI.Fakes.ShimUserFriendlyException.Bind(Abp.Logging.IHasLogSeverity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Abp.UI.Fakes.ShimUserFriendlyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.CodeGet">
            <summary>Sets the shim of UserFriendlyException.get_Code()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.CodeSetInt32">
            <summary>Sets the shim of UserFriendlyException.set_Code(Int32 value)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.Constructor">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorInt32String">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(Int32 code, String message)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorInt32StringString">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(Int32 code, String message, String details)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(SerializationInfo serializationInfo, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorString">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(String message)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorStringException">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorStringLogSeverity">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(String message, LogSeverity severity)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorStringString">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(String message, String details)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.ConstructorStringStringException">
            <summary>Sets the shim of UserFriendlyException.UserFriendlyException(String message, String details, Exception innerException)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.DetailsGet">
            <summary>Sets the shim of UserFriendlyException.get_Details()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.DetailsSetString">
            <summary>Sets the shim of UserFriendlyException.set_Details(String value)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.SeverityGet">
            <summary>Sets the shim of UserFriendlyException.get_Severity()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.ShimUserFriendlyException.SeveritySetLogSeverity">
            <summary>Sets the shim of UserFriendlyException.set_Severity(LogSeverity value)</summary>
        </member>
        <member name="T:Abp.UI.Fakes.StubUserFriendlyException">
            <summary>Stub type of Abp.UI.UserFriendlyException</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.String,Abp.Logging.LogSeverity)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUserFriendlyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUserFriendlyException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.InitializeStub">
            <summary>Initializes a new instance of type StubUserFriendlyException</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Abp.UI.Fakes.StubUserFriendlyException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Abp.UI.Fakes.StubUserFriendlyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Abp.UI.Fakes.StubUserFriendlyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimCheckboxInputType">
            <summary>Shim type of Abp.UI.Inputs.CheckboxInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.#ctor(Abp.UI.Inputs.CheckboxInputType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.Bind(Abp.UI.Inputs.IInputType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.Constructor">
            <summary>Sets the shim of CheckboxInputType.CheckboxInputType()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimCheckboxInputType.ConstructorIValueValidator">
            <summary>Sets the shim of CheckboxInputType.CheckboxInputType(IValueValidator validator)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimComboboxInputType">
            <summary>Shim type of Abp.UI.Inputs.ComboboxInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimComboboxInputType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimComboboxInputType.#ctor(Abp.UI.Inputs.ComboboxInputType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimComboboxInputType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.AllInstances.ItemSourceGet">
            <summary>Sets the shim of ComboboxInputType.get_ItemSource()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.AllInstances.ItemSourceSetILocalizableComboboxItemSource">
            <summary>Sets the shim of ComboboxInputType.set_ItemSource(ILocalizableComboboxItemSource value)</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimComboboxInputType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimComboboxInputType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimComboboxInputType.Bind(Abp.UI.Inputs.IInputType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.Constructor">
            <summary>Sets the shim of ComboboxInputType.ComboboxInputType()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.ConstructorILocalizableComboboxItemSource">
            <summary>Sets the shim of ComboboxInputType.ComboboxInputType(ILocalizableComboboxItemSource itemSource)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.ConstructorILocalizableComboboxItemSourceIValueValidator">
            <summary>Sets the shim of ComboboxInputType.ComboboxInputType(ILocalizableComboboxItemSource itemSource, IValueValidator validator)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.ItemSourceGet">
            <summary>Sets the shim of ComboboxInputType.get_ItemSource()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimComboboxInputType.ItemSourceSetILocalizableComboboxItemSource">
            <summary>Sets the shim of ComboboxInputType.set_ItemSource(ILocalizableComboboxItemSource value)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute">
            <summary>Shim type of Abp.UI.Inputs.InputTypeAttribute</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.#ctor(Abp.UI.Inputs.InputTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.AllInstances.NameGet">
            <summary>Sets the shim of InputTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of InputTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.ConstructorString">
            <summary>Sets the shim of InputTypeAttribute.InputTypeAttribute(String name)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.NameGet">
            <summary>Sets the shim of InputTypeAttribute.get_Name()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeAttribute.NameSetString">
            <summary>Sets the shim of InputTypeAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimInputTypeBase">
            <summary>Shim type of Abp.UI.Inputs.InputTypeBase</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeBase.#ctor(Abp.UI.Inputs.InputTypeBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances.AttributesGet">
            <summary>Sets the shim of InputTypeBase.get_Attributes()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of InputTypeBase.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances.ItemGetString">
            <summary>Sets the shim of InputTypeBase.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of InputTypeBase.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances.NameGet">
            <summary>Sets the shim of InputTypeBase.get_Name()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances.ValidatorGet">
            <summary>Sets the shim of InputTypeBase.get_Validator()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AllInstances.ValidatorSetIValueValidator">
            <summary>Sets the shim of InputTypeBase.set_Validator(IValueValidator value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AttributesGet">
            <summary>Sets the shim of InputTypeBase.get_Attributes()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.AttributesSetIDictionaryOfStringObject">
            <summary>Sets the shim of InputTypeBase.set_Attributes(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimInputTypeBase.Bind(Abp.UI.Inputs.IInputType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.Constructor">
            <summary>Sets the shim of InputTypeBase.InputTypeBase()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.ConstructorIValueValidator">
            <summary>Sets the shim of InputTypeBase.InputTypeBase(IValueValidator validator)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.ItemGetString">
            <summary>Sets the shim of InputTypeBase.get_Item(String key)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.ItemSetStringObject">
            <summary>Sets the shim of InputTypeBase.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.NameGet">
            <summary>Sets the shim of InputTypeBase.get_Name()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.ValidatorGet">
            <summary>Sets the shim of InputTypeBase.get_Validator()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimInputTypeBase.ValidatorSetIValueValidator">
            <summary>Sets the shim of InputTypeBase.set_Validator(IValueValidator value)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem">
            <summary>Shim type of Abp.UI.Inputs.LocalizableComboboxItem</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.#ctor(Abp.UI.Inputs.LocalizableComboboxItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.AllInstances.DisplayTextGet">
            <summary>Sets the shim of LocalizableComboboxItem.get_DisplayText()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.AllInstances.DisplayTextSetILocalizableString">
            <summary>Sets the shim of LocalizableComboboxItem.set_DisplayText(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.AllInstances.ValueGet">
            <summary>Sets the shim of LocalizableComboboxItem.get_Value()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.AllInstances.ValueSetString">
            <summary>Sets the shim of LocalizableComboboxItem.set_Value(String value)</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.Bind(Abp.UI.Inputs.ILocalizableComboboxItem)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.Constructor">
            <summary>Sets the shim of LocalizableComboboxItem.LocalizableComboboxItem()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.ConstructorStringILocalizableString">
            <summary>Sets the shim of LocalizableComboboxItem.LocalizableComboboxItem(String value, ILocalizableString displayText)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.DisplayTextGet">
            <summary>Sets the shim of LocalizableComboboxItem.get_DisplayText()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.DisplayTextSetILocalizableString">
            <summary>Sets the shim of LocalizableComboboxItem.set_DisplayText(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.ValueGet">
            <summary>Sets the shim of LocalizableComboboxItem.get_Value()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimLocalizableComboboxItem.ValueSetString">
            <summary>Sets the shim of LocalizableComboboxItem.set_Value(String value)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType">
            <summary>Shim type of Abp.UI.Inputs.SingleLineStringInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.#ctor(Abp.UI.Inputs.SingleLineStringInputType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.Bind(Abp.UI.Inputs.IInputType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.Constructor">
            <summary>Sets the shim of SingleLineStringInputType.SingleLineStringInputType()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimSingleLineStringInputType.ConstructorIValueValidator">
            <summary>Sets the shim of SingleLineStringInputType.SingleLineStringInputType(IValueValidator validator)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource">
            <summary>Shim type of Abp.UI.Inputs.StaticLocalizableComboboxItemSource</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.#ctor(Abp.UI.Inputs.StaticLocalizableComboboxItemSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.AllInstances.ItemsGet">
            <summary>Sets the shim of StaticLocalizableComboboxItemSource.get_Items()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.AllInstances.ItemsSetICollectionOfILocalizableComboboxItem">
            <summary>Sets the shim of StaticLocalizableComboboxItemSource.set_Items(ICollection`1&lt;ILocalizableComboboxItem&gt; value)</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.Bind(Abp.UI.Inputs.ILocalizableComboboxItemSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.ConstructorILocalizableComboboxItemArray">
            <summary>Sets the shim of StaticLocalizableComboboxItemSource.StaticLocalizableComboboxItemSource(ILocalizableComboboxItem[] items)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.ItemsGet">
            <summary>Sets the shim of StaticLocalizableComboboxItemSource.get_Items()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.ShimStaticLocalizableComboboxItemSource.ItemsSetICollectionOfILocalizableComboboxItem">
            <summary>Sets the shim of StaticLocalizableComboboxItemSource.set_Items(ICollection`1&lt;ILocalizableComboboxItem&gt; value)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubCheckboxInputType">
            <summary>Stub type of Abp.UI.Inputs.CheckboxInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubCheckboxInputType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubCheckboxInputType.#ctor(Abp.Runtime.Validation.IValueValidator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubCheckboxInputType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubCheckboxInputType.InitializeStub">
            <summary>Initializes a new instance of type StubCheckboxInputType</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubCheckboxInputType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubCheckboxInputType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubCheckboxInputType.Name">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubCheckboxInputType.NameGet">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubComboboxInputType">
            <summary>Stub type of Abp.UI.Inputs.ComboboxInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubComboboxInputType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubComboboxInputType.#ctor(Abp.UI.Inputs.ILocalizableComboboxItemSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubComboboxInputType.#ctor(Abp.UI.Inputs.ILocalizableComboboxItemSource,Abp.Runtime.Validation.IValueValidator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubComboboxInputType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubComboboxInputType.InitializeStub">
            <summary>Initializes a new instance of type StubComboboxInputType</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubComboboxInputType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubComboboxInputType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubComboboxInputType.Name">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubComboboxInputType.NameGet">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubIInputType">
            <summary>Stub type of Abp.UI.Inputs.IInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubIInputType.#ctor">
            <summary>Initializes a new instance of type StubIInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubIInputType.AttachBackingFieldToValidator">
            <summary>Attaches delegates to emulate StubIInputType.Validator as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubIInputType.Abp#UI#Inputs#IInputType#Attributes">
            <summary>Sets the stub of IInputType.get_Attributes()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubIInputType.AttributesGet">
            <summary>Sets the stub of IInputType.get_Attributes()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubIInputType.Abp#UI#Inputs#IInputType#Item(System.String)">
            <summary>Sets the stub of IInputType.get_Item(String key)</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubIInputType.ItemGetString">
            <summary>Sets the stub of IInputType.get_Item(String key)</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubIInputType.ItemSetStringObject">
            <summary>Sets the stub of IInputType.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubIInputType.Abp#UI#Inputs#IInputType#Name">
            <summary>Sets the stub of IInputType.get_Name()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubIInputType.NameGet">
            <summary>Sets the stub of IInputType.get_Name()</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubIInputType.Abp#UI#Inputs#IInputType#Validator">
            <summary>Sets the stub of IInputType.get_Validator()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubIInputType.ValidatorGet">
            <summary>Sets the stub of IInputType.get_Validator()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubIInputType.ValidatorSetIValueValidator">
            <summary>Sets the stub of IInputType.set_Validator(IValueValidator value)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem">
            <summary>Stub type of Abp.UI.Inputs.ILocalizableComboboxItem</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.#ctor">
            <summary>Initializes a new instance of type StubILocalizableComboboxItem</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.AttachBackingFieldToDisplayText">
            <summary>Attaches delegates to emulate StubILocalizableComboboxItem.DisplayText as a property with a backing field.</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubILocalizableComboboxItem.Value as a property with a backing field.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.Abp#UI#Inputs#ILocalizableComboboxItem#DisplayText">
            <summary>Sets the stub of ILocalizableComboboxItem.get_DisplayText()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.DisplayTextGet">
            <summary>Sets the stub of ILocalizableComboboxItem.get_DisplayText()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.DisplayTextSetILocalizableString">
            <summary>Sets the stub of ILocalizableComboboxItem.set_DisplayText(ILocalizableString value)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.Abp#UI#Inputs#ILocalizableComboboxItem#Value">
            <summary>Sets the stub of ILocalizableComboboxItem.get_Value()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.ValueGet">
            <summary>Sets the stub of ILocalizableComboboxItem.get_Value()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItem.ValueSetString">
            <summary>Sets the stub of ILocalizableComboboxItem.set_Value(String value)</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItemSource">
            <summary>Stub type of Abp.UI.Inputs.ILocalizableComboboxItemSource</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItemSource.#ctor">
            <summary>Initializes a new instance of type StubILocalizableComboboxItemSource</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItemSource.Abp#UI#Inputs#ILocalizableComboboxItemSource#Items">
            <summary>Sets the stub of ILocalizableComboboxItemSource.get_Items()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubILocalizableComboboxItemSource.ItemsGet">
            <summary>Sets the stub of ILocalizableComboboxItemSource.get_Items()</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubInputTypeAttribute">
            <summary>Stub type of Abp.UI.Inputs.InputTypeAttribute</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubInputTypeAttribute</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubInputTypeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubInputTypeBase">
            <summary>Stub type of Abp.UI.Inputs.InputTypeBase</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeBase.#ctor(Abp.Runtime.Validation.IValueValidator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubInputTypeBase.InitializeStub">
            <summary>Initializes a new instance of type StubInputTypeBase</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubInputTypeBase.Name">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubInputTypeBase.NameGet">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubLocalizableComboboxItem">
            <summary>Stub type of Abp.UI.Inputs.LocalizableComboboxItem</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubLocalizableComboboxItem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubLocalizableComboboxItem.#ctor(System.String,Abp.Localization.ILocalizableString)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubLocalizableComboboxItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubLocalizableComboboxItem.InitializeStub">
            <summary>Initializes a new instance of type StubLocalizableComboboxItem</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubLocalizableComboboxItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubLocalizableComboboxItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType">
            <summary>Stub type of Abp.UI.Inputs.SingleLineStringInputType</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.#ctor(Abp.Runtime.Validation.IValueValidator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.InitializeStub">
            <summary>Initializes a new instance of type StubSingleLineStringInputType</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.Name">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="F:Abp.UI.Inputs.Fakes.StubSingleLineStringInputType.NameGet">
            <summary>Sets the stub of InputTypeBase.get_Name()</summary>
        </member>
        <member name="T:Abp.UI.Inputs.Fakes.StubStaticLocalizableComboboxItemSource">
            <summary>Stub type of Abp.UI.Inputs.StaticLocalizableComboboxItemSource</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubStaticLocalizableComboboxItemSource.#ctor(Abp.UI.Inputs.ILocalizableComboboxItem[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubStaticLocalizableComboboxItemSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.UI.Inputs.Fakes.StubStaticLocalizableComboboxItemSource.InitializeStub">
            <summary>Initializes a new instance of type StubStaticLocalizableComboboxItemSource</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubStaticLocalizableComboboxItemSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.UI.Inputs.Fakes.StubStaticLocalizableComboboxItemSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute">
            <summary>Shim type of Abp.Web.Models.DontWrapResultAttribute</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute.#ctor(Abp.Web.Models.DontWrapResultAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimDontWrapResultAttribute.Constructor">
            <summary>Sets the shim of DontWrapResultAttribute.DontWrapResultAttribute()</summary>
        </member>
        <member name="T:Abp.Web.Models.Fakes.ShimWrapResultAttribute">
            <summary>Shim type of Abp.Web.Models.WrapResultAttribute</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimWrapResultAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimWrapResultAttribute.#ctor(Abp.Web.Models.WrapResultAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Abp.Web.Models.Fakes.ShimWrapResultAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.AllInstances.LogErrorGet">
            <summary>Sets the shim of WrapResultAttribute.get_LogError()</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.AllInstances.LogErrorSetBoolean">
            <summary>Sets the shim of WrapResultAttribute.set_LogError(Boolean value)</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.AllInstances.WrapOnErrorGet">
            <summary>Sets the shim of WrapResultAttribute.get_WrapOnError()</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.AllInstances.WrapOnErrorSetBoolean">
            <summary>Sets the shim of WrapResultAttribute.set_WrapOnError(Boolean value)</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.AllInstances.WrapOnSuccessGet">
            <summary>Sets the shim of WrapResultAttribute.get_WrapOnSuccess()</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.AllInstances.WrapOnSuccessSetBoolean">
            <summary>Sets the shim of WrapResultAttribute.set_WrapOnSuccess(Boolean value)</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimWrapResultAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.ShimWrapResultAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.ConstructorBooleanBoolean">
            <summary>Sets the shim of WrapResultAttribute.WrapResultAttribute(Boolean wrapOnSuccess, Boolean wrapOnError)</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.LogErrorGet">
            <summary>Sets the shim of WrapResultAttribute.get_LogError()</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.LogErrorSetBoolean">
            <summary>Sets the shim of WrapResultAttribute.set_LogError(Boolean value)</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.WrapOnErrorGet">
            <summary>Sets the shim of WrapResultAttribute.get_WrapOnError()</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.WrapOnErrorSetBoolean">
            <summary>Sets the shim of WrapResultAttribute.set_WrapOnError(Boolean value)</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.WrapOnSuccessGet">
            <summary>Sets the shim of WrapResultAttribute.get_WrapOnSuccess()</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.ShimWrapResultAttribute.WrapOnSuccessSetBoolean">
            <summary>Sets the shim of WrapResultAttribute.set_WrapOnSuccess(Boolean value)</summary>
        </member>
        <member name="T:Abp.Web.Models.Fakes.StubDontWrapResultAttribute">
            <summary>Stub type of Abp.Web.Models.DontWrapResultAttribute</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDontWrapResultAttribute</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubDontWrapResultAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Web.Models.Fakes.StubWrapResultAttribute">
            <summary>Stub type of Abp.Web.Models.WrapResultAttribute</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubWrapResultAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubWrapResultAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubWrapResultAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubWrapResultAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubWrapResultAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubWrapResultAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubWrapResultAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubWrapResultAttribute</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubWrapResultAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubWrapResultAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubWrapResultAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubWrapResultAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Abp.Web.Models.Fakes.StubWrapResultAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubWrapResultAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Abp.Web.Models.Fakes.StubWrapResultAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Abp.Web.Models.Fakes.StubWrapResultAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Abp.Xml.Extensions.Fakes.ShimXmlNodeExtensions">
            <summary>Shim type of Abp.Xml.Extensions.XmlNodeExtensions</summary>
        </member>
        <member name="M:Abp.Xml.Extensions.Fakes.ShimXmlNodeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Abp.Xml.Extensions.Fakes.ShimXmlNodeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Abp.Xml.Extensions.Fakes.ShimXmlNodeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Xml.Extensions.Fakes.ShimXmlNodeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Abp.Xml.Extensions.Fakes.ShimXmlNodeExtensions.GetAttributeValueOrNullXmlNodeString">
            <summary>Sets the shim of XmlNodeExtensions.GetAttributeValueOrNull(XmlNode node, String attributeName)</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.AbpDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Abp</summary>
        </member>
    </members>
</doc>
